/*!
\page devHopsanGuiRequirements Hopsan GUI Dependence libraries
HopsanGUI depends on some external libraries. Here is a description on how to build and install them.

\section hopsancore Build The Hopsan Core
todo

\section qwt Build/Install Qwt - Qt Widgets for Technical Applications
\subsection qwt-ubuntu Ubuntu
-# First download a version >=6.0.0 from "http://sourceforge.net/projects/qwt/files/"
-# Unpack into the ExternalDependencies directory
-# The default on Unix is to build only Release mode, if you want to change this, you can do that in qwtbuild.pri (if you want to debug into qwt)
-# Build the qwt project WITHOUT shadowbuild (make sure you uncheck both for debug and release)
-# If compiler complains about Qwt not being configured with SVG support, comment the line "QWT_CONFIG += QwtSvg" in qwtconfig.pri

\subsection qwt-windows Windows (minGW and VC++)
-# First download a version >=6.0.0 from "http://sourceforge.net/projects/qwt/files/"
-# Unpack into the ExternalDependencies directory
-# Build the qwt project WITHOUT shadowbuild (make sure you uncheck both for debug and release)
-# If compiler complains about Qwt not being configured with SVG support, comment the line "QWT_CONFIG += QwtSvg" in qwtconfig.pri

\section pythonqt Build/Install PythonQt 
If you build PythonQt2.0.1 against Qt 4.7 or later you need to blockcomment "CocoaRequestModal = QEvent::CocoaRequestModal," in "com_trolltech_qt_core0.h"
\subsection pythonqt-ubuntu Ubuntu
-# Install the python-dev package (sudo aptitude install python-dev)
-# Download PythonQt from <a href="http://pythonqt.sourceforge.net/" target="_blank">http://pythonqt.sourceforge.net/</a> or check out it direct from its SVN reposotory, "https://pythonqt.svn.sourceforge.net/svnroot/pythonqt"
  -# Place the ex: PythonQt2.0.1 directory in ExternalDependencies, qmake will search for it there
-# Go to the PythonQt directory and open the PythonQt project
  -# Make sure that you select, (uncomment) "CONFIG += debug_and_release build_all only" in common.prf (We need both a debug and a release build)
  -# DEACTIVATE shadow build in both debug and release config
  -# Build the PythonQt project, if you are using a Qt SDK, make sure that you are compiling PythonQt against the same libQt version as the rest of the code. (You may have one version installed in your system and an other in you SDK)
-# In the HopsanGUI project. Go to the project tab and add the following variable:\n
PYTHONQT_PATH = /home/homsi68/pythonqt or whatever your path is
-# In the HopsanGUI project. Go to the project tab and add the folowinf variable:\n
LD_LIBRARY_PATH = /home/homsi68/pythonqt/lib or whatever your path is

\subsection pythonqt-windows-vc Windows (with Visual C++) --Needs update after new project files--
-# Download and install Python 2.6, can be found at <a href="http://python.org/" target="_blank">http://python.org/</a>
-# Download and unzip PythonQt, it is found here: <a href="http://pythonqt.sourceforge.net/" target="_blank">http://pythonqt.sourceforge.net/</a> or check out it direct from its SVN reposotory, "https://pythonqt.svn.sourceforge.net/svnroot/pythonqt"
-# Open QT Creator and the PythonQT project. Use release settings. Deactivate shadowbuild.
-# Go to the project tab and add the following build variables:\n
PYTHON_PATH = c:\\Python26 \n
PYTHON_LIB  = c:\\Python26\\libs
-# Add the PythonQt*.*.*\\src folder to the "Include Path" in your project.
-# Build PythonQt in release mode.
-# If you want to run the tests add the PythonQt*.*.*\\lib directory to your path (in build environment)
-# Add the PYTHONQT_PATH = C:\\Users\\petno25\\Downloads\\PythonQt2.0.1 (or whatever your path is), to the HopsanGui build environment
-# Add the  C:\\Users\\petno25\\Downloads\\PythonQt2.0.1\\lib (or whatever your path is) to the PATH variable in your HopsanGui build environment

\subsection pythonqt-windows-mingw Windows (with MinGW)
-# Download and install Python 2.6, can be found at <a href="http://python.org/" target="_blank">http://python.org/</a>
-# Download and unzip PythonQt, it is found here: <a href="http://pythonqt.sourceforge.net/" target="_blank">http://pythonqt.sourceforge.net/</a> or check out it direct from its SVN repository, "https://pythonqt.svn.sourceforge.net/svnroot/pythonqt"
  -# Make sure that PythonQt2.0.1 is located in the ExternalDependencies folder in the HopsanNg project
-# Open QT Creator and the PythonQT project.
  -# Go to the project tab and add the following variables in BOTH Debug and Release mode:\n
PYTHON_PATH = c:\\Python26 \n
PYTHON_LIB  = c:\\Python26\\libs
  -# DEACTIVATE shadow build in both debug and release config
  -# PythonQt uses wired includes, you will need to add the PythonQt/src dir to the INCLUDEPATH, one way to do this is to add (your own version of): "INCLUDEPATH += C:\Users\petno25\Desktop\subversion\HOPSAN++MinGW\ExternalDependencies\PythonQt2.0.1\src" to the common.prf file. 
  -# Make sure that you select, (uncomment) "CONFIG += debug_and_release build_all only" in common.prf (We need both a debug and a release build)
  -# Change the \#ifdef WIN32 in the code in file "PythonQtConversion.cpp" row 676 and 1041 to something else e.g. apaWIN32 so it is NOT true when you compile. 
  -# In the file 'python.prf' Change the row:\n
"win32:LIBS += $(PYTHON_LIB)/python$${PYTHON_VERSION}$${DEBUG_EXT}.lib",  to:\n
"win32:LIBS += -L$(PYTHON_LIB) -lpython$${PYTHON_VERSION}"
  -# In the file 'pythonQt.prf' Change the row:\n
"win32::LIBS += $$PWD/../lib/PythonQt$${DEBUG_EXT}.lib",  to:\n
"win32::LIBS += -L$$PWD/../lib -lPythonQt$${DEBUG_EXT}"
  -# In the file 'pythonQt_QtAll.prf' Change the row:\n
"win32::LIBS += $$PWD/../lib/PythonQt_QtAll$${DEBUG_EXT}.lib",  to:\n
"win32::LIBS += -L$$PWD/../lib/ -lPythonQt_QtAll$${DEBUG_EXT}"
  -# Build PythonQt in release and debug mode. (Both will be build at once if you have selected that in common.prf)

\subsection pythonqt-windows-mingw_old Windows (with MinGW) OLD VERSION (Try the one above first)
Some useful information can be found at <a href="http://www.emmestech.com/moron_guides/moron1.html" target="_blank">http://www.emmestech.com/moron_guides/moron1.html</a> and <a href="http://www.mingw.org/wiki/FAQ" target="_blank">http://www.mingw.org/wiki/FAQ</a>
-# Download and install Python 2.6, can be found at <a href="http://python.org/" target="_blank">http://python.org/</a>
-# Download Pexports from MinGW at <a href="http://sourceforge.net/projects/mingw/files/" target="_blank">http://sourceforge.net/projects/mingw/files/</a> (Browse to MinGW/pexports/pexports-0.44-1)
  -# Put the pexports program (pexports.exe) in MinGW/bin 
  -# Create a file called "pydistutils.cfg" that contain:\n
[build]\n
compiler=mingw32
  -# Next, use pexports to export the python dll symbols. The library can typically be found under C:\\WINDOWS\\system32. Use the following command:\n
pexports c:/WINDOWS/system32/python26.dll >python26.def\n
Or the following for 64-bit Windows:\n
pexports c:/WINDOWS/syswow64/python26.dll >python26.def\n
-# Then, build an import library
  -# Use the following command to build the library:\n
dlltool -D c:/WINDOWS/system32/python26.dll -d python26.def -l libpython26.a\n
Or the following for 64-bit Windows:\n
dlltool -D c:/WINDOWS/syswow64/python26.dll -d python26.def -l libpython26.a\n
  -# Move "libpython26.a" to "/mingw/lib" in your Qt directory.
-# Download and unzip PythonQt, it is found here: <a href="http://pythonqt.sourceforge.net/" target="_blank">http://pythonqt.sourceforge.net/</a> or check out it direct from its SVN reposotory, "https://pythonqt.svn.sourceforge.net/svnroot/pythonqt"
-# Open QT Creator and the PythonQT project. Use release settings.
  -# Go to the project tab and add the following variables:\n
PYTHON_PATH = c:\\Python26 \n
PYTHON_LIB  = c:\\Python26\\libs
  -# Add c:\\pythonqt\\lib or similar to LD_LIBRARY_PATH environment variable under the project tab. 
  -# Change the win32 in the code in file "PythonQtConversion.cpp" row 676 and 1041 to something else e.g. apwin32 so it is NOT true when you compile. 
  -# Change the row:\n
win32:LIBS += $(PYTHON_LIB)/python$${PYTHON_VERSION}$${DEBUG_EXT}.lib\n
in the file 'python.prf' to:\n
win32:LIBS += -L. -lpython$${PYTHON_VERSION}
  -# Change the row:\n
win32::LIBS += $$PWD/../lib/PythonQt$${DEBUG_EXT}.lib\n
in the file 'pythonQt.prf' to:\n
win32::LIBS += -L$$PWD/../lib -lPythonQt$${DEBUG_EXT}
  -# Change the row:\n
win32::LIBS += $$PWD/../lib/PythonQt_QtAll$${DEBUG_EXT}.lib\n
in the file 'pythonQt_QtAll.prf' to:\n
win32::LIBS += -L$$PWD/../lib/ -lPythonQt_QtAll$${DEBUG_EXT}
  -# Build PythonQt in release mode.
  -# In the HopsanGUI project. Go to the project tab and add the following variables:\n
PYTHONQT_PATH = c:\\pythonqt\n
PYTHON_PATH = c:\\python26 or whatever your paths are
  -# Also add the path to the PythonQt libs in PATH (in Qt or in system) e.g. c:\\pythonqt\\lib
-# Enjoy!
*/
