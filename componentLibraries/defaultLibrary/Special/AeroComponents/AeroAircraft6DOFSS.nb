(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    763667,      15169]
NotebookOptionsPosition[    748532,      14729]
NotebookOutlinePosition[    749295,      14755]
CellTagsIndexPosition[    749252,      14752]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["CdW"], "Input",
 CellChangeTimes->{{3.666372109795169*^9, 3.666372117191681*^9}}],

Cell[CellGroupData[{

Cell["AeroAircraft6DOFSS", "Title",
 CellChangeTimes->{{3.6058538552194967`*^9, 3.6058538650474787`*^9}}],

Cell["Flight dynamics model of super-sonic aircraft", "Subtitle",
 CellChangeTimes->{{3.6058538375177264`*^9, 3.605853874265401*^9}}],

Cell[BoxData[
 RowBox[{"<<", "C:\\\\Hopsan\\Compgen\\CompgenNG.mx"}]], "Input",
 CellChangeTimes->{{3.5772037650720577`*^9, 3.5772037650780582`*^9}, {
  3.611474457184202*^9, 3.611474523938877*^9}, {3.6114745588913717`*^9, 
  3.61147456057154*^9}}],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}]], "Input",
 PageWidth->WindowWidth],

Cell[BoxData[
 RowBox[{
  RowBox[{"path", "=", 
   RowBox[{"ToFileName", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<C:\>\"", ",", "\"\<HopsanTrunk\>\"", ",", 
      "\"\<ComponentLibraries\>\"", ",", "\"\<defaultLibrary\>\"", ",", 
      "\"\<Special\>\"", ",", "\"\<AeroComponents\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.5812370486543765`*^9, {3.58123709880517*^9, 3.5812371004744773`*^9}, {
   3.6058542560025706`*^9, 3.605854267307701*^9}}],

Cell[TextData[{
 "\nFlight dynamics simulation is used in a wide range of applications from \
aircraft design to operations evaluation and flight training. This means that \
the models are to be used over very different time scales. For aircraft \
design very detailed flight dynamics characteristics needs to be evaluated, \
while much simplified models can be used for simualation of missions and to \
represent other planes in pilot training (and computer games). In order to \
meat these ends of the spectra the simulation models must incorporate a lot \
of detail while on the other hand be robust so that they can be used also \
with large time steps. Here the symbolic math packages ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is used. By using symbolic manipulation high level differential algebraic \
equations can be transformed into low level code ( C++) where highly robust \
numerical solvers are integrated into the model, for highly efficient robust \
simulation."
}], "Abstract",
 CellChangeTimes->{{3.6058539492108946`*^9, 3.605853978129786*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
4PtD7knU3/sGD0T37f8AXpnPOg==
    "], {
     {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxNm3fcFsW5hvd91ZjE2LsxCqigiIrYNUqxYQcL2AVBRcUuVkQQRAUrAlZU
FAtFEVARG8WGvffee6JJTPEc47kv5tqDf+xvr3e+2dmZZ2Zn77l3vpaHn7D3
8c2qqk5crKoWyfm1RlV9nDNpb4a/zDl/qt4Kf53zb3K8Ef4850VzvB3+NufF
c7wb/j7n3+V4J/yXnH+b4/3wP3JeIsfr4U+qcq/3wn/L+fc5Pgj/M+c/5Pg4
/EvOy+b4JFzlWC6nT3Nu5Fg+/GHO/855yRyfhxfJsWJ4rVR8x/DB4S9yXjTH
SuHPcm7mWCH8Zc6L5Vg5/HXOi+dYNfwjZedoHf4259/l+GP4u5x/n2P18F9y
XiLHn6hrzmvkvEGOv4WXybFW+Jucf5tjtfBfc14yR4vw9zkvlaNl+JLU8785
/2+OH5K2dI5W4a9y/k2OVcL/pL452oT/RftyrBv+N23KsV74P7QjR9vwP4hT
jnXCf8952Rxrh3+ivBzrh/+HtuZoF/4o559yXirHao3Sjj9TJ9qdYyNCn3q2
CG/KmAi3DG9G/4VbhTcPLx3eKLwDYyW8dnjLqgyiNcObBJcJtw/vyLgJrxXe
gj4ObxzeKfwL8czRgfGU9NbhrRkf4bbhjuF1G6WOuzGekr5+fndiHIQ3CHeh
PeENw9szXsPrhLdiLIbbhLeh78Ltwp3DZ4bHhx8ILxfuEN45vEa4Y3i/8Irh
zcK7hjdvlPsfmGOlpG+R33sQw/A24e7hVcJbhfcKrxDeNLxL+GfGUY724ZWT
vmV4z/CfwtuF9w0vH94k3DX8x/Cfw3uH1wx3CvcItwh3DvcMtwx3Ce8fXj28
bXif8A6NUsejc6ya9K3zu1v4v4zfHBuHWyV9+/ABPLfh9cLbhdcO7xQ+hHaG
B4evC68X3i18eLhtePdwH/olvGu4d3j98B7hvjwb4b3CR4bbhfcMHxHeKNw9
3C/cJrxLuFd4w3C38FHhvRul7mfk2CTpPfL7+PCm4Z7hE8KbhfcPnxhuH94n
fGx4i/CB4ZPD64R3Dh8a3jJ8UPgU+jF8QPik8Fbhg8OnhrcJHxo+LbxT+Jjw
0HCvRqnLBTm2TXrv/D4rvF348PDZ4Y7hPuGB4e3DR4UH81yFDwufHu4U7hs+
J9w5fER4ULhDeL/wceEu4SPD54a3Dh8SHhDeOXxseFi4a7h/+PzwLuHjwsPD
xzdKHcfm2DHpR+f3eYyHcL/wkPCu4RPCF/EshU8MjwhvHN433D+8e/ik8Mjw
HuGTwxfTL+HTw1eE9wmfER4V3jd8ZvhKYhUeHh4f7hE+Ozwm3D18WvjycO/w
BeGbw/uFzwqPDh8evjB8S7hbeED4snDP8Dnhq8MHhYeErw8fED43fG344PB5
4XHhQ8PDwjeGDwufH74pPLBRYnNrjv2TPii/rwkfEh4aviHcOtw1fFi4T/ii
8ITwCeGx4enhI8IXh+8IHxm+JDwxfFT40vCk8LHhUeG7eA7Dl4enhPuGR4Zv
D+8ZPiV8Sbhf+LLwZPoxPCY8LTyiUep7T47+Sb8yv6eGTwxfFZ4RvrpR/v5o
jpOSfk1+3xc+Ljw6fHd4QHhc+P7wMeErwneG9wqfGr40fEr42vBM+/ECrz09
fGN4lvEcbh2GhieHZ4fPD98ZnhMeEp4YfoRnJjw1PDd8L/VtlHpelPRp4Xnh
V7lvjgcY9znfnvPDSX+J9uaYmd+v53xDjofC7+d8V47Hwh/mPD3HE+GPc74v
x/zwmznfnOOR8OecczzbKO+IjZxXvwzPy/F8fn/K/XM8Hf6a8nK8SHpVdNEy
VdEevDfRA+gZtBD6BF2EXkKfoJ3QS+gNtBMaCX2C5kELoTfQWmghdA46Cr2E
VkE7oaPQJ+/m/pOoX6PoK/QS2uAZxkmOlxvlPY6OQJOgm9a0nugotFOLqugo
tFPLqmgttBPaBm2G7kKroK/QSK2qopfQVOiZt3Of23LMaRSthaZCV6Cv0FHo
DfQSGgkdgl5CI6E30EvoJPQGOgTtwTsdXYQWQmOgl9Ba6Bn0CVqEdzS6aUPb
gx7Ztiq/0WzoK7QQ2gndxbsM/YZeQp+gf9BCaA90FNoJrYJ2Qi+hT9BO6CK0
AdoMDcZ7GS2HdkKHoLvQWmiVcxKDW8MPVUUj8R7nXck7c/eq1A8Ng+bpHEb/
oJ26VEVHoZ3QJGgkNAkaAx2FFkIX8V5G/3SqikZFB6JF0V1oLfQVGgYNhA5B
S/AeRxehc9BLaAbe4+glNAnaCY2ExkAvoXnQJOgrtBCaBO2EXkK3oM3Qb+gx
tCjaGP2JXkJfoR/ODt8SfrAq2g9dh97Y0Xcl7wU0D3oJTYJ2QjOhMdA2aCF0
C7rpoKrEDi2EXkJvoKnQRWh4dAuainkYbYYuQv+gr9AzvNPRXWikXlXRbGgk
tAd6CY2E3kAvoZHQIWgqNFLvqugfdBI6BI2KFkWDsYY4pir1Q1+hkdAkrC/Q
RWiMdXxH8L5u73sTPYCeQQuhT9BF6CX0CdoJvYTeQDuhkdAnaB60EHqD9w5a
CJ2DjkIvoVXQTugo9AlaEV2K7kJfoZfQBmg2dA7vbt7jaAk0CboC7YQmQUeh
ndAe6Ci0E9oD3XRmVdqMNkN7oVXQV2gkdAh6CU01uCo6E716eFW0FppqSFX0
FTrqvKroowurUi56CY2E3kAvoZHQG+gQtAfvdHQRWgiNgV5Cb6Fn0CfoEN7R
6Cu0E5oEfYIm4b2PZkNfoYXQTugu3mXoN/QS+gT9gxZCe6Cj0E5oFbQTmgl9
gia6qir1RpuhwXgvo+XQTugQdBdaC63C+oX1AmsENBLvcXQymgTNjB5Aw6B5
0BXoH7QTmgQdhXa6qSoaCV2CxkBHoYVursp7Gf2DnkGjogPRougutNb4qmgY
9A86BC3BexxdhFa6rSrtQcOjl9AkaCc0EhoDvYTmQZOgr9BCaBK0E3oJ3YI2
Q7+hx9CiaGP0J3oJfYV+YO3J2pl1IroO/YZu4fnc2ecazYNeQpOgndBLaAx0
0L1VqSs6Cu2EPkELoZdYl6Gp0EVoD3QLmop5GG2GNkL/oK+ucF5Cd6GR0A9o
NjTS3KroJXTSvPD1jaKRHquKpkIjoVXQP2ikJ6ryTuXdyjof7YT+ebIq+gqN
9HhVdBHrx/nOjbwjng6/FZ7QLNoDPYMWerYqugi99FxVtBN66fmqaCc00gvh
l8NjmkXz8N5BCz1TFR2FXnqxKtoJHfVSVbQiunRO+BpimGNWo6xtmaufSvo7
4Tua5T3+Xs5TmkVXfJDz3c2ioz7K+Z5m0VFv5HxTs2it13K+vlm02Sc5398s
+uoz/t4segmdiV5FB37BfZpFa31F2c2irxZ4OlXRS1cwHppFW5H2WVV8ob9W
RQstbj701fL+nXy5ZIFOIg8a6QvzLGIa1+M7LdBAVbnnV1XRZnhWaDK02Yqm
8bfFTPumKh4Xf/vW+3D+zvp87v0WtU5fWt535uPaUc3i7/wc/qEqWo76oLfQ
XejGv1dFy+GVrSKv6pm/4Yn9qyrabAn/hm5czfJ+8Npv6Idm0ag/modr/+O9
/mCMvvc+q1lmXRfy4aH9T1U07ZLW7yfH/j+tB+X87LOwlPf50brRh682Sqx/
sqyljOXXxpbr8Lt4jtB86LkN7d/KcdFCblkVzfeLacQZ7Upe9Ci6FP3Zqip6
lbSW5mll35FnBfsPvUoaehHdiM5Es6JdWxsXtBZxai23MeboH/6+tuWsY39z
X+rVxjzrGlvKX9X0FSyfWKNvVzO26GTS2srrG2s0M39fX25nvNDP/L2dvIHt
RT8TH+KIVt7I2JLe3n6njSsZq6WNLZp4OedqYreMcdtY7mB7lzW2HeRNjNty
xn8929XWuC1vfNp7L8rb1HQ0+WbGBB3OmGXs3md/rGQMt5C3ND4r+/ctZbQ6
6wfWEawRKAttv4VxW8X6bCVvbb+vaJ+281rydqqK3u5cFe3OmNzO+q9uPLeT
OxqfPxlb7s06BS9yA5myO5qnk3Fbwzgs63hexvivaZypX2vbRXxa2i/byzvY
xlbGcAeZ9QIaHa3OOqJLVdYa2xvDtYzzjvJO9kUL+3FLryVvZ+tDGV2tzy62
sY0x3EVm3UGb1zX+3Ju1TFdjvo59t6t5dqsWrpGIMd4OXgr+ye6ms07hYM3C
OoX1CeuUbrZrA/uos+nEtpvprFk4WL/sbdw2tC38Zo3P2oRyWQftZQw3MlbE
p71xpi0djNV+cg9jsolx3sf8+xqTTW07awD0Ntq7p+msfXp4bU9jspmxJS6b
G0/q+WfbQhxYFxGbg+SDrf+WxupgGU2FvmIdxProAMs80BhuZTwPkclLvVnj
7GcMtzYm+1s3yuhlfXrb3m2NbW/5cMvZzthyb9ZoveyLbey7w83Tx3h2NG47
WQdi38f0vsaqk3VjncZ67Sjbtb3xPEruZ3129b78Zh13tG3pYsxPMA/rrwPN
c4B12802sj5kncg9Wf+w9mN9R1+iXelbfu9k/9LersaTe+9i/I+XT7CPKOcg
47+T/Xic15K3k2OSOeNE68PakDbsbRuJyx7G8GT5FOu8p3EjJt2sPwfrRP5O
Waw3T7acTqaf4rWsJVlzsvY83b7Y3f4dYJn8/XTrc4ZxYK1InM6UzzL+3e0v
frMWZu15qvWhvJ7GuYex3dc40/62zr1cw3PEWpV1Heu764zP/sZ2kMyalHUs
69lBtvcA+5o2H2g8zzV9sG0/yJic4LX0xWDzD6nKQR7WsKy1WHMNM1aH2pZh
8vm28WD7hd+sQ4c7Hno4fohdL+N8unkob7jp+PWsOVkzs0Zm7coalvUmv1k7
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
fcSv8rBHDa+DfffDzcNe8rOMCfvuLzQ/cxJz08vWf7htYQ/+CMthrxj1+Tjn
55pln9XSVdmbBOML4quNND/eHB4dXu4M6zPPfjnb+D/fLHleCb/QdF99VfbY
49swT6IZ0AlDvc8o74s/d6XjlnpdYax4Jq70vozrseYhPz4dHh3/1zDaPA+a
jlf8svlvMB1fDE+MfX1Xm5/6XiNfLeMH4p9d67NGnqtsF3EY7X0X+OGWz/9c
XCfje+F54XdRzvXed4HXbZmvyXjUeIo3+HyR5wbT+R+NG2W8RhgvkedvvPnx
F/EZ8bHfMP1m5xXaw9yCr3OzzyB7KfF68LT5n45bzE858BvmnyDPlSf4HN9q
OQ/bLuqGr3mb43CBx2+Z5L/Na/nfh9tlyoTxM3mmJzYX7quE8cnxKSc5rsgz
yXSeuWk+d3iid5jO/3dMlkmH8Tk/MP8ky5xiOnPGnZaPh3qXZZIO45+/Zx6Y
/5GZKpMf/xTv9HHLJB2eavqT5plk/95k3+HFMu8wh+Cn4qvipZMf//cd89wj
PyVPcX6612v535yZpvM/OzO810fmIR0fl7mJeYm4TTcP5dxnnjnGkL5gTp1l
/k/kuxzPzLnPm+cB0+db/3et50yZ//150Dy08UGfhRebZR74qCp+MM8I3wXY
+/qwzFz1iMz/Gc2WyQ/j5eI3z5HxjJn7XjSda5kbXzDPdOfUuaYP91605QvT
ycP/KOE748lTJr4znvNL8j3Ox497r69k0vm/p0d/da95Mv40cy7zJ9c+YX7q
9uivyue+H1ZlXmEuY25jTx8ed/2942njxpz6zK/SYfxw0l+QR3rtS86lvHvw
vplvmevZP4pfPt9ymN+Yu2dZ5/nWh3mUOZQ5baw803mSbyePqVVeNc+V1v86
60Z/v+K8S57/nwubZd5oURX/lD2q40x/oJ7nmuW5YS5Z8L9nzk9wPT8t2Bfe
KHPSW6Yzxj90nDMXvmE5zENvNxd+14Pn+MyR/wmfA+ag25x73pV5vpkL6u9r
8DznmHdl5oz3zcNz/4F1mGiZc5wbyMP8Mc08jzn3v25MeNZ5hnk2GZuM0Wd9
tnjm62fuE5+vWfJ8n9FPTec5+Nxn5z6vneKzSJ76HfWZee71vsThYdOfdt56
w/gzrr90bD8q18/KV47tx+Xnff6+MP9s6/Osz8TX5n9SZtwxZr+R/w8vaNao

        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1: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
7izBPJsbJ56IJj6ExIzZVA08J8NCZ1Uu4HMJNd23695hd6hcRmnaj+eB5pnp
exCfb8TrEApZFzXe+x8F90pMnPMi66f5s4OIT7fSghLsg/izzssSH0CdCWRf
lmeANN4XSZk9VSX7ykz+UCc5pbhuk5yIyuLh0bjgRbnvH/Gd9LIpaZ/hbmIh
/pPxD0kv791O72swh7LT/PKYA0p6ouRBOLiy/ps4iLkVXO20wNxQrLvKK8It
I3i80cUyHpIsTRICyHsxGSGN0R1sJERf38nkiAOTyNidZ9gMCDkfn2cwx0Si
HmI/WxxjgBVjUjVczwKOcFlLkWI6ur2jCrlERYLc+hkO7Rn8+zZlTeAbIT9K
zpqsB1eOBcOy2TUSSY0s8A25IfuuhA6hzpNU2PMMctbosPLHyP9ucd0xduEA
qIvotVtd8IP88/c+RzvSwHvrcGrgbjZs/5XcSdbvd4dLxzjS0Hrlz4lkXeX2
mMMB7BM4yjmvAPfNSQ82Jz6vTuX1k33X9GySw/uigMaDXGRfB/e9NJLTeMsP
khPtOBy+xO+8F6XpePEs6eXB85KKeyH5sdTnpJf75aNCA5hDfq+sEOaAdnwR
pxEOnPEKgYTbotj1spgbCt9boU24RVnbnhLJeQO7FLpznlnS4Ka04x2VTWx0
L5B9OBGlgv4mMZd5QwxgrY7kGP3BREZhjp6RMq9g07M68WU1LFg1uD7+egEd
2XBdnPejPA7eZ91vDpxmA5yeEf3a5UsZdHp9bblONGzayhfg2sACc5Go3ynF
dBDzsUi+7hcGaYPbeytGGXDoNcXx1oIBeDu6W2NeRBDo/bZb8gI/L4tX7znv
LM2G77xWamS9ysjRAa+jb+HcumRdQK0wi/js1b84jX3QwvK15sQnNGCjGdn3
RqV5FN4X8Sy8WUf2PXXTg5vkZG53ITnR1/fUyBx8z1DbkkNJL72AuXW4FzKL
LGokvdaXCagSDtu7x8wxB5Q1+mYF4ZB584Y64UZ/L3sCc0N3A5LdCbfHRSsv
taRkQlO4cX3JJRoEFFr/ur+ajRJf53FYmmfAgPxK66FeBjxOLnisMcZEc5LJ
t7w3p4F1jGWzRBkLtD5eMK7OpKNrZwZq5oelwM/WNbp7x9ngJ7I0OKTEl3KD
8lNGdjAeHnyMkdKpZUGSzH+3oovoIDXf+ZOObgw8OdAjrPeNARKG7tXx8wZg
6e+4u4oRUZD9/XXcSnsaSGgYmNdKsuHKJ/o9sr6u+8YcXkdV25VMyHrTzMQX
4uMf8UIS+yCZryif+JhJCh8l+076De7D+6K9k1P7yb6cbiGfSM6AYwIkJxqP
KpB4T/GiPNO4a0p66XxTrsa9UEnluDfpZa32cPYa5pCfC0aYA+qrbg4nHEQW
2vzhJuS54jTmhn6LhCx4gLn1Pr9p0VuUByX/HXGP0qZB8V3NHWKL2Wibc8Dt
T7K5oHIkSLToCwP2HjI/zc9kot8FKRlZt7JA5lgfhZaPn3cK/8HSZDpaLWh0
ZO5XGmxMWBRaMsSGqMk3B3Z98qUITu6kO3GlQvgV1ZXtVfi+XeTso5lHB2TX
2VFvnQDP/MKUD48woE39TvTiWSa8O7n24BP9l7CckdxPs6VB+omD9BM72cC5
vPIQWZ8+2ne41paGfmYPfyTrJ+KUa4lP1A4hbeyDfCc4/YlPRLTPQme8r/Pe
HlG8L9JJa75A9tV6WXuS5FwkMR2Cc6JX+tdXtph5UUS7WipIL8EtxbK4F+K/
v+EK6SWypOQG4cDcVcGNOSCd8YcmhENF9O9rhNsTQb6VmBtK/uohTbhRP+oc
/7QNgY6zaaChCg1MS8O3KE6NoKvPmcZRBkXwq88plfWBAS6Vez/cbWOiC8yL
WV7r8kHtkk445TULXL5d40iJoqOZQ6qPTRZng9G3XlZANxsis1c3M474UrqW
3vzBGk8DH9qmEL8SFtwO/nznQAYdflXz3aJopYJdU9zL/fg+uaLrcxx+MuHn
o7RdkJIEnplcxpet8H0uvnar3zY2eJllSJP1oPfDeXgdxaxYJEbWpaWYl4lP
VcuFXOyDRnU7FYjP2yUeC4fxvqIBiS/xvkjOL/gU2feQ34YAkvM4byPJifjL
xA9sxN8f2jz9qaTXl10L/XEvZOhRKUl6nXg0eIVwiD+9KBhzQNzCij2EQ1Pa
Ax3C7egnGQnMDdVmuUkQbsrzDV+99iqBvXXi5zIlaXCasm36ascImhFaKed1
7x2o9LnaRpQy4GTx7LHHVUzEcfybq8ZJBAnrU4rPR7DAaEOxnoUvHVnZXHHm
i84Hx5DKK75NbFAd5dQT+OxLoRxW7m8fyYLWos8LQvJYwO8c4RaBf5+YcbMm
A7emQ/P6y5wVfQzo6yveFzfBhC6HB+c6ed+C+vWtXQr4Pl+4VjSsfyMbbvc8
MCTr30Zajyji+8q5FJ6Tdf0R3nHic3l2/xrsg8ruT0kQn7cHTdlkX8OdJ/jx
vuheeYIm2dfvF88DklPj7SuSEzleat3dZu9FOSp6yZP0OpE2loV7IftXJQ9I
L4UzP+UJh5PcjAuYA2rctVafcGgI10km3Kyk+icyJGlIwnXiN+HWcFPE+z29
HOaL96x3EKDBsnjpGdWiERSjcHhSJKsM/06MtNd7y4C7WybKL79lIpWfYSs+
RZaA5rnl5xUeYp41ZwxFHeho45Jvz7VmEbiP5ytUIDZ8swloPvnlCcWOcdPc
IjMfVvWZ8NqnsMA9YdHV6Qg6tJ+VCt56MxsSX15yme5kwOzJMzdEWEyYKLs/
/mlpJuQ7y1I3mdBgf1f+Tj5hNpjc1P9O1rOZDRKbTWhoB5/tVrJ+hqsokvjw
bEkMwD6Ik65ynvgcFNxrSfZt+pi9Cu+LvsVmyZB9f/icjCQ5hyCE5ET1thV7
VU28KPt/dK0ivT6KvjmLeyGXe2EupNfj9/d/Ew4fGeEXMQcE0hs+Ew7PDEN8
CLffv2df2wvQUIDEvQUnMDfecedY5YL38Gq+uEB+Xw1c69iu8NR3BHFsdk8x
uV0Flt5ufTbP8fPOaq9MfsJEq1TUT/JIVMDF5aYxe01Y8KolbM0ZPTp6KXLa
yUKlFDhXnn4aFcOG+05xW9A6P8o1heJ9UzrFkPzu/NfTwSx4uSTs4NNHdPA1
S328dKIAWtMMTq78yACdVuW42x1MGPrw4668Rh7Ivf8S26xDA5enhUftedng
W/Tcjawbl2/j/6hDQzTN2INkveN1TADxESiLMcI+SDZqOoD49D8zO0D23RxO
ZeN9UevmZiGyb8FVFzeSc02PEMmJsuqqX2WOeVLOXdD604tiuiIE90LOvdoH
SC8L2TOphMOD0qY6zAE5r8hoIxw8BMXiCDeYfB+a11eD+rZVAOFmlN+/X/xe
HWguW1Z3I6kGzgqNXLlxcgTlNLwKWrilFpTKjsnbWzIg3NHXzMMA/z2qUFfe
lFQN1r2+JV/2sCDPqmTLp210tG+Rx1Dr/UpoZkpzediwQc/Y4Ubi7yeU+Vm3
+LecLQPN4nQG520WXDxAu3bXnA6HPUfTktE72OP91eZ4CQMaqm486q1gQu1S
j1EBtWIYOLB0744D+O97a626z+gIBPi1jpF1J2WJQLyO9vtuVyXrN05zZxMf
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
     "]], 
   GraphicsComplex3DBox[CompressedData["
1:eJx12lmIlWUcgPFpKlrQi0LT0jH3JRsdlTJydCw1jFLMpNVEUqFEcQ9yQzGc
EhPKTA23NJdR0zTJGMxvQnGKKDNxXLLMbBid1guxUsLO6XzPKz5v56bg4c83
//P7losXWz0/YeiYwoKCgvLMf67N/P+W8UsfKCho1Pet+TUVDx9e1mfIqa2f
Pj6yvoy+//KFkVPP1JTtnzdi69p9daEvGfz+r11W/1S2+uT00ddM/iH0ureT
p2/cfa5s44xxvVtNrw59aNGi4mzv9WV9v7bTqxP6+I3HJ2Wv0+Fi1eXMdUK/
9GTTS5Mzf/f1zgsK1+2rC71o+Z5ny5quLC398b89Q/8rN58s0vy43PWTjrp+
uk8yWPucy+2flGv/FbnfmyzR7z2V80k+kU/xx2M3Zzz34vngzT0aHD/bJHKm
25luZ7qd6Xam25luZ7qd6Xam21n7BGe6nel2ptuZbucpG7+q2XGoWeRMtzPd
znQ70+1MtzPdznQ70+1Mt7P2Cc50O9PtTLcz3c7v9R/77oLKOyNnup3pdqbb
mW5nup3pdqbbmW5nup21T3Cm25luZ7qd6Xau/6Pwox2HWkXOdDvT7Uy3M93O
dDvT7Uy3M93OdDtrn+BMtzPdznQ70+08LxnSrMWBNpEz3c50O9PtTLcz3c50
O9PtTLcz3c7aJzjT7Uy3M93OdDs3X7RqzoLKdpEz3c50O9PtTLcz3c50O9Pt
TLcz3c7aJzjT7Uy3M93OdDvvGv5L7YVtHSJnup3pdqbbmW5nup3pdqbbmW5n
up21T3Cm25luZ7qd6XZ+tPP9j4xa1ylyptuZbme6nel2ptuZbme6nel2pttZ
+wRnup3pdqbbmW7n2r/LPzi4tHPkTLcz3c50O9PtTLcz3c50O9PtTLez9gnO
dDvT7Uy3M93Osz470rh0YXHkTLcz3c50O9PtTLcz3c50O9PtTLez9gnOdDvT
7Uy3M93OjZe2mbFpTtfImW5nup3pdqbbmW5nup3pdqbbmW5n7ROc6Xam25lu
Z7qda3beN3FBZUnkTLcz3c50O9PtTLcz3c50O9PtTLez9gnOdDvT7Uy3M93O
rd85tbZqV7fImW5nup3pdqbbmW5nup3pdqbbmW5n7ROc6Xam25luZ7qdJ86d
f+TCtu6RM93OdDvT7Uy3M93OdDvT7Uy3M93O2ic40+1MtzPdznQ7b+5Vu2Hc
+cZ9bzvfqbpd5rpjRkxrkvWgL7ph9KDC7P375vceWQ96vnPUfPMv/7O6OPP7
y7oWdhqY9WPenfm5p3PX/fq3iszfeXUv8+7MP/bU1KPZ3/nK1hu2Tcn8bubd
mT/+c9HOrNcbM/Ztz/ox7858o/VbqlpnfA6f2NAvex+Yd2e+Ya4nnndn/lju
7yaLtY8780Nyvysp1+91l2dSefiZLf/jGTrzs3P3JSnS/XJnflnuvid3pPed
eXfmS3PPWzIqfd6Yd2fez+2JY3MmDfju9ui5pfs5pPt5o/u5ovv5ofs5oft5
oPu+031/6b6P2jPcL7rvC93+dDs3eKl5aYsDRZEn3Z50e9LtSbcn3Z50e9Lt
Sbcn3Z7aM3jS7Um3J92eq24aPm/G0ZaRJ92edHvS7Um3J92edHvS7Um3J92e
2jN40u1Jtyfdnj2PVZyt+6J15Em3J92edHvS7Um3J92edHvS7Um3p/YMnnR7
0u1Jt+fBDX8OGlbVNvKk25NuT7o96fak25NuT7o96fak21N7Bk+6Pen2pNvz
hWkDPqza1T7ypNuTbk+6Pen2pNuTbk+6Pen2pNtTewZPuj3p9qTbs6D/4qbF
FR0jT7o96fak25NuT7o96fak25NuT7o9tWfwpNuTbk+6PZffenrW8pV3RZ50
e9LtSbcn3Z50e9LtSbcn3Z50e2rP4Em3J92edHt2O93lzPVv3h150u1Jtyfd
nnR70u1JtyfdnnR70u2pPYMn3Z50e9Lt+fn2mQMnz+8SedLtSbcn3Z50e9Lt
Sbcn3Z50e9LtqT2DJ92edHvS7VlSVvvEhN4lkSfdnnR70u1JtyfdnnR70u1J
tyfdntozeNLtSbcn3Z4z2y98bX3PbpEn3Z50e9LtSbcn3Z50e9LtSbcn3Z7a
M3jS7Um3Jz163xv22PNtt+7x+552e3J+lW/e51F0+3Od6HuSzvu+MB99Z9J5
3y/mo+9POu/7yHz0XUrnfX+Zj75X6bzvO/PRdyyd9/PAfPR9S+f9nDAfffeu
9gzPD/PR9zCd93MlzyvfyXTezxvz0fcznfdzyHz0XU3n851L5zu/yneO6vNq
us+r6T6vpvu8mu7zarrPq+k+r6b7vJru82rtE86r6T6vpvu8mu7zas6p7Ea3
G91udLvR7Ua3G91udLvR7aZ9ghvdbnS70e3GeZTd6Haj241uN7rd6Haj241u
N7rdtE9wo9uNbje63Th3shvdbnS70e1GtxvdbnS70e1Gt5v2CW50u9HtRrcb
50t2o9uNbje63eh2o9uNbje63eh20z7BjW43ut3oduMcyW50u9HtRrcb3W50
u9HtRrcb3W7aJ7jR7Ua3G91unBfZjW43ut3odqPbjW43ut3odqPbTfsEN7rd
6Haj241zIbvR7Ua3G91udLvR7Ua3G91udLtpn+BGtxvdbnS7cf5jN7rd6Haj
241uN7rd6Haj241uN+0T3Oh2o9uNbjfOeexGtxvdbnS70e1GtxvdbnS70e2m
fYIb3W50u9HtxnmO3eh2o9uNbje63eh2o9uNbje63bRPcKPbjW43ut04t7Eb
3W50u9HtRrcb3W50u9HtRreb9gludLvR7Ua3G+czdqPbjW43ut3odqPbjW43
ut3odtM+wY1uN7rd6NF7mp4PRO9p2qP3NO3Re5r26D1Ne/Sepj16T9Mevadp
j97TtEfv6dX7XHlP0x69p2mP3tO02+25YX2m3nuxUd9hzR+aXbJmd9m061qu
+f6e+tA35XoyJe0rqk8OfHFi92ie7nmuk+/fp3me85x81/f5D9fJt7/nuU6+
f8foff4Fdvf6UQ==
    "], {
     {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxNmnecFEUChWtGFBNKZkEkiyJHzklYlhyXnHOQHCRJzggKSjIBKkEUFURA
UQRJCuqdKJ56Zs5Dz3xmPeN577Ne/8Y/6tdva6uru171zHz1usoOndh1QjqE
sDNPCOfoeDIVwlkdqXtNOqVSSPp5HT/W8VyVv0l/rmNelRekv9DxfJW/Sn+q
43kqz0l/qKO6DReoswb6u7P0szq+H+K1XpT+RscLVeaqzf90/FXlFdX/rmMB
lVelg0pBHU7r+IOOF6u8JP2djhepnJL+iuuo/EM6rVJY+g0d86gUlT6r46Uq
5aRf1/EclSLSb+uYV6W49Ls6XqBymfQZHS9UKSn9jo7nq5SQfkvH81SypN/U
8VyVYtL/1PEilcu5Px1L6VhF5X3p/CrlpT/QsYBKBem/6/izjpeo/JvxqVwh
/S8dL1EpK/2ejvlUykh/yDyoVJQuJ696SM+WflnHH3XMp/IxY1K5SrpEKl6/
scp/GJNKNekvGJNKdemvuE+VmtI/6XilSiPpz/FD5S/SV6ViH+1VPmPcKpWl
v9axtEot6e8Zn0o96R8Yn0p96f8yJpUG0t8wDpXa0j8yDpWG0l/imUoN6Z91
rKRyDc+Zxlhbui3Pk3Qd6XbSv3FfKtnSv+tYVSUnxAe2mnQLyf8xdpXm0p8w
//Qr/SlzpXI1zxnjUGkm/Qt1Kk151NRPdemW0nVTcdx9edZVX09/d5T+iOcL
v3juVV9fuhPPtHRN6dbcjnQN6VZ8BqRrSbfhWZduKJ3LcyLdWLqrdAPpcdJL
pS+T7iA9TPpS6abSPfg8SGdL95IuKN1curd0fulm0j15nqSvke7OZ0O6kXQX
ng/pJtLdpFuk4phGq2Spvq3+HixdXLqd9BCeH+n20kOli0i3kh4gXVi6pXR/
6ULSOdJ9pEtKd5QeLl1KurP0SJ4f6b7S10lfLt1JeoR011S8/vV+nrvr73HS
5f1sj5cuK91Neqx0Geku0qOkS0vnSl8rXUG6p/QE6Suke0lPlK4k3U96ivTV
0v2lp0oXk24jPUi6svQA6WnSV0r3kZ4sXVG6t/Qk6b9ID5SeLl1UurX0QD7b
0oOkZ0gPTsVx3KBSU/Uj9Pc86VrSI6XnS9eWvlZ6Ac+V9GjpRdLXSF8nvVK6
hvRw6bnS1aWHSc+RriM9SnqhdD3pMdKLpRtKj5deJj0hFa9/m0pT1U/R36uk
G0lPlF4hXV96rPQS6SbSk6Vv4jtCepL0jdLf6VhOpa50M9VPlb6Zz7/0AumN
0jnSM6TXSLeUnim9TrqV9Czp9Txj0tdLr5WuKj1EepZ0Nemh/u5qLj1derV0
tvQ06VukW0vPlr5VuoP0QulN0h2lF0nfJd1Oer70BulO0oul75ZuIz1X+g7p
Oanox3aVtqqfp7/vlP5Wx7IqdaQ7q36J9D3SudJLpTdL35iK5z2q0kP1N+nv
+6V7Sq+U3iHdW/pm6Qelh0jfLr1Purv0Cul7pe9IxT6eVumm+uX6e5t0H+lb
pB+SHiC9Tnq39EDp9dKPSA+SvlV6D99B0quld/K8Sd8mvVe6l/Qq6Qekh0rf
Kb1ferz0vdLHeDakt0sflx4hvUn6gPS10ndLH5QeJX2P9CHpkdJ3ST8Z4u8g
v2t851+n+l3Sz0kPl94o/YT0MOkN0o/znSK9Wfop6ftScdx/V5mo+vv19wnp
/tJrpR+WniS9Q/qk9FjprdJHpMdIb5E+LD1Oepv0Uel+0mukd0lPln5I+lnp
KdK7pZ+XniH9uPQpvl+kD0i/KD1T+qD0S9KzpY9Ivxwiw8AP/I5PV/1j+vsF
6WnS+6T/Jj1L+inp08wlvqbiuOAZOAc+gXlgJHgJJoFt4ATYCS6CST4Ika/y
h8hRsBN8AjvBVDAJLAFD8PsLI8E58Am8AXvAAPzuww/wCaxU2n3CTvBSmRAZ
A56CSWAbeIbfvqkayx7pv4bIVPADzANTwVdwDtwF+5UNkXlgJH7v4CVYCMaA
r+AfuAVGgp34nYXB4CuYB4aEx8qFyF3wGPxT3t/bfL/BOFU9hnz+/eJ3B2aD
nWAD2AlGgjfgJVgIloCvYCoYpqvOvUF6a4icA1fwmw5jwDnNQuQrOBD+gakK
+3sAPmoS4n3ASzASHAI/wAzwDHwFS8A5MACsxfcknAazwVdwEZzTPESugDFg
A3gDboGB+Y6Fl2AMeAlGghngJbgIToCp4Cj4oYvGtUx6S4jMBndl+3uM72qY
B77iOw0Wgq9gOdgJXoKF4A24CF6CB2A8GBHeg6NgJzgE/uoQohcwIfwHd8Fm
MBL8AwfCh/AbTAUTwngwGOwEY8BK/ULsC3aCkWCGC8w//IYWND/wOw5LwCX8
vsN7sBdcAQfCfnAOHAUTwj9wF2sKmATmgZESXoKF4BA4ZUyI9wEjwU6wBxwF
O8En8BiMBA/AS/DY4BDZDF4aEiLPwBtwAhwCu/C7DzvBS/AG7AQvwQwwBkwF
k8CBMCH8BlvChLBZUXMInAM3wofwWxEzBiwEa8Fd8A8cNDPE8cBF8BK/p6XN
RfAJfAV3wTkwJDwGd8Fy8CRsA6fBYHARaz3WYqyz4CjYCfbgs1TKnzu4CH5b
ECLDwCH8RsN18NXCEPkKjoJJKpuXYAw4CqaCf+AxGAzmgalgJ1gXLlge4tiq
m39gElgIjoKLYCo4Cp6BqeAomKSqWQK2gcfgMFholH+D+N6GnWAtGKOe+Qcm
gbdhJ1gFHoOp4BmYCpaCPRqZi2AJGAlegh/gKFgd5oGj4Dc4BJaDu2AkGAx2
gluyzTnwCcwDO8EbsBCMB3fBVPDS5hCZCo7iewwGg4tgHphqpr8HYLrbQ/QO
7oKX4ArY574Q/wcjwWywAfwGR8EqMBUcBXvAVLATXNHZ/MPvMrwEX8E5vcw5
/NbDWvASv789zR787ncz88Ak8A/8BAvBTY+FeE9wFOy0399pfFfDObn+foN/
YCq4CD7pY+aBQ4aZN+AEGA+Wg8dgCdgJ3oCd4CX4AXaCkY6GyFcwFSzRz+wB
5/Q1S8A/MBX8dixEloPbjofIOfASjAE7wUXwD4wKX8J48BIcBXvAYLAQnAOL
PRPi+GEt+IrfXDiD301+90ebc+CNseYcWAV+g9ngjVlmlX+GyHJwFdwCU8FO
r4bIUbDQayHyEuwH58yTfjAV2Qtegt/+ESIvwQBvhMg88NLbIbITvPROiOwE
L70bIjvBP2dC5Ae46M0QmRDuej1EZoPf4C74CkZ6L0QuOevvGQrfOfDSHLU5
kYr/W5COf8NHH4XIVOe4HRqm+rfPTbuOduRLn4TIXXncDg1rfRYid53rv9Hw
FVwH473lOtqd5//BYEXdxyc+9z+uP89H/ib7+jJEfsvrc77w3FLgySwfvw4x
m/o2RCa8wP9Dw3Xfh8h4F7ot55zv/3/r+uJuA5vBaz+FmPn8N0Rmu8j/Q8Ny
v4TIh/lcR7uL/T/OL+n+vve5P7meNnAU65Q9bkc/l9tDWK6Qx/ql73NhOuZ3
v3l+f/ecl7YuEyKHku+Vcl+/Wv9mfYnnGnYt4HPQZUNkR65b3nMEWxb2ff3i
c8u7HrbkHNi1nJ8HdEHPEfxJHxWsYVcKn0e4ms/LMn9m6Aeu415gXxgY7qXA
wJXsJ9xbwv5TX9zzRXvmGQaFneBJrgHDX2lvYXL6gPVh/ioeO0yMf1Wtq9k3
1mKcd7XPZV1WyfdAXTXfM3xLgXVr+J6L+LrlXF/WPhSwt/hQ0B7Wsoaxa7oN
dfQFk9e05/ntM+MqZD9rW8PVdX3der7PovawlMfLmOq5HsbmHJi8rj0v7Hlh
bMXseWX7gGf1Xd/A9Vn2Aa6FbxvbE/geL5tYMxcUOL+pr1vW463ic+kfxoV1
G9nPkp4LfLjcPjcLkZey7Vtp+5PjPuHzbNc39/PAuZzH36wXcuxbGfuc5eek
mD0sZz8Zz1W+H9YPrCNYI1BYL7COwIsr7Gd919dzPf409PNW3M9PPffDdVr4
WvTd2v2wHmnn67a3b6wT8JI1BmsN/t/B9awROIe1TFt7WNFz1MjtqSOvI2cj
K+McPiOslVgPsC5gLQATw8a97FUV+4xfVe1nF2vWL7luQx1rLdZcuZ6jyp7r
bNdTxzmsfbp5vDXtZw/rnh5LLXtLO9Y43e1/dc9vC/eTY09q/8m3OvaBNQ9r
H9YavdyGdQ3rHNY7ZLKsVVg7sVbCi/r2s6Pr8bi929N3b/dPH/3dfoDH3sB+
4kUj+zDIenCIY2A90sM+NLZvub5P+hjgfrj3wW4zxM9bDT8neNLE/g+xHuq5
a+b+h1uP8Niz7S3339zzyzqH9Q5rH9ZyrOmGey6a2vMRPpe120ify/OCdy3s
wyjr0fa8tT3BH9aE/ex5jv0f4Ovy/zFuM9b+V7YP49wP6zXWVKytptiTtp5T
xt7O3k60Zj04wW0m2vNr/LwNtWas9Mt6cILnqI09p017e87YO9mTKdZT7W1H
94Mnne0zf3fwXExyP6wBJ7uecUx1e9a2+Jhrb6dZs67Ex67+PHJuH49rhuvJ
vlm/sUadZa+620POZ306I2TWsXg8y23IgSlk/nPsWy/7MNd6nu+/tz2cZz3f
3vb0vIx3P1yfNSrrJtaJ833PC0IsrGcXhlhYwy7ynPa1P3jS3/OLDwPs82Lr
Jfa/nz1kjAPt4RLrpfZnkD3Eo8H2YZk1ef0c3/9ce8J6eKY9GWo/l7ofzlvu
Nqx5F/k+ua8Vbs9aksK68iZ7NcL9r7ReZU9G2ttV1nhFYX2Nf5zPenyl72Gc
x77AbeiDtTRratbCrLFZa6+xV2Ps7RrrtfZnrO+Za5AnrPZcjPIcrfO11tur
8faTNTZr7Y1+Nob7mWGtzpqdrJ91L2vjO+zDJHu1wvX4d4Pb0/d6908fd7j9
nR77ZPuJP1Psw0brTZ67YX6G8W2qvV3p+6SPO90P977JbVjLwxHkjLDEXX5W
yQcoZAXkAxSygs0hrnVZ8+6w59fbZ7yaaW+3WG+15zPs7Wa33+LxzvJ8MebZ
9pl1LOvZ7faBHAEv77O+32OZZ2+3+VzO2+o+t/kZmO7nhzHPt5/4tuBPPiz0
PO5wGzKKB11PLkEho9hpTxbbtwfcD213un6XvVpiD3dZk2NQyDR2259l9vM2
jxcPdrueLIJCLrHHvi31XGx1/RaPfbl93mO91x6usA9kH2Qgj3ruyEHw8jHr
/R77SnvLuFZ5frf7XPrb7zZkLI+7zRMe4xr7w9/kMwfs2y3256DbkHUccD1Z
CoVc5aA9v9n+73T9H96H+FleaA/X2mfGQzbC+PZ6vPvs23r7jCe32s8j1kdD
zF9oQx15DbnNYfu/zvNFn7fZ/6PWx0LMYrju0/aEbAUvD/ne6O8Z15O9cA55
znHPxe2eIzzcYP9PWJ+0hxvt80nrZ+3VXfb2Oevn7e3d9vN5a7IdCjkP2SPn
kx095/u51z4cchv6IOsh8yGrIQMiCzpl37ban1PWL9qTbfaQa5BzvmA/N3uu
X/K1Ttu37fbw4VTMiMh/9qZibkP+Q5ZEpsT7rAdSMSt61T7ssJ8U6vH4aben
79Punz52pmJ7MqhF6biWfsB1O90nXuyyt4c9Xu79kVSsf92+PeR54ZoP+rrU
Pez+8Xx3KtPfIx4XuRDv4Qr5/3vdJ17t8xztT0VN/kMG9qh9eCIVcyFyMOr4
35uel8dSmT72ux6fD3penkzFDO0dt33C/R9OxTZnPNcHPL+0fdLXSv7mOodS
sQ2Z28ceSx6fd8j9k5eRm6X9vO3xM8kcHPG8k9Ud9XWZ12Oeo+Op2OY93/th
X4u2nEPGOF8dP5OK59D2uOu5Lu8MkgzvpO8hud5LruedaEFf8xlfa3E69su7
0w/dhnyP73S+5zd5vLwrJdshn+BdXdkQcx7ed5Jlkb/x3jTJ23h3m+Rt6PNd
T5u8bs+7VbK7A/488ln/1PVkQeRsvK8llyMr451okpOhL7bmHpLcjPeyF/pc
dHHfA/1k+Z55/0q+QQbGe9kyIeZMb/j+f3Ub8isyqlftG1nXa36G0bxPLe82
1JO3BLcva/2K5+Ucty9szTvXCr4u74+T/OlN+8Z4ee97ket510vuksf3eYX1
6/Yqr9tk2QfOLeF63g0n2djb9oSMij0ESWZzxh6iec9NDkG+xTtUWIjM6QPf
M+e+m8pkbGiynYt9Lt5e4nPL+JnhnXGSUZ21V/TJO+ParuedcU2fyzNGhlPA
161l/b49/9TPJDlwIfeDJ2Qnn3lcZFS8D06yLt4TJ5nWx6lM9vaRvcUf3pcn
ud079pB+PkxlsjR0HffDe+j6vi7vbpN863N7mOX7IVch34ItyWnIxnhH28D6
E183y/X4ybqONRrrP7iUd+dJRsW782Yh5kC8nybTIMf6yh6SV31t39C8h85x
G+rJZ0q5fXaIa27e9Y5y/ZeeL3Iy3meTo5BXfW8P0bwjT7KoH+wDGRXv0Vta
f5vKZHjfeK4r+p4ZO5nTj/aHfIh34V3chnryGbIr3nMnWRTv75MM4JdUJsf9
2d6Sh/2UymRa6HZuz/v+JH/61R5W9XWbW/PencykvMdLplLN9Tm+z99SmbwK
nes2fPF287nf+dmr7voW1rxvJm8gu+Idc2tr3qMn+ROaOSVD4l37H3ldKr4X
J4eo6XN7WvM+u5XPpX2SP/HOnkyF/In3/R2teU9PvtLIfXL/DVyPt3V9bjtf
l/0BSXaFHujnkGeyuvvhPf3gEHMg3uWTV5A58c4eP8lU8tkfNPsDhrkN9eQh
NexPS2vGRc7U2P0MseZaPCdN3Q9+Nvd1e1mzj+Fa309+e5Xjevwh97o0ncmx
0EkeRnuymnr2jQyqhT8j+Mm6n/flZAjkPSV9LlkUewiS3Ig9B0nOVCydyZCK
pjMZWBHPBfkWewuSvI16MhPyqix7Sz7EHoIk67rMHnb0PZB/kCcVT2dyL/Qk
3wP9TPQ9sy8hyZnYS0FOQuZR3vff2W1G+HuotP0kWyrj7wpyI/Y9zHIb6slS
ct1+unUpPw/d3X6sNXtMZ/u67HVIsqUK9o3xlvCzQT3ZNNlID9/nHOty9qq3
20y0D5w72fXse0gyp4r2hKyIPRBJZlPJHqLZP5FkS+yfICMhV6jme+bcq9KZ
jAq90O2vtrcDfe40PzPsh0hypir2ij7ZY0EuQYbE/okVPpdnjIxlqK97o3VV
e97KzwzP53D3gyfkOnU9LrIl9mokeRJ7NZI8qVY6kznVtLf4w/6SBR7XlfaQ
fmqkMxkPeqX7YQ/KLb4u+zmS/KmePRzt+1njevZqkHWQLbEXZLV1bV93tOvx
E3blHTNcOs7nMhfkQw3sDxkS+0KSrKiRPUSzRyTJexrbQ3KgJvaczKmh54WM
hL0g97g9bTa4PttjJCtqaj/R7AVJsqJm9naa25N7kEtdk87kT2gylhm+1mpr
9ppsDjHLaeOxkLu0d3sypBb2llynpT1Es9dkm9tQvzXEbIn2W6xz7P9st19v
zZ6Je31d9pck2U9b+zbF493kevavkEvM9X2Sk8xxP+Q2C9xmgzX3n2RI7HEh
xyBvYP8HGQNZUUd7iGYvS5IVdbKHaPbBJLlRrs9d5HN3ur6z526Z2+AnWQh7
X8gbyIq62BM079TJNG50G3xY7vqtPrebvV3mcx9xG+r3eizscWHtT4bEfhpy
DDIe9rUc8n12sIdkRezdSfIh9tYkOVDvdCb76ZXO5E8905lcCv2427MXJ8mN
+tjbtb7uLmv24jzlc3t4vta5/mHfZ990JmdCH3Qb5uiwP3cN/Mzc6vHiA+tj
9qaw/iVrYT8Na19yncH2h3xoiP0nB2Ivzgm3of54iHkS7Y/5c93QzxL1gzxH
ZELsNyJ/IO8ZYd/Q7PVJ8p6R9oSsiH1Cz1oPS2dypqGeo3t8z4yXnGaU54vs
hD09L7sN9eQM5CLsp0myH/YGJVnR2HQmHxqTzuQoo9OZHAj9gtuzHyjJhNBH
Q8xvJtgTMhb2EpHPbPJ4yVV2uP6E73N8OpNjoU+7DXuPXvO5w/28PeT6k9bs
PSKfIauYYg/R7CUiS9lnzZySn0yzD+QK7H8if9jtc9+wvs73uc/t3/K57Gci
VzngZ+aUNfuZyDqOuE/u/6DrX/QzNt2+cd2Z6UzGgz7jZ3KQPaQf9jm9F2LW
Reb1Soh7mNjLdDbE/S3sjWGtz76SeW6zNB3rLw0xv5rs52eXx0VmtSQd+1HV
H1nKbD8nZGr0w7yRqZCt/MvX5ByyIfpe6P7RXI/9Nzek4zm0f9rn0zfnLvC1
qKMd2c3/AWIJNlQ=
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1:eJztm11sFFUYhlfFn4Qa2wol/VEgtpq2F1IuGuSiEwOoEYMJbYwSNP1hA4mt
SmIVqJq9AgotReV3SwRETDCRhpJAoA3Tdrv+pUZpwEKoxKQBWrtKQqkKijgj
M8twkjff+c6cWb1gL3rxZTI7feY97/eemW+nV7++MHxnKBRaY/25K3TzkxE/
39Bc8dGxZX9dtz4XTbf+w56zX3X3njGbf3ttQeeJRLJ+uG/8XGzCiFke+aVi
19hQsl5klBfsmHnR3LJya/uGhr5kvSQxmmi16ld6Mls+aOgz3HrTp6fm2Oep
XVA6bffYULKe0zh8zbS+9+n0S53W97r1yI8Zi5dPO/xi2d/X/73OZH3tY7VF
Xb1njFj+7Hbv8Q8l5ldY5zeeWLd5ouf8keK2nZes6zH2G/nF3uvJX7phqnX9
RvqyA1NaPNffdf+3/fZ59g+O1Xr/3657t221+BhLlj63yMtn5L2c6Pz7Wsse
vXYrz9ucU8M5XZHzQk2c6wTO2UzOqwnOswXORYBzgcM5A3Bu+4/0LHIuBpxn
OJz/EDg3a+KM9JwH9OxybvOpZ9PhXCNwHnY45wucHwScBwDnQ5r03Mz0jbOA
8xpFPX8OOD8gcO4m9CxyvgA4c/V8iPDnTYDzVUnf4Pqzy7nHpz8/AjhzfWNY
0TeamJw3A86ib1Ccn2HqWZYz5c/IN0TO3Zr64EnAmcobImeuPyM9DzL9+WHN
nGXzBtc3EGdKz6I/zwS+gfzZ7YNPMX1Dtg8i3+ByRnpGvpHJ7IMobxQSviGb
n7OZvuHquVeyD6rmZ1l/1q1n2byhmuv+73pGeYOrZ9X9IPJnv/sUXbmumJmf
Ua6jfENWz5RvcPfd3LzBzXWI8yzAGeVnrm8EpWduH6T2KSLnXODPqpxFPRcC
ztS+G/lGWNO+W9afqT7oN9dx9yko11F9MKjnG8cqZ7ywyTrvz/GxfpuHW8+K
9q+yrs8Ml275s8fiQd0XdPy82Kxf7eu4PHVOic2Pqt99g6O5/btP5u3+rKWM
qk/elRaxz9Mx/furNm+qPnAi3G7zyo2+2mrzo+rVO/e8udHis7Jg70T7PhD1
yNr4pONW3Rj+5pV7ZOqjH//0hfW9xuVo1nrP98J6ef2zTbaeukuufOn5v2D9
ZUeX5598vPH0O41lRD1UOeHrIfs8B+5oXey9L6je+0Zp2Nbxxt+Pp8U89x3V
qzteGv3Q4vB2Xdppr95QndLtKNDtEkkdurqKSurqFNBJjaOHVYIeGsF9TxD3
t0fuPrLvS5XD+S2Bs0nwlF3X1Do9Krkea5jri+IpuS5CVQ7P9oB5ivqc6/Ac
Azy3CTwnOTyPAH3mAR9bAXhe0MTzHOCZan1SPP2ud+T/7nofAT4/7lOflUCf
MabfUv7JXe+Ip7jeVXnK9k2uf3L1WQ30SeUo7nqXzTnM3BI4T6RPl2eL5HrX
rU/EU/RPiqfon1yeFZr6Udzh+T7QZ33A+kTrXZZnFcET+adfnigvxQl9ijxR
P5oScF5C/Z3iKfb3oNd7PEX5c9ynf6J+hHiuU/TPWED5E/Uj1byE9CnmT24/
qgL9CPGk8ifiifInykviekd5Sff+SDbPB92PVPdHB5l5XtY/UT9Cx6PnUUjP
6H6hvob6IOp36DzoPmaBdQT8J+lXObeeB+2LYQ5EekD6QTpB6xQ9dwL9BfVl
qEOoN6BP5JPoPOg9Czf/3557vPHhziGg5/zUHCOaR5J9b4Xew6q+H/Q7v0HN
fYncTjLfQxUqznGJesvV/L4v1XMC3HlO6r2SLDdd7/1V9Sa+V+LOGarOG8vO
pazXNAdLzbOh98tBzf+ozrVy53n8zgGuJrhx57T9zgHqnjeTnQdG/kbNQfnt
p6rz7eI6TdUcta5+KuotT3EOhDufwO0LsnpDc0rceQPdOYQ714HWqTjXwc0h
urn5nXOm5uhk9cbNbwOK8y2yuVfXfAvX36jfO8j2hR5mP1XdL8j+fgHlENV5
b9ncy12niBs1Jy+be1E/TdXvPhA3XfOBXL3p2tcHnXuDWqcoh/Rtzz7Ssa/T
zJw8d/m7fTefk9Q9P7j36L5OY8eK/HpvnXs8eh7IPT+a/0THozklNC8qXs8/
BuRZ5Q==
     "]], GraphicsComplex3DBox[CompressedData["
1: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
ZrmHnij1jBL87eiOYTV9qPSq+eWeUaLf5ZymdIjobLw5LZ70yTgPnNApkPS5
1iR4LyV9L86vx1WcWR5+2qhpCe2Tce5P42GtFO9E9WGTpM/8wFfJz2HqHwwl
/2E0XyiR86X1gWasPrxfZLi/v9lFs1RUXja7PumHcd5tf7zug1F5KDC7bDjp
h3GuYR7aamd0Eer+fuf91nGRgpd2OPWe9JvOqm9c0C4uUvS16pzVDCP9qQ8t
vk0i/SrOW0YNa3QBj+uednMq6W9xvnCb5Z8XkaeMjL/RfhjnzWk8HJLilag+
fJL0S6gfuCv56Uz9QwPJfy+aL1yT8p1K6wNFrD68L9TM0VsvaFoKirb+7kz6
XpwfmePTLXRlLjK2vvz9VVSm4I0/Ok4h/SN3P9vWX5IjBH/7sncfwn/XX37p
a3KE6F8N11MLJn2oppOz/pC+F+dxXe3qBOJxh+0NiSN9LM5vRUw8aOFx0qj+
Bdr34vwpjQc5fhjVBzVJn/mBpg3+108T6h/WSf49ab7QT8q3B60PhLP68P6P
1dAw01y9ZFQ+9rgO6W9x/v3P6k+kT5TeocddB83Xgqt6BC0nfaKv+459O33t
ieAjqk6PJlz73k9rn2tPRJ8q9U7jw0Rn34qSK6S/xXmbvMVaOXjcoiDV1aRf
xfk5/+bBlp29jJJZf4vzljQeiqX4FKoP+yV9U+oHBkl+1Kh/eCP5/0PzhRgp
33W0PlDM6sP7PH/mf7j4PSERaX9985T0sTj/O+h4oaNFFjobcijkWa+Xglt6
nUgn/aB0lwkhV0zCBTfe0CWA8JCC/pXXTMJFP+qG0S09otNwyc1zpI/F+Qik
7l3Th3Lr1Yj0pTg37VzX/Y/1CaNU1sfiHNF4eC7FX6P60EjSZ37gmeRnGvUP
IPlvPLgmXzgi5dvCuqY+0JXVh/dzuoQNPTJ9bDxSb3cxtmBNtuD9rhxq7z82
E22ImLOU9Ks497EfZE36Pptg/s1raiD45nHVpoTnhpbfvKUGou/k9gk2kv5R
vWFP9Ek/ifNOn18EWOJxC8ecNyL9J6HzMcLd3eSY0UPWr+K8LY2HIil+D9WH
+pI+8wO/JD9nqX+wkPwPpfnCCinfUbQ+oMLqw/s24TH3btp1jEXhd93nkr4U
5/EFQ8IPuWYgM4+dC0lfivNCYx31J9PfoqKq/PDxMY8E75UWlkX6Pi8uWQya
FPNI9Jee7682IDotN51RJ30jzp2UdrZYhcc9uCbjMekzcb6weL9ustcRo0zW
l+J8G40Hdyk+lupDK0m/J/UDBZKfYuofwiX/GTRfGCblm0PrA8GsPvz9qztj
M7v8Z3cfVWzNDSHvnXEerHUw0MTmKepQ+STE3Sde8MITZhvJ+1uf1+weRd47
4/zPavr+llf/D4uO261TcF69b9IgEn8vsPdE8v4X57NcGiSR98MaRJ5cT94X
43zA3U851tjPvSN335D3yzjvSznIfAbVARVJ5wcdF/ykcZlPSNrbf8m/Pkto
XlAg5fWU1gGaSnWIo3WD96xu/Lxeun51eJxNDDoXGrWJnFPkvHz73MUjlueg
sPF/e5Fzipxfn728Q3v/YjS4u3K8Q2q64P3puUS0IeZZZdMINwXnSHVDJDkf
+Cm2Sp+cFxTnKMu2PiXnCd/83HWZnC/kfNz0TaFPsZ8B019fJOcROR9BOcjc
n+rAW0nHhI4LX6VxmU+Y4LG16l+fvjQv0JLyqqJ1gCCpDr9o3cCH1U2cK9xS
/42TUQwqtIr+5Ly+lt/beLFh6pgctGLCDy9yHpHz0JfFFsauxeh1Y99m5Dwi
52vz6bm+hJRFuzocdVNw/nbj2SpyDtCuSY793Gvp4lzhDLVKO3Ju8GrK3hbk
HCHnh55sebsd+7FOcNEg5w4530M5yHwa1YHrks4bOi6slcZlPkF9XDOXf30+
oXnBUymvR7QOsFCqwztaN8hndRPn70Y6BuyriEa/PjtMJOcOOTdQH1NNzu8N
6ZT77qBWgeANo+PaWQ4uRvvV2v43c1664Cb0nCEKjmvT7wZyUwgd9/OR5Lwf
OnNFQc4dcm4x5cwiov/cNnUJOS/IeZ5Hdfge7GflxStbyPlCzjMpB5mbUx2I
l3T06bgwUhqX+YT/Lobq/euzCc0Ltkp5GdM6gJ5Uh3haN/jB6sbP2T1NCmzl
szMaVU4e987ncongYxwODm7omo0sO1R+1iDnCxmvdkwzbozXHe88lGIGfEgT
fE0Xek7P/XDH9PmxexWc91g24h0517doVKUGOefH+Qnjz6oNsP7HeWdXknOB
nKesde53Gvu5OOBia3KOkPM4ykHmR6kOfJZ0tOm4sFQal/mE3BWPMv71+Zfm
Ba+lvObSOsB4qQ4VtG7wmdWNn6dzvlFWEP0+Cql0jFEj5wg5z3I5aBoYlIVi
++jZkXOEnH9Ne3WAnMcraXMsuO5/abXn9WzpebyMoCb3evbfq+B8T8P5w0l8
A8hoSM7zcT5unmPnAKzvNfxlDjlHyPnNaU7qkdjPx01qQ8l5Qc4vUQ4yH011
4JSk40rHBRVpXOYT2qifv/+vz2qaF2RIeX2mdYAnUh2u0rpBA1Y3fm7u4zd3
kyGDo1DQq6X9yXlBzqdmDt7lHvgWOT/yVCLnBTkffS1xgs+WQhSpazufnBfk
3IyeD0S7r5Y7Nl29R8H5T8+vf8g5vUth4eeb3UkV5/5cnl5YcRDre53bvJac
8+M8XDfOeSD2c/P2tNnkXCDnjygHmTtRHTgp6VTTceGqNC7zCW2j12//16c5
zQv8pLyW0DqAg1SHlt9r6gYPWd3EeT1XtYiP0yORodEMT3IukPN3h8uaf3F8
g2xeDdxLzgVy/vjAr8vkfJ1qZv+PdskpgpvQc4BohWuhQcZOVwXnejOs5pJ4
P0eNHuR8Hudlc3/U/Yz1Xxy2/0zOBXLeY9k0rQrsZ4XSmcfk/B/nXSgHmZdQ
HUiQdPrRcSFAGpf5BE1bq0H/+gyjecGv1/+b1x9aB1gk1aHJnpq6wRBWN34O
bqXfeTXj0RHoye6szeT8H+er1/TQLf79GrlZam8l5/84D9AomHTQKR91WT4q
+MjTZMG16Hk/tFh5+VaHBbsVnKuk9m1E4gu0vmSR83+co7UT+hVh/bYPI7LI
+T/OfyWoHBuG/Xh80fQm5/w4r6IcZG5EdaCdpNOIjgvF0rjMJ0SNinX41+cj
mhc0l/JyonWAXVId9tG6QRirGz/v9uPDwz33foajDlNzwsk5P86vOn8p9hnw
CrWwnxJ/yCtbcJtBs6f/NMhDMYYN+5BzfpzvXEPPyyV/a1/SrJ6LgvM7KTNb
kHjbZz2MyXk7zovXtawm5/FW2Nc9SM7ncX7s4sZBd7Afo/GP8sl5Ps7dKQeZ
F1IdsJF02LhgJ43LfEL7w0tL//VpR/OCYCmvAFoHqC/Voe3HmrpBO1Y3fq6t
TWIrvWGrw9DJH3vOk/N8nA++c6bxs3oZ6GuvVlPIeT7Olw1YkUzOxbnlvOtF
zvNxfkSbnoszugWrohfsUnCucb29J4lvHbuwOzlXx3m2htmAp1i/47plv8l5
Ps5/7FBVH4r99IjcAOTcHueVlIPM31Id0JB0OtFxoa00LvMJwRcq7P71uZLm
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
NfcLDWT3i9e/eHBN/ZEXq///AQad2DA=
    "], {
     {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxN3WWYLdXRBeC+Z84Ed3d3d7i4u7sE16CB4K4JIUgIBALhC5oECG5BggWX
4O4XCBqcQNCv3rvXPPCjn16npnr37ure51StquqZbts919uj13XdcaN33UDt
7xnWdSNqT3Z/4bdrP1jbvYVf75rOvwp/Uvs6pLuv8L9r36/t4cIf1X602h4s
/H7tR6ntgcLv1v4ntT1S+LPaj1Hbo4X/W/sxa7uyBn66Pvdqe7y2r0o2dm2P
Ff6y9mPVdn3pPFuf+7UtUZP6rmTf1PbXkj9Rsu8LP1T7D2o/am2Xlfyp+jys
tksKP1n7rradarIT1AUuX/iakj9T+4HaPiz8Xu0nre3uwi/VfrTabiv8Qu1H
qe2xwq/Vfuza7iz8Yu1Hre2Rwq/WfqzaHiz8Su3HqO2+wi/XfvTaniw8ovbj
1PZM4ddrPy47FX639pPU9lLhN2s/fm3PF36j9uPVdkvh52v/k9peLfzv2k/g
nhR+q/YT1nZj4edqP1jbO4Xfqf3E7k/ht2s/UW3rl92Wrm1M97Dk79d+stq2
KNmKtS1c+LuSf1T7qdm+8Ae1n9K1ld0+r/0MtX1d8g9rP5VrK/lntZ/evSn8
Se2nZffCH9d+GtdZ+L+1n9G8C39R+5lshb+t/ZzmUfh/tZ/FvAt/WfuZa5uj
8Pe1n7u2TWuOy9c2q3OX/Kvaz+beFP609tOZR+FvHOfchb+u/eyetZrzf2o/
RW2zlvy72s9V20Y13rK1TV54eMn79WwsUHjBwr3C8xVeqfCohRctvEjhgcLz
F16h8CiFFym8TOGfFF6o8JKFBwsvWHjVwqMVXqzwGoVHLzy88DaFxyu8bOH1
Co9ZeInCaxceo/DihecrPKzwvIU3LDxW4SULb1J47MJLsUu/Ldh5Cm9ZeNzC
yxTevPA4hZd2rtqf4Xkv1e1LPn59Xq4+b13739f+6pLvU/JJ6vMq9Xn3whMV
XqnwUYWnLLxm4b0KT1x45cKHF56i8BqFDyw8WeHVCu9XeNLCqxY+tvBUhdcq
/KvCUxdeu/BZhWcsvFHhkwpPW3jdwicUnqbwOoXPLTxz4U0Kb1v3Z9Xa1it8
asmnK/n6hQ8pPHnh1QufUXiGwhsWPq3w9IU3KLxr4QkLr1j4nMIzFd648HOF
Fyu8W+ErCs9R+KeFLy48W+HNC99ceJ7C2xb+W+HZC29hrRWeu/A2ha8rPFfh
rdix8JyFtyx8a+F5C29X+I7C8xXevvDThRctvGvhewsvUHjHwncVnr/wDoX/
XHjWwpsVfqDwgoV3Kvxw4YUK71z4gsKzFN608BOFFyn8s8KPFl648C6Ftyqb
rVzbCoVfLPnwku9eeI+S7V7br30/lHypku9deEThJQrvVfijwssX3r/wG4WX
LPzzwh8UXq7wfoXfLbxM4V8Ufrvw0oX38d1SeIXCBxT+rPCKhQ8c1n5MVi98
hO+Wkq9c+GBrs/BKhQ/yHVI6axY+yr0r/LPaDin8VemsUvJDC79feNnC+/q+
Krxa4cMLf1N41cKHFX618OKF9yzcqzHWKHxk4Z2NX9sehcf2TJX8l77HCq9T
+FjfCbX/Te3/6vep5OvW5+OswdqfUPu/lHz8km9Qn4/3/VZ4/cK/Krxx7U/0
HJXOJoVPKnxJ4a0Kn174qsKbFT7FM1V408InF77U71aNs3Z9Psb6rf1va39Z
ybcofGrhy/2Ols5a9flo6732p9X+ypL/tPDvPMuFd2Dn2rauz2fWdm3J/lnb
NmSDbS38yXPsN7y2swvf4Pe/tos9u37Pazun8N/9/tf2l8L/8Btb2wXWht/2
2s4rfBN/obZLC9/GR/D7W/h2v/m1TVnnHKu+f891/bXd6be9tiusDb5AbdOX
zjilc6HvqWFtvo/XNmHJRy/5WSW7qLZb+Be1TeZ3rOT/V7KJC49R+I/WzkDz
G/gQ05R87Pp8vmMHms/Bn5iv5BPW58vr8xyFxy98SeGzB5oPxNeZu+QT1Oe/
+b7yW9w132iRkk9cn68u+YKFJyp8ZeE/DjQ/iT90zkDzjfhPFw40v4ev86eB
5g/xjf5voPlYfKNZa5zx6vNffe8NNP+JH3PeQPNp+FUzlc649fnP1v5A88P4
UucPNN+LT/ZP93pYs9tfBpovxUfapI7deLD99l0af4kvdHv8Cr7N5fGR+EtX
xXfij90QH4nfdVN8MD7GtfHZ+E7WsTV6oTnEX+IX3R8/iv/zUHwhftE98Z34
VxtaR4PNd3o8fhT/6qn4Wvylf8S34f+8EN+JX/RsfCp+1HrW6WDzA1+O78SP
eiP+Eh/po/hafLx34xfxkb6Jn8Of+U98J/7Y/+Iz8H8+j7/ET/g0viLf6fv4
QvylXr/5TnyeSeLn8GFGjV/EPxmMX8RHeiv+G99sjPgw/Kix41PxtV6LT8jf
mzB+FN9pvPhjfKo/1HZ9XffdtU0e34kftXnZY7PB5iPNFl+LzzND/CI+0qLx
c/gzM8d34o8tFN+D/zNPfDA+xpzxnfhji8cX4i8tFd+Jz7NO/Bw+zPLxi/iW
y8Yv4iNtFJ+HP7NlzfGng82PWjk+FV9r/vg2/J8140fxnVaLP8anmjZ+IB9v
/fhO/KiT40vwK3aIr8Xn2Sp+ER/p5/Fz+DPbxnfij+0Rn4H/87PEC35Dd47v
JHb4RXwh/tL+8Z34PL+Jn8OHOTR+Ef/koPhFfKQt4r/xzY6ID8OPOjo+FV9r
0/h7fLzj40fxnY6LP8anmrLffGb+8G/jR/GRdhlsv3tn+J6Jr8XnOTN+ER/p
svg5/Jmz4zvxxy6J78H/uTA+GB/jvPhO/LEr4wvxl66J78TnuTt+Dh/m7/GL
/AZdH7+Ij/RgfB7+zE41zx0Hmx91S3wqvtZf4tvwf+6MH8V3ui3+GJ/q9PiB
fLz74jvxo7av8bYbbP7h8/G1+HhPxi/iIy0RX+YPZZ9n4jvxxxaP73NmyV+J
v8RPeCm+It9pyfhKZ3XNb+LvnN01H4f/cn7XfCK+yTld84n4R3/0mxf/jW+2
bHyo/+uaP8XP+pPfzvh7fLwV4jed1zVfjD91btd8JX7TBYV3G2w+0Z8Lv1fH
/jvnXj3+Dt9j1fhH/Jl14svwE1aLL8ZXWTu+Dx9jzfgX/JM14ovxT9aNr8Tf
WC/+zlXxc/gw/Ak+Eb9SrLF+/KOr4/PwZ/gNfKjrujbnDeNr+f5aK74Pn2fj
+E78j43iU/FRPu/a797o8Z34UfwPfgU/4o74WuKa2+MX8ZFujT/DxzHOlvHH
bov/47vTHMRKfCY+ivhI3GRM/hI/6O/xefhNN8aH4eM4F/+ET3RzfCQ+0U3x
3/hm/4gfxX+5Jb4Wf4p88/h4t8R34kPdFp+KL2b+vufv6prt+Eh8KPPkQ7zX
NY5l2vhafJ7J4xfxkeaJn8OfmSq+E39szvge/J+Z44PxMWaI78Qfmz++EH9p
ofhOfJ61Cy8+2Hyj4fGL+B+Lxi/iI73VNZ8Id0T37mHNj5qkBHv1Gp4tvg3/
Z9La/7zXfLA3u7bv0Y8fyMcb+psxlyz59cOaf8jfeqdrnJW9z35CpizFfXvN
75q88D699rf/dE3GblOU/Be9H2z5bsZ5P3q4rA+75pfB05T+Ab3md32Qv+Gd
pir5fr0mc91vZQ4fd82PozN16ezfa58nK7x3r+l+2rXxRovux8E/qQFO7TX/
4ZPoef5XqGP/1Gu+BP/yi67xafY+49lmKJ1Des0fnq7wQb32t6+7JsOtTV/y
g3vNN/5f1/Zj5u/0cHHfds2XhGcu/cPdlDrvOoONj/P3GUt+aK/pzVL4iF7z
J8nxdVPXtu9gu+/fdz+czxwuzn035kyFD4uOtf55ruVvsZUx5yv8617zJ6/L
/eWjXp37yC+ds/CxveY3zlb4qMhvjv3J/577xaedvfDRGefW3F++8VyFjwt+
IPZ03rkL/7LXfN07Ch8YPGvhI3vNf74rNufrzlP4V8FX5DmkM2/h43vNT743
9wKeNmOywcOxLe5uubLhH3rNF12g5Cf2ms88f+Hf9Jov/Vyul5/8aO4XnYUK
n9xrPvOChU/qNR/7idwveOHCp+TYF2MTvvTwwqf1mr/6SuFjes0vXaTwb6Oz
eOHTe82vXnSgPbd0RuRe8MOfjn3M4c3Y1piLFf5ddPYbbM+Aa3k7djbmMiU/
IXb4OM8AP/yD2JBvv3Ths3ot3lmy8BmR7z/Y7EP+2UAbhw2XKnxmxvki9uTz
L1P47OCBfrtGa21Z30O9Fi98FRvCSxT+fa/FDt/GzuKC5QqfE/xengE6y/tu
7rV4wZfEKcEr+m7Oeh+t32wiLrio8IO95hdN1G/XJb5Y2fd9r8ULqxW+KPKV
Cp+XY8fpt/siXljV93qvxRFj9ts9deyk/WYHscOapXNxr/nVU/ebHeDlCv+l
1/z5KfrtOeR/ru53I8eu5fek1+KLFQabPp1VSn5B5rCG7/tei00OGGz3C16p
8HUZf/x+s6d5zthvNhSbrF/HXtFrccHs/fYdKB5ZoN/sIGaZpd9sK95Zt/Qv
i868/WYTx67j9zA6G/hNy7FL99u1iFM2Lvk1vRbXbOL3LfINC1/Va3HTwv12
XfDaJb8081ys3+wsPpqu354ZNlmi3+6RMTfyOxmdufrtvouzDhxs9hETrVL4
n70Wg6zYb/dFfLRpHXv9kE6v8V64qbX67brEX6v0270QK21e+n8P3qzwDRnn
p4Vviv6WhW/utRjqp/12jWKlrUp+S6/FaxuU/PLgdfvNtvQ37rf7ImbZuvT/
Ebx6v9lkJO9d8lt7LfbZrN9sDh802K4FN7VF6dwY/a37zT7ist36bc7ish1K
585ei8V2Knx35NsXvqPXYr1d+u1ZYrcdS35Xxt+x3+6jY/fsN5uIAXctnft7
LUY7oN/sAG9X8tszh737bW7ivp1Lfk+O3a7fnpOR5y35vdHZtvBtseHPCt/X
a3Hivv1mc3i9gWZP9/3gfrOzmHG3kj8QfEy/jSPuO7LfbChO/HnpPNJr8eYe
hR+K/Nf9ZgfyX/bb/MWPe5bOwxnnxH6zoRh575I/Gvz7frsuceJqdV8e67W4
8pR+ew7hP/TbNYoZDx5sthVz7VPjPB68V+F/5by/KPxEr8Vrv+u3+wXvPtC+
08S/+xZ+Mue9od/OK348oOTP9FrsuX/hp3stnv1rv12vWPVP/Xbv6BxUOs/l
e/LAws/2Wgx7fr/ZEz645M/n2Ev7zSZi4cNL/nKvxaqX99v8xbmHlPyF6Pyx
3+6jORxa8hejc1W/3Qux8H4lfyr2ubbfbGvMw0r+UnTWKLu9kms8ouSv9los
fOhgw2L4Y0r+Rq/F1P/oN/uIf+/pN5uIeW/qN9uKnY8q/RHR+We/2cqxR5b8
tegcW/jNHPt4v12XuPhXJX+71+LTw/pt/bovxw20uFLMfn+/2RN+qt+uXez8
UL/ZXNx6e79du5j9kX6zszF/WeO8FZ2jC78eneMLv5M5/LrwuxnztX6bs5j8
NyV/v9di8BMKv9drcf0L/Xa/yF/uN3uK2T/McWL8tcqe/4n8g9hVjP+vgZar
5Uu83m92wwu802/2EbcfMtieZ/flzX6bs/j/o+jiAZ7tt3tqPh/n7ziBTzMG
HuCTXuMK8ABv9ds93SfzOWywcTWf9VrsjhP4vNf4AZzAh/12X3AE/83+XPFB
v9kNL/BF9uc5b7/ZEHfwZfbnG7Pf7Ian+F/2F4gX+s22OIWvsr+Qb95vdsPt
ft9v14YvMF/zxjt8k73fna/7ze5+h77rNc4Bt/Btv9nL52/zd1zE1xn7osLf
Z2x8xViDbd64BkEeHgP/MDDYbIqPGDbQ9jiKwcFmO5xFb6DtcQijDDY74hQG
BtoevzHaYLMjvqM/0Pb4kDEGmx3xI4MDbY/rGDbY7p95/GSgzQvvMc5gsyMe
ZJSBtsd1TDDYrg0PMupA40DwIeMNNvv6jDvAKeATdug1jFMQ2+NHcBFs9ZvY
1mcYd8G2J8aGPp+YcdjwpNjc55NyHjY8Obb1GcZLsOEpsa3PMO6CDX8b27re
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
vY+DcRef5difpJZDDD5UvyK2GjW1HGJw3wufR0fP74eZw1B9DJ3RU+Nxbtdi
+Q9jnzFT42HMoboZOvJycnUj3z2R+hPPP79ebo8Pv0fqOtSrjJ9ajgu7xlGo
yRB3q2f5OnKx+beRi9/VB4jZh+pm1AmcmGPF0TiN74PF4OowxNQ4DQlZcfpJ
0YHFtmoyxNcnR0dsPlQfAx+WOTjvUH3MUFw/LHio7gf/MFQr47zqDfSSiInw
GGpBxOZD9THid3G3+gyx9mmR0zk+crH5UH2M+P30jAOrARktx54ZrCZEftx5
5bjVhOj7EKer2YDlx/EJ/cxBbYY+F7lytRawOH2ovod91FroeRHLq82A5dPH
TQ2Pa1dToedFPl18KccsrlTnoD9lqEZCj4z4XU2Cvhg5dLUNdOTc1S3otRGb
q6PQXyN+VwsBy8WrVXCsOF2tgp4a+XfxtNy5uFVNgj4aNSFqFeiI38W18u5i
ajUJdMTvahL04LzatfoKc5Drl4c35oiu1SrQEcurCXEtagbk8I35etfqRtgB
dyHfLgc/lJOXp5cnF2fLtYu1xe7kYnb5dvKhnDwbytuL440jfpd7l4+XnxeX
w+Jx+XNrTf5cXC43L+6Wn4fl7fEHagjwBnLy8vTqCMTosJhdDp+OWgbxupy9
OF1OHpbPF39b72JwvSl6VOTn5Zrkn9Qey2/Lc+vREB/L2U/btdiafIauxeiO
FafLz8vT62ERo8vHT9+1fL5j9bPIycvr60MRd8qpiz3lzGE9KXLUctX6JuTk
5e/1pIjXHTtj1+JaeXdxtBidjpgdl2AOuAIxupyEOF0OH5abEF8aX4ypXsA8
9dTIz8vT62ERK8uvi5Hl3uXm9aTIvcvB6yWRA5cL188iPqYjlpf3dqzeDXE8
HbGzeNqxYmp5cvlyPSPiS7l2MaZYmVyMLBaXyxfjy+HD+lPwB+aJH5C3l7/X
S6IGgU306cjVG1MPC36CjphdjYCaA/07cvJqFPSbiB3lm8WJctdy2HpSxOV0
xMjyvWJLcaUcuBy8vhL5eTl7/Snib1gMLrY2jphdLE5fDC7+lu8XX8uZy6/r
DRGPyseLSeXkYb0qcvj0R/a5DGv5ez0pYlzYfOT/1QHoKxFny+Uv07UcPqw/
RZ5cvlyvB86APt5Afl4uX++JHLsaBT0aYm558RW6FhOTi5HF7nLhy3ctP89u
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
eTlz2CrH3hz5PMEHZ+3fkPk8mXHI5X9vzdqRk70zdmCT2yM3jnplOd8RweYw
b3RG/o+hXuvBtnbmiz0PzfjGPCE+Gz9wg+jQl/P1XapPW573pdyjLTPmXT/S
uSvr6MnM2RyMo2ZaHlm++N6sqWcyJv03omMccYH4ffas03tzXt+v7vd+WXdq
3+WXjXl/sPzyw1kLC0bniGB94/LO8tEP/uhY+KSs8YejQ18dtpy1fLQ66V2y
ph7J+G9Fh778tT7zn2UOj0Sf/NGsu+cyB/NZKGPKfT8fHfr6p9V8n5q1/HiO
9fyooZfXtqaeyvoyvvpyuXJ5cDXicuLvRG4+i0Q+lDd/OutrkYyza+7ps5Ev
GixXPjzntdboPBf5YsHHZp5P5FyOVY8uF/9e8G6ZwxOZs2NfyLW8HHxsviue
znzoqFOXu9fLrqddPbj6dHXqe2RuLwfryR6R5394dOS49aDrRVfrrf5Bn8BQ
7/6rWdev5Vg61s7rGcda09ugtl1f/htZI0tER527vnz9+fvk2Dcid+yb0X8t
c3CupTKmtbBkdPbOd9fLsfMbGZPO+7EDW7HDu3lW1Vro/+fbeJ7fj32Wjlx9
/bKRnxyd93507LvR8Qz/JzrLBu+X5+fjPFd0Puj/8M6AD/LcmufbuXZr5MPI
lwveP/N5O/Ok81H/h3cMfJTx1U7oH1ZPvnzOqwZfrYX6bDUVnm29DQdmjXwa
zD5f5DlZMTpDz56eBz0r5J8HvxdMZ6UcO/QOgC/zzHj3gHcQHJbn7X+Rvx8d
+voGvonOytFR4+9YfRdnZvz/Zm4fZkzyD6JzaK7r06zNVTOmngW9Dnoe1Obj
ML3jQN+E9xx8F+zdBt5xoA/go8j1HHwS+dnR6YJXyzi4UO8/0Lui/+KTYOOs
lfPqoaDjXQn6Bj4N/mPm+W3O5X0Jejz0aHwafFTm822uhc5gruWzYPrv5LvO
vda3MUrOq5ZDfb/aG+9U8J6FY6Oj30Mvgt56PRvnda2fg47+Du/Y8K4NvQjk
ow/+8B4O+Nyu9XaMGR39HGNlHPX+6v71JXgfg36P87t2Ljp6HbyPwXsZjs+x
Y0fu2HGi/0Xm4FzrZ8wLujbmOBl/7VyLOX+VMemsFTu4RnbwbgI9DnpHvPfh
wq69k2Di2GeDyPVMqFkivyc6Ew3+8H5L45yVMb1PUI2TuqZJMo7efWtNH4Rx
9EuocfJug0kzpnmOn2u3NieLPp3Jor9BdMxTfdTkkRsTVkPlXFNmXRvHewzV
UPlfo/pj9cZ6L4J+g/vz/aDnRA2VeipydVPqrKbKOOTTRF+d1bTR17s/db5b
1Fx554IeDe9X8J4FdVZqrmB9HGquvKdDP4UxvUvx2cxn+pxXHdHMOVbt1gyR
O9c0Oa9zzRgd55ox5/UOBuOr6XJd5qlOzHsdZskcvMvBOx0uydy8t1HNkhow
7218Idj7IEb+n5hhTUdtmHowxz6cMWeNXA3YnBnTHPSZjPxfMsPa+x/ViakZ
mzdzM85ckXuHxFwZ03xmyZj05844rpdN1LA51pjqzRw7d8ZxXbNnzo71rkm1
av73rP/foHbC+ycWiP3Vp82f+fD37o/f6J0T+lv0tqgTWzDYsbCaMfdxgWA6
9NWwOXaR4J8Ptv89U3BkbduikdOHh+rf6OuL8d6LxYLJ4WtzLu/KVEfnfZbD
I6cDv9q1nLVr9P4B9XULZW57D7b/kzJO1/7frP/hIVf+i8H2fszXupb/IteD
r0Zxyaxl4y2dMf192eh4L+dSmYP/s7B81pT/+el/BuDZ7H3WO+x/tJiDOjQ8
/wrRdxwsH7fPYDvvE137XwzWqp7rN7pmwxFd4zlXitzfYbkDz+rsefZwJqvk
vN4h7/+36pPl/3jvub5O+9WDzWud2IfM38Ruzrl27p3/2+ld3vxAe5/1Rfqf
Mv73nxpFe+/RmCZ23ih2Yz/v1NCno66Gjho5/xPE/0b07gh1Qevn+fT/RzbI
OHyDtXIuOWjvm1CT4+8b5lgx3Wq5Rs/ARrm/3o3v/5Hpp/Z/Lvw/viVj801z
H/2vB///bo08A5vmXrhHW8S2cjHeIyAHaozNo+84/fB64XHC8CKxv75x/JL7
tVWeB8/CVrl38qre6SCf7v8vbJ1x7LfJnNlmk8zZPdw29xQ/Rgf/7Pr0MB+Y
e7dD7GD8A3Isn8n/cr2oa//zTe+uvl2yXWNbNtwh950PT2foffi7RN/72HfM
udwXxx6S58Q6vztrYq+sKXNeLXbw2+n/3uox9A5z/ztNf6vn3XN/ff6+R+bp
+do5zyedPbMu/EbTMZ7neec8k55h61w/mTlY23fl3h2Y++WZ2S/Pj2d13zyH
nsn98rx5xvbPc+X+Hph76l7sn/vlGTggzwM//77Ezp6Bg3If2fDQ2A134R7h
M927g3N/3euDch/Vju6bdeSeHhx9tjeOeIrtD8l9MeYhuRdsyaZ83f8HvqMt
rA==
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1: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
q+TlH4e6tubMUPpWNaXnYP8wu/7pV+jDebpvek2j/qRv6N3XxR+hbynyB6i9
toeLK4VweSGOkkguhX0+LukQiq9Rz1NdcKsFX3SQEoB9vj9x/1EcbUmTnFpM
zt0Bs7qwz6d6kbkfd1uSuRc3aLWbEXHdhxG+JonisjmP62CPbtvcyCTY55vD
x9Q/dlKZez7Rf2hXFgZ7eJaK/teA5+8ZX5FN/PBn/P0J+3wWNO91kz5FOMKl
Yd+A/0/HqkEa9gCP597xA50wOu/DGz6tsDcoNJh+A/LupH22MH2imL0Pxy6d
92RM03Ud/zwhAnuJIVKCF6Cu+XQf3jh8FiJ9QGbVqZLQhxd0347jAwU5xI+l
b9d/0Leyko/U/lqYBTuvUfIHvEShrwD29va221H8qcY9vdygRqy8cJgH9vbM
BRwoHpm5bt1wfyfOtpOzgL29InpfL1+Vuf/WGL3okVHQDcbrWOae4GVLVA/7
cn3L+h7B3l58kRnFNacttmGir6Ua4Ab7dr+j8yie9dLtyEHi57jiyBDs5/3j
t1eK3CccBXhs7Af+T0fpvLIh7Pt17rl6FXTCVdQpXvEysg32A1mEk9wh7wfa
5wzTJ3o7kPuS55Y7w93TkOLGZxwFYP9w7HawF9SlR/dBoDplI+kDyj32VQD6
UEz3rfmva95h4meRV2kp9C0gjPn+yYdt+z0+BebhJ9sf18F7HGcKUihuXHBx
yfG4Sswtw20C72vcEGDyJSsK66n3BqoGvp5hS8VyPokUT3E7mQ78tX6WpgVb
KpJfzdRffp1jD7yX0JP+yhjeU0iXYP77ePZxZFJJ8v48FiEA7zu40v9uPnsg
1HJl+E6GkjHzvYm3dPyarQsd4X0Lq0vnV0L8P/0MJ+2j8N5G2jkOBPrdk8z4
KaXUDHj/g3e+Kxf4idrOfP9EXt+8Dvjan3q88F6JqzPzvQvpguRp0MmO22gH
9f7rT+hd3ZOkP6jeK6IF+iPEs0nl5IPH2M4hZGyOYC3u2s81J0d6BOspV5wA
/maet9RkZA8+ctZYbIJ8cj3qOAdcqU/GGeJm+a0YrOS6g52fzgP/yNM75lsw
inUSJNgCY7PRBZZ3+4Dbhp0MDeMZxJ9MDwtLsLUj5X2Nt4DjjWxJ4mztWGm/
fxP5PRIYmTUDfqRZOeFWbDbmlXw6x69gFM3FmbuBV2hxqrEJ1qLTFTf0SX7U
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
     "]], 
   GraphicsComplex3DBox[CompressedData["
1:eJx1mG2IFlUUxx+10cLNl7VxlWRZbV3RhZREKTedq5YSBpHEGhEYhYoauhn0
QhhsEKFZmEloH8IX7IMYZVb0Ys5jG7ttaYWwWZj2oTSyoazcdPMGLc38r/g/
898vCz8u59znN+eeOXfGP7h28bKBlUrl6IBKZVD//55vWnqfu9jo/p767srD
s8dW169c/fmMR5fOuSpurD++aGLgT4x+v67jjVeTwUvv2B/f3BT4uQXt+3ZP
3ZUs/untU0e3Tgq8eWfzoZbbtyWHl8z9ZcCEyYEfONbx822di5Jzz3xQM/il
KYHXP9ky9bGZm9MpC8avjrc2B963cMadbZdeTLvPDPvr+T8u84b2eb3Td7ce
5PXn8/Um/n15/OQT2k9zz//7Se+h/dfn+0+H0O/N8t+bRuRnU+4nZZ/dTZO+
6Pd5CHzc5MWf7dkVG8/g7BmcPYOzZ3D2DM6ewdkzOHsGZ8/g7DnskzyH/ZBn
cPYMzp7B2fO8Cb83bRxSazyDs2dw9gzOnsHZMzh7BmfP4OwZnD2Ds+ewT/Ic
9kOewdkzOHsGZ89fzxwz9OS3NcYzOHsGZ8/g7BmcPYOzZ3D2DM6ewdkzOHsO
+yTPYT/kGZw9g7Nn8PK+EYm+EYm+EYm+EYm+EYm+EYm+EYm+EYm+EYm+EYm+
EYm+EYm+EYm+EYm+EYl69ml5Pfu0vJ59Wl7PPi2vZ5+W17NPy+vZp+X17NPy
evZpeT37tLye+/dZWs/9+ymtZ5+W17NPy+vZp+WeM+E5E54z4TkTnjPhOROe
M+E5E54z4TkTnjPhOROeM+E5E54z47lS/LFncPYMzp7B2TM4ewZnz+DsGZw9
g7NncPYc9kmew37IMzh7BmfP4KKeE1HPiajnRNRzIuo5EfWciHpORD0nop4T
Uc+JqOdE1HMi6jkR9ZyIek5EfxaevfDshWcvPHvh2QvPXnj2wrMXnr3w7IVn
Lzx74dkLz954Lt6PTswbTswbTswbTswbTswbTswbTswbTswbTswbTswbTswb
TswbTswbTswbTszPxjO4mJ+NZ3AxPxvP4GJ+Np7BxfxsPIOL+dl4Dvspn5+N
Z3AxPxvPxf3FeAYX90HjGVzcB41ncHEfNJ7BxX3QeAYX90HjOeyn/D5oPIOL
+6DxXNzHRd+IRd+IRd+IRd+IRd+IRd+IRd+IRd+IRd+IRd+IRd+IRd+IRd+I
Rd+Ijefi+5LxDC6+1xnP4OJ7nfEMLr7XGc/g4nud8QwuvtcZz2E/5d/rjGdw
8b0ueF4zv2bPlmsnug37Bm2f3lZX/XTZ0ztO3/BCgvXgTxX+r1618+We75oD
P3DT3EvT9ranzDtznoDjO2FXwddS3hN53pTzdhX7RJw39+y4UNczyuQF57w9
r81u9beMqL5D68G7Svd5jVkPzuvz/jDQrAfn9Xmd96a8HpzX533+e7MeXKxP
xPpE7MesBxe/14nf64RPsx6c1xfPxawH5/XFc3eiHhzqgerciTp3os5NfHBR
5+L3jnWi/h3qH/vE+pPlvNpZ7J/PF/KiL+Ec1Rd9ieMgPtbjHGE9OM5LA3Gc
C+aof+aoc+aoZ8ETEcdw1KHYp+GoK+aoH+HNwT95Duu5rtDHmraPHvnlv43O
rbm//Z/WMdVHHr9+/MKu9cnmjTce3vZrc+BL5n/18YVZ61Lmt+Y8rMdzBOf4
Z/L4KXEn8jrk5fWIg9+F+Hgvcxy1T44PzvuEZ+wTnhG/gTyDd5NnxBdxqiJO
+F56ZT+MTZ8Hx7nG712+ou+HUx9dZ54XODxgP+DYz5V9tVa8X2pN3k0PvDKn
o2FktYXygrdSXvB6yovv8+XvkRqT96EDy2fdNXSoyQvOecE5L75Xl3uOTN78
nA4yecE5L3j57/XiPetTzpvXVV9aXud9KT9fcH6++J5ZnjczeXMPp01ecM4L
znnxfY/zgnPefD9HEvYMzp7Byz1nYj7JEs6b1/mfJi845wUXz1fk9SZv/l6o
OM4LznnBRT2beQCc8+bviyEmLzjnBRfn1+QF57yzP+w+ser1YSYvOOcF57y4
L4t+ZfJe/HHh8Lt/qzV5wTkvOL9n0f/X0/yGe6Xo22Y/x87ufevhDaPN+wuc
zxc4zhe978z7FBzvO14v8pp5ABzraT9V3k/hLfRD5i0UB7ye4hTP3cQB5zjg
HKeoWxMHnOOAc5zi3Jk44BwHnOMUfSPlOOAcB5zjFH3PxAHnOOAcp+jbCT93
cH7u4OV12GfigHMccI5TvDcd/y5w/l3g/LuK976JA85xwDlOMbeYOOAcB5zj
FHOXYz/g7Ae83M8oUYcjzPnFvYk57k3lz703ZY57k+CifnoNx71J7NNw3JuY
495Ufq7rAt8/Z8XGexsve7t4fJ0fPndLOrn4bgZ+ofjOduS9jmnPHrw8J6+r
nG07P25DiAPPfUUcfH8LnOJg7m2jOHguHCdwioM5luPgOXKcwCkO5lKOg+fO
cQKnOJgz2Q/qhOMETnEwN4o4iYiTcBzMgeJ3mTiBUxzMdcKzE54dx8GcJp67
iRM4xcHcxXFwLkQdmjiYozgOzpE4F47PBeYijoNzx3HAOQ7mGTz3/wD+UcjF

    "], {
     {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
eeb/J8SJ/Q==
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1:eJztWmtQFFcaHQRkA1ERH4lrYI0W0UUxroiAbs8AZsHFRwJFcH2wGIVVk1j4
YGOwFJVgspa8BSfGACoSEYiQIIyj9jQIishGZhSDSHijsyJhIFk1itbsdPe9
veFrb81MWDd/8A9Vp+6c77unzz33mx5fXRMZFDFMIpF8YyGRWBr+9qse6vV6
HTPjRe2yFVMS5p9tqB17q/+OdMSiC/6ZqYXMw+BpozuldVSP/z9ure/VyXzU
q+3+6bpe9t68K7PLFtZRnp1xTQ/0OllUWEX+jgWHZTlvfHy+x6+Osg51TX75
qU5Wvjndn2rOkBW5la9O9oujuh4fPP3RE50s++D6hvyQeFlSmeUZv4WV9D7f
q54eBp6I3lujFfLDzCue/cWSC8NUQQFjY4cbeKhePddn6U6ly5eTg72Se51m
3KkoVM1pZRJKDeuV347rDX73Ku1bNYtdz2yNk7oUGPijuiQcv111NcvPXLqZ
GcH2U19+nuun+WES2w8zPeB2Ots/7bmP6/+a9Wy2f6bML7CmwrBfi5lXuf06
TNrP7pexCNp7m9XnfvRFe1afGcHdDQZ9GEX7T1yfoS9E1wWM2D//zG/PLpaH
3FZhnbN8S20C9MnzzyGdRyKdHXMi6dOZ9dT3QGef9JAk97x6QeetSOdmetXe
8bn1Ip3/uPdoZO6JT6i7SOfjSOfUkZE3TpysEuncpZn6Wki7tSoQ6Fw1utf6
ys5lgs5uSOetzltah6s0tA/QeSvzHscPdWbe/pzrB+s8A+nc//pqrn8N0Dny
Dyu5/WKdJUjnP7315Dyrz3Sgc3+Zx4M9SUkinSXoH/QzxrHO3khnBO/2ADpj
HOt8AemM8S6gM8ahzrgu9DPGE4GfMY79HIV0xjjW+SLSGePQzxiHfsb4GOBn
jGM/K5HOGFcCnW1L19rqYg6JcmPK73wTbBRtIj9P+/6USy7TJvLzlky3DntV
GwV1vuKhDVLRKSI/2y/xaaEYjcjP0tzGw2Ub7EW5UZaW/dGyzHe8EoGfe97a
9KZtxi2Rn89opBw/1Hl6cAfXTxPS+fdI5+Fz5nL9q5HO5UjnxWu+5vaLddYH
8jrvyboXz+oD/ex+PmXb0Xz5fMUzc+MIITe0hNzQEnJDS8gNOSE36gm5MY6Q
G+sIudFGyI16Qm7ICbmhJeSGlpAbWkJuZP3i3PABuQF1NpYbUOfB5oYbyA2o
s7HcgH7GOPQzzA3sZ4xDnTEO/czrWyrKDV5fvcjPvL56kZ+tOH31lBXQmc/l
QgrmM9JX8HM40tnW/Un0J3JXwc/zkc4JnL67vBJAPm9OP95W+fSh4Gecz0hf
kZ9bOH0LqRakswvSmfexXuRnXl+9kBvYz7y+epGfeR+XPHc/Q50xbuweDAd+
hjpjHOoM/Uy6By8BP0OdMQ51hn6WBJnm5yGdfx2d+XnjJGHe6CPMG32EeaOP
MG8cJcwbbYR5YxJh3thMmDe6CPNGG2HeOEqYN/oI80YfYd7oI8wbJ4bmjV9p
3hian/8/87Op+Tz0fXBw3wcxDnMD6mzu/Fw+yPkZ5gbGYW5g3Nj8DO9BmBsY
J92DMDcwbuo9OPS+7vm+r7P7bmLhpvxKpmjJjsvXEi/SAVVn/Xek6WR9Ff/m
1lPbJ92XLE09t/vkZxtj1F3SlKaRE/puljDOj1OuqytKqBOKm2Md23Uyl0un
1L0G/FjEhDoWV7+UNc6AMxhvtpjmVud+mtYg/ECg9183G+oqujUxqYkzVD8e
S/Y21GWW/vkRV7d52yXNvcXx594Y47I87mynKhXVfdA8Jq7ljJLKhXXvFnM4
5k9G67GvYJ+Cb9F6vK8s37zZde6VNFzP919J/1J+vP6UU5PX5LR6Ef/k65Hz
WJzE/wWBXw3W8+taaLieX9dCw/Xm9v+89aRmfp7puokRrd9dHZbF4nh9KugH
+gH287x9PnC/pwn7Ne7/6zFRm1hcnbQ9YW2ci9RTck3G4tqGvzmy+OSePc5Z
VpVUyAWPBWz/pLo4l+60HcueVfi2MgXlEokfr180M3LRriPLhfXw+xS+rwfm
XriQe6T7feAcu01YT/q+RnovQbrXjNWFfWL+952Up9YEhXnB9ZgH60DSn6Qz
KcfSYh2tY21vCPxpvY42mZ49su7wtY/sM6sE/LiFpfIvW3Wygr0Lwn6O71JL
yww4k4/wnXdLD2bosukYhFuPO9e752f8Hd55tgZ+BteVJ41axzQVU7BuuWvn
uuyC4zSui3kSvgjfwK7HPKQ5E/dpuSPnfZYH93kP8beOfTWV7RPyJ2bdcnac
Vky1I/4DqM/ixs+msHgq6hM/L7sDaZPlbcGCH/Cc5hRg+d3lEfHCvWaMB/oN
znuYZ2BuKwi5rRDOdR54XjFAB/h8od+SUD/m5i2uu2i2vaPTO19SsO7iZUvH
szis+3f/1p2hBaHKZFB3yqdpeRMKy0X3SHTWsHwWx3XzB7lfWJfXuYqgc5VI
54JRR+jYMKVov6tevqJgcViXz7cNwjk19Z6F++XPXQUN6/I+r6BhXT5/orzg
fk29r83VmeRzc+eK//XzNbdup+yD2lF3a0TP167DtprFYd2LEbbW8bN2EPys
IfhZI/JzzL4Wx/vDGFHdV9Lo8SwO60Zy90ikyFem+hnX3XbopUS3D0sonJ84
nzdGT93H4rAuf+9EiOqae37Hx+RKH79bJOy3C9XVX22bx+LZoK6PosPBJn01
8RyZmlfuS7dPvJaWJ6p7fnboOBaHdePba1rv3FwhPF98HwVk/DjyiEei8D3R
3H5IPifdy6TcNve+I93jpLqkPkn9dAEerCfpniKdXxKPqf1gn5D8TPI/yecD
z2OtiAeeX1fEs/kHezonIVK6B/DAPCHlDylnMA//+Wf0w32+VsTDf36XyTxQ
56c6nof/u0v65jN9+N/7iHR/ke4pUs6b6h/4vELlqxrDDn8t2pfc5XgLi0Oe
hgWrLH9Ts0akD5xnSPMPac4Z7L7geefnjZNCPyT+gc+lmDZ1/WqH7usevlUm
r0f+MXm9uX3y567QKP/A854j6ON14UMvj+ErmfXyfxU8UldTXzkUOT/V62Sx
wa4/se/NEl6wUmS32Eg7rk/g3rPdWDd1Q1FmrsBfpR1m9/EDncwT8WC8CPGQ
3j9/i3isZMrWE43fUJcRjwfi+fSDmTMrF9bRkId/7+eggjyY/zKhn69M7Ceg
ZGVtSHUDVQX68Wg8MmdenlbUD/87kbPwOxHW59DEB3MrfTvpS4AH6kP6/RTq
DHnQ52nIA/9fgTEeY88rEOizP/S18dGh3dRgdb4W65+zJK5FpLO5z31bhFMG
o7lBQR9uafqh+1hCrYhnroP/65ddR4h4ltd7r48qVAs8XoR94XOBcXwuMI/b
3o1+RZY1Ij/3T3vxnPvNixTuJw7xrDhw33mtm5W008j5+g+jkJf0
     "]], 
   GraphicsComplex3DBox[CompressedData["
1:eJx1WXtYzdka3iKZItdcDrq4PC6TJFForJWZETM9iDoiHY6US4NhKKbcqpkM
hTmJIbLdL5NMEdJl/Youu5tdHcw2zEQzKpoO1RiZmKPZ+1v7+NZZ/dPzvM96
vvV97+9d7/rWt+0Wr54daKJSqR60U6nav/l/0Hl9cC/mSHcrg8ekhnRUam4e
dWo2qyA/L7C9mFpuxK2dk+9tellBHOO+d9vacQzHhy/PTIxYVknqHCoWr/c2
4h7DJx6ZP6ySeMx5pZ563ogHzFdbLdlcQeJ+vxO34E8jvmHT5p1368vJUa/G
JzMnOHH8Zaj1bbOicjJ7e0qS6wwjbrHW0q4tT7x+wCevg6s+FOOrgxIvdxlc
IeRz8atw+6ivy8ljlL824+Gx2FqtUG/D54uOB57WCvz8fmFV4AqrcoL5HN0r
rGtbnoDX+sWYvuveXvEvLPfrVlfG4wAeNO23O92XGvcFfPWm9gd739JyngHf
5bbtYEOcltcFuPf9Mrunt25yHgDfMnhnl/upZZw3wCP6Fh9zWVnGeQb8ZOdv
XdvyxOsLVTvLapeI8ct+Kwp43+amkM9vk6JnOraWcp4Bd1DPcXv/XIlQ7wrr
me81DSsR+AnfHpzT2r5U4LN+VpRVW56AT/m9WXfcQqXUP1042zVXw+MA7pe+
4dTHp4v5voCvGhw/0ieyhPMM+LdH97xr2q6E1wV4tal/374XijgPgFt69utg
GqPhvAHe3X3egYVTNZxnwJ3HTRjdlideP3dEv7xuk8X4/tbz5ge/0Aj5RC2x
mup7q5DzDHhW4QOn4MgCod6WqffH9m9XIPBjkdJyZcj9AoHPsI09OrflCfj4
oRkLJiS1sLB+DdMWJdzgcQB//KDj4c+25vN9AX/18WC7TQsKOM+ATyyyHjTq
bj6vC/C1Dk8s6fY8zgPgh9edfmkfeIPzBrh6ec3uaJsbnGfAr/sXDG3LE69/
5HU6w7WPGL9+as2suPIbQj49Y4+7bU2+znkG3PPZ6hFxC3KFerevDh75/t0c
gZ+Duuhkz8u5Ap/mx9QmbXm+rfMmZhX1YnO3umx0LprYRvP4uIR5OegcNbGY
dSl9To7LRb7RxIoak/r6XMxB57SJmczdaLrsnwo6101s3sTgh2fDs5EPNLGF
Q550XvgsC/lGE9P7hrj+SfOKJTlVTIj/4sfHu0J8mJDPB8EBQbO6ZiHfaGJX
x7aSkOBrQr2jHZvcbwelC/x4d7D/qM46Q+DTOd6/seubPN/mv46NvdXrk0UJ
l9D3qmPdgqb2ig68ir5vHRs/ccuAgwOvIT3XsdTxIdYv+6Yj/dQxuz8tX9is
v4z0VsdCd0bfbHG4hPRZxzatN3uZfPwi0nOdQc/i+nemRnt1j0sT4vd2NAvP
N0sT8lmcuWWOOicV6bmO3Y7qOyp/4HdCvQdNbP7h6ZQs8LPWZ5rLhPLvBD5n
P9r408I3eb6N69gxz8WpixJOoDg65r8qzyR5dBLaV8fO9Xbp+e8jFxDPOqbu
OrTP3n3nUV06tlX996KfZpxBPOjYyHSPjXG5xxFvOuYS61H26ttjiGedgecT
wvoZDh6bcnecEuIvN/GosF93UsjHpL/rtqoaNeJZx7RzK5f50v1CvcnTL3z6
/ag4gR/3g//6eojlQYHPqlX2Bxa+yRNwleFvUE3DD/5xXpMhDuDLp7z4zMVr
F98X8LI1P92t6bSP8wx4RkDGw6XPv+Z1Af7I6vMhrxI2cR4A7x7XvDu+nx8D
3gDP6vQqdOjzVQx4Btzij/pr9a9dM/H6i/r1Qny296/4Qj7mvf/Khz1G+V/W
589wvd/r62WYnx16fhjm80H53Htv+MxG/BOJnolEz0SiZyLRM5HomUj0TCR6
JhI9E4meiUTPRKJnItEzkeiZSPRMsJ4NfkIk/kwk/kwk/kwk/kwk/kwk/kwk
/kwk/kwk/kwk/kwk/kwk/kwk/kwk/kywPxvuRyLpN4ik3yCSfoNI+g0i6TeI
pN8gkn6DSPoNIuk3iKTfIJJ+g0j6DSLpN4ik3yD/v99oIZL+mUj6ZyLpn4mk
fyaS/plI+mci6Z+JpH8mkv6ZSPpnIumfiaR/JpL+mUj6Z4L7Z8P7hUreg1Ty
HqSS9yCVvAep5D1IJe9BKnkPUsl7kEreg1TyHqSS9yCVvAep5D1IJe9Bit+D
hvc4lcw3qGS+QSXzDSqZb1DJfINK5htUMt+gkvkGlcw3qGS+QSXzDSqZb1DJ
fINK5hsUzzcM8yUqmddRybyOSuZ1VDKvo5J5HZXM66hkXkcl8zoqmddRybyO
SuZ1VDKvo5J5HZXM6yjM63qk2kwqvO5I3Sx9Exp+6KAMekS6m7sb1wNuMf9D
x8nZWqLOVx16PM2J40vs0jf0/EbE/7h97sayn404zAnveJoVWDuI+07qMcR+
7SStsO+cROsu/7vv3rPK6qWn2ik+waraGe+UCHjk7eotLUeN+L2vZm9XHrSy
X+J2/RjyMF/Ae/65JsQurADl+ZytyxxwKzEjR8CPDVOtnO6dy3G9PzxlZkU+
+2NHpAv4YvWAgofzr3Fcr/Nq9vH4nztlXDkv4NueuV5y6vIdx/U+r2GWKRPy
01z/JeDh5j5fmL/eh3EiWU/wesO+RJIPwfkY6iKSegmu18AbkfBJMJ+G70Ik
34vg72X47lSiBwp6QHqjEp1Tic6pROdUonNK91uFaR6UC7hE/xT0Dzis77N9
q8PwL8oxrrz2O9RT2VEhnC/YF3wJztHo1hTrtrpwHIgP6+Ec1ds2jj3hU8Jx
OC/h07eOLHEoQL73nOl9Lxfd70+Z/n5PR/dRtWFuloz6Lo1h/rAX4wTjoE8c
B3SI9wW94TxBV7gu0A/wgL8L8I94psAz1hX4WITZ14OnKI40qOa9oFlnTZWw
oaqsayff+HyXGTXVnk4cd/rVybXnTBHvtC3WzCbUiMN3fJ6R0ell/wohfvY0
JSLUthzjVLIvhX3xeogDdUH8lr2fjekXIMaR5Wk7/J8TGpqM8QFPimyInJ0n
4HT5Iofs+I+MPEP8gS5VNm37onyou87Tsg3H8SVxFEkcBeK87YftFcu56fXX
DpUJuFvuoajAcTd5vdkRpyZqPjNRjow8axpUUCrgz0yag2aElvJ8AC/cN2P8
/COlyFdVyuEtHtUP12sEvPjxyLBYyyIef7SbtXVU+GvmMMelNVZdKOBb343w
D5lVyPcFfC67Zx+xoRDdFy3M/swtnfnMGwI+v2f6mrSaGzz+w7X/yV/f/QXL
DstrTNt4XcC7eXfzThxxne8LeE3NisHnvK4jPpvYhqMF6sBZ2QJeGbpLe20b
4/H15/QZOzDtdEXGyUwBn9ziFh9jmonO9TOmP9eZqK46tq+xOjbN5JKAPys8
l2XunIb0/IhdPXCdWfimCrj/R/Mi7l1JQf7zyOCTqSi+ji2PVj03X3FcwG2d
d/mklZzk8fU8VLLzt9i8K73UAt6w8nZWypnDyCcrDX6byOPDfO904MrW2VYB
DONFepzH1+eTThwSPu0/cEC0gPvYWjse/1sE8u10kvuXb0fhuoikXoLr1eu8
iuyOOv7J0sXnBFz3S9mzToPOIv+vMvj/WfwdieT7Evx99fdCPRmxZpymevMV
AS+zK9556cfL6B6pN9wjV7BuiUTPBOtZf180k457OjdMf6QIuO+yuTOd9ino
3mkm+ntHweeUSM4vwed3x50vG1un/kFCl27+3a5LvoBriMbXPCuP7wu4unLw
8N6/5GFfohK/otivVmjvnjDVqeijyU9VL8cWC7hrn0mLH1YX8X0B7/pt/JgG
i2LB/+E+Qv5MJb5NsW/3GLdWG2PZgdpbjDFdPkor4H8PvT3O31TL8wHcPSdy
YEA/Lb7vqOS+o3Df4fVwj6N9FdgX45AnykfB+Rh4U4BPjAP/iGcFeEZ6YKAH
jIN+kE4Y6ATpmYGeMQ76RzpnoHN0HhmcR4zD+UXnlME5RX7CwE8wDv6DfIaB
zyA/ZOCHGAf/RD7JwCeRnxPwc4yD/yOfJ+Dz6D4icB9hHO4vdE8RuKfQfUrg
PsU43L/oniVwz6J+gEA/gHHoH1CfQKBPQP0MgX4G49D/oD6HQJ+D+jEK/RjG
oX9DfRqFPu1tHtopVrH7l3wzqgTpsJWdTBvqp3QsQPw/Z84/XvSq/SkH6e0p
+7JL1B7btenou1ezj7LoH1XTkpGuNKwzazzXzi8O4wTj8G7CceDdhPeFdxPO
E95NuC54N2Ee4B30QWoHF9dzb96h/6kd5l5rfB9lx3w1YPor4xwV8HHrhuQv
23+T3G5siTysMfr8mCsTVjWfEOIor8fYXLjzqhzHUaZke90t+K4cx1E6Xfmy
/D27CiGOJB9Fko8iyYdK8qGSfCjOB94vd0+HpcR6VBKThS6BjT8Y9/WNt/hz
yrYKMtcqpHqWrVGHSSEew6LvF/M5JOAa+x6JxbpiMvnXUuY3xfju+PyD3xzM
x5fyOKBbtyO3Bl64nM/jAD7PR723KTWfx4F3xDsrI4c6dS3kcUDnxQUBve7s
zkFz0eesdpPDzv4xOTwOvAsOxHcfML82l8eBc5FWVW31uvwq+r3gKWvw3Ng+
uugqjwN9/qxwMrRDZAaPA+foVICq46FO59E8vJr1c3v3wfmWJB4H+vbVpX49
vMel8Dhw7vIs1iqhd/eg34k0LCmzICQhcw+PA3248+dVr3YnJuA4RBKH4Di8
r16zZBHrHI7rIpK6CK4L+uTWJ5XdXww4g3kmEp4J5hn63qoTpf3tF1zG351I
vjvB3x362Adnffs0eCtYh0SiQ4J1CH3p7G1FtvlhefhcUMm5oPhcQJ+Z4+s2
MvFYEY8D57fr6QXfjI7Q8jiAW5vkVnpt1fI40B86OyaPDdHc5HMk2LeiuUs/
N79SjkNfGlOVP/BMg9FneF/qPvJm9B2jz0CcHTEl3nf+XcZxiDMoMzfJ7pKW
+wbECbe50BrjUk7+C0JyyLQ=
    "], {
     {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
X925z3b9+2v/bsykDbFujHOv5N7CP++S89xvjMX9ylztd7W5byHGEfvg19yP
sB/5zsNdG3eL27+B5un7Fu+e6Me1y2vzvsP/6/BdqoKa71LczXDnxd0Xd1PU
cXfDOw6xmRi9yDqe4eMA+9OXexLu3Ptm6b2bezT8oSnz3lS8k68XO2eK72no
p8tgxub5Ho7HWHxP4rvX4eol2ku1edfg3WGp9hLtbeIHB/mFPnyjwl9D7Ubq
57TR3DEV3674PkRbvmfw3aWzOWKZGKh7yfrWtoerc9e0XJ/koBe0l2sX35no
X/Rbbt99nCff+Fbon3rWl28YfbI0Ht9awNVHm+fcQa0UD/3oz1lrrt3Gtitt
v8y5M5fh+r9EvUqbtvjlDLbW7uyasyfJxZ/7+7E36cN3C/yN1h6jXq29Rpu2
5JE12jzj+wT9+B7B3RZnGf2mfTtZjz3J9vDG1frhXIOdfbk9nmTpm9MkNd+c
4KXrtHlO/F+n/bZ28V2K83Wf47xpG+q4i+fcvad9v/HkPe13tYv7eu7Hi28A
a22zzPrn1eu1N2jTjzL34LRdow2X485w+/f1LLWlDzFns/Vv2PZDbfLLRv1/
qF3cfeML3xu18bnRvrRv53qyZ8gpm/VJbOD+nbtt7u62eNbQlF81Dnycl+7o
eca9/Sb9lPP5Vtv0cS7MHd+fWr9Im7GW+myJ49KfOMNYnHna/g8M6+Nh
        
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1: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
L3NrBP0=
     "]], GraphicsComplex3DBox[CompressedData["
1:eJxtmXk01O37x2cYY5ddlkr2bKWkxMO0kMo6qESrSJ6UhEdkS1narE+WVEII
lZSS0kKbyP4o0fJE9mXCWIf5mXN+59v3fN7f/umc17nO+76ul8/c9z2fWXrg
GN2Ni0QifSCTSNzz/6fp+/0p+XwFjfT//96xyX4kUo9pp4vi/eKG37xTj2+r
2cke0xWJn4zDqHr/4YctFxRsLuox7dVtPODn8JtPalkX3I/tMd1sP5thfvs3
p5qFu6816jFNnPiY6ML+zeO3e984MdJtesNupN/GcOV/eKP9C3OBf7tN6dH3
Ctda/+afbdce4fRJrO+wKoofX4z5qttIay4KYz93XIaPv3vVbdpH6L/cT0nH
yrsb5rV03K/z2KYb/NQf87j0JLLblOhz4MZRV06fRO4/t7HE+sQQ5CSs2Hou
cWAI1pXeZtf/t/IweM7RjOsncw/DXA82VuZE3hkCDyaOxf++dBsCb6F0rqid
DkPgOdomsJDTJ7E+3nKkYVMC5jdu2fBXW9gQ9OPirFcsvXYIPHv6HvS60jEI
807ZZ3nxVg6Cn5Cj+bX804PgMy2jKIvTJ5EnzFUEWp8YgZwMGfOfjLsjsO6P
7Copn+oR8Jwv2Sul8WQE5tK7cfpEX9wIeBhfNi0afWQEvCVrZLo2uY6AZ3n1
Pf6cPon111XlYqpOYz5NpaJNMhD74blteLLYcQQ8XzBsavHVwnkdbo20aMqj
n8sG/ryFBiPgM9tm6jinTyLvne1IYxYyIWdC+hBPSi8T1jXM7lstyzMOnsmS
AgZ1Y0yYKzojKzH+PRM8WC2T11uewwRvQ+qVEYFXmeDZRy30MqdPYv24itEt
76eYn6zcMfPkPvbjUrgr1SmWCZ471o6Ny7vhvPl5EhMNDuhncHWyur03E3zO
WMslcPokctos5Ul61yTkWEtHq5oqT8G6cVmC21+YTIHnnRJa2/11p2Cub9df
3V9LmQIP2RrGdi3fJsHbJvXOrKUfJ8FzlWrGQ06fxHprFZcqmfFJyB9Soii4
Dk5CP/cLgh6TqibB87q1UjKV1yZhXq48fZmTl9DPptWlm6dvTYJPurVRMadP
Ik9mqbZtVGRBzk2pW2ZdLixYtztT2/9QAAs83xW39F/kwYK5DK7/bPr2Bws8
zKjvPh4sywJv6Wo8r96JssCzourLFk6fxPps5eDeZ8sx30xJ1VhAHfsRKEhv
zeVigef4NQZrPD/NwLw7cx3XKL6bAT9X9FsP3eiYAZ+3rFwaOX0S+dCM+Uyf
ExtyWJLv3S5eZsO6JplWl0WK2eCZKu51+dUNNsx18Rp1LPIvNnigq4fEq9iz
wduoqlrnsa1s8PyXyo9xTp/E+hmla/zuhzE/fam5y7192M/+/PIpa2M2eO4x
2LFDTBznLcrx3/GWjH5GVk1HWSxig0+SVfAIp08iz5y9L1y1hUwj5mieY26Q
8yDTiOu+t13T9tmPTCN6vsO3ua3Ei0wjzjVSKyGQvJNMI3pwSKz75GZOphG9
3UxQPi24gUwjeu6ODxfk9EmsXxb/LSnSDvMD41aZaFthP+0Ow0Iz68g0omdF
+adG7ao4L6Wp2ujRIvSTnSrc/JcWmUb0qa1mw8/pk8itg19dTe/igpx/+KlN
gxRuWNe/fvOfd8S5wfOu6B1/xghww1zXrFXSPJlc4IEk8d3DsIMLvNmK64t/
+8oFnhPEEq5w+iTWN4syVHYNYb6q6KZadi8X9BPdzE6v/cgFnqvTaqrvVnDB
vHfp7dXnytCPrezig9vecYHPjzf3pnL6JPJpVrOOdwQFcsJipF1f3qDAukq2
O2fC71LAM5XPY8YllwJzbanV1zRJoICHwgTGpFAYBbyx4jdlFgdRwLNJfKYW
p09ifVgcqUTnPObXxzrsaYrEflY5iOpk+lLAs7/cF+eIvTjvrsYB5z070A8r
RXdssRsFfJ5W9V7G6RPue6d+lm9UpEKOFr/6aJIJFdb9UOdx3tGSCp6LogLO
r9hEhbnGrMzKxJZTwcMOcXLMdwUqeMsVc1wZuZAKnntF7z/h9Ems1xIVMyNr
YP6pBW5DOcrYz9cmxXI/MSp4Vkob7N/O4oF5qfTZfr0xHvCTs9D0zAiZCj51
boY95vRJ5DYsppVMOS/ktESvifBo44V1A2xOyi/r5QXPzrwx8pR/eWGu6x8c
t/6s5gUPXAlisg8e84I3erxbhVMJL3hOiqvcxumTWN8Su/Sf5leYrx7rFxL4
AvuJsdez2nKHFzx/kJ0L0kzFeYsahE/xxKMfuxQbyTfXeMHnJ5X4LZw+Yd8I
on7tc+KHnHA+CwnjAH5YV7kupoB1lh/3jajUgo/B/DDXViv3z6Ue/ODhtpjS
rajt/OBtVtSfrkPnB8+mos1tnD6J9eELVrrl7cf8RpFIEevd2I9+0/ovCtv4
wXNAqojQ3Gqc19lusVCrDvphyezLTjXiB58R2TdaOX0S+c0Z6aPPxgUgRzt6
Z9YCKUFYt9Y6zaheSRA836PmGxXICcJczBp/zws8guBhZ/xKQ+dRAfCWFxf5
gzQsAJ77Yjv/5PRJrNeO3cAMmhOA/OBLl68tnRaAfr7R6V6MbgHwrCy7JL2h
UQD3jQbd9ML36Cc32Vvf65MA+NRVKT7M6RO+vwSpz8UnCkFOK+/hVR33hGDd
oNr86qznQuB5T2RZdcgjIZgr0zJqem+mEHjgEdtYpRsnBN4cRZN9ms8Lgefk
BcwZTp/E+lYR+7M2VzBfUyRXl3kZ+7nQeGC28owQeK5PWa598xjOe9/WVDvs
EPpxkAl/RfMTAp9tWRVTnD7Fi5cYvav8r/POLOOscFA/3KuXsJX+zjXsN814
Q0rvs/g9V80PF8MENeTJ5Y7fnloipz3Tfy4l0WNKXHeNs3ji+sk+WHfjjdiI
/7VuuXedMaOGAVzpa3Usz3fkkt4Ml2TqGPDALwN3C2WRex4TCzahTQCvbxeu
t7dHXnF05dWfJ6eBa7TrMqYvIJc9al9+4f4s8NA2G9HMN8hLDcqGUv1JNOjT
a22KShjygw/fh3hJcAGXHrTQmFRALmLQJrK+iBt4xRGn0urHyMtK+q9JWvEA
9xo4bHF9O3K31Szdnl4qcJkjgZ98RpGLlQg9fxLJB7yy/5yHeRzyJ/qLbGKV
BbCfP69MyuoIwHM+d8GkOPwfQfhcBBktMdB4LQg5hx7ofDvwArlsf0H0YBVy
k7HVuTWXhIAzNB/Y7kjBz91p8SsltQ8EgTvRs4LXRmB9s1mom/v6HnhO/DqM
ZPsH8HcEPVunC5zPETHnu/Mvn7RnWO+da9UV2MIA/ibnKFVJdAz44pxYtaot
E8B9bxaZe0dMA6/JbnCXKZ8FLkY/uXFvEAn21fKGmKaVC/H7nYddmiu1hBu4
ZEP+aKsdD/Bntk8ibg/hvdqzvloi/Dwf5ti2Zzlo4PPzT415YH8W7v8v6gZW
cZ4f4nNFOVimx+GneeOVN7z4zUvefnqv8qzXtE/YurvD8ndOnJYPX0MC8iC/
JYyWHOT1TJF93AI9psT87a2lOhFBvcADBpO23dOfP18IOcfMZ3a1LxOCPr//
suzkU8FzxDdUnKc5HfvpTelq/qKL+T8L9gfMMruhnwKnvKt3vyJ3FU5d3nUF
PRcOM2R2a2M/jIhnUhxOzOG3eLfObmkPPG+R9Raspvn+iTkpS0NHORzOlx/B
Tob7hoAPPfVnu0YOgQfJshUp4sIM4EukdmUv4MbPV9ohs8VifHh+eTC+1VQe
HgFeu7t9SeupEcg/8tiu9LH5KHB/yaBXD41HYd1f7u4mpetHIf/5MGnQM4sJ
XHX3rGnYQybkV5b6fNoXNg78g0R6527/cVjXwj1qz96gcciXHl4qLP5lEvgp
l8X71BmTkC9XmjjJWzYFXEWinMJTNAXrXnfLC6GWTEG+19AGncfSLOBNzqZh
tctYkH/80YOFd0eRB4l/VSnsxffY4werrt0ewvxXg65W+2zZwDWd92X4ubIh
/2Cbp0KBNAk+Xz3RoZm3xHD/VFvpt1dTEu8Jl/wrHnKbkYHTbtP2XbImQ76o
c1BhyH3kSXxxK4Pv4HvOxntnh2eLMN9wvNH84794DxnQtmPs7+eC/LLP543p
ttzAadEZFbbbcP8P1rsc2mCF95ZOv46W/BAK8JTC/WGroymQ774rvUZ1EPkA
7z26Sg++B1t2L2fBzT7Mj2OOuofI4z1ng7aPKL8qFfLFPhe6TMUgT456+WPi
DJ5fzSseXQ+IwnwjP8qEXSkv8MGC0xntL3kh/6lT+UCNGh/wDbyNPtVL8XwM
LXq73FIF72NdY5JRqo786FkrcUXRHn7IP9T64VRGJfLByB9c15/hewPNFZ+e
L3mJ38cPOSvLcfZ/4rrxvqoyU7/wfrixIOtFxIwArCvu9FXId58g8BTqaIKP
syD088/dHpvR3Vi/y51tIhaP51G1mN27P87j+dhc2lcqfhl5t2aiRkDNAOwD
jb400ZDvA7DPtNcdVghqwfr3SZ76Hdd/AX9huF6j69YvyDHrdrzTmY31S5PO
O5xrHQMuY3jA4mIH3g/Tu/xrz3/F+oDEQl89CdzPj66N8NBfhL+3jv5MHlq5
EOvrEj4kfbKcAf56TXZ02/YZyNn6s1Tksx3WqycMPQiNnAO+aM3rvNNxc5CT
2dmqG34e65+9i/KU+I778zr5E52SP3F/Zh0PVk/6gfWeFinTXadwP+xKi/Dt
Ccf7cN6vi48OhWK99Lu8c2WyuI/FySVRni7Gfcz++LXNRgpY/2LzY7lLD3mA
G6dlJ8U+wfv2HOPOR5HHWH/kbVX+fnvcf7pkS1Rcd+L72Fvezw/9cMR6mc2f
161m4H4Vn/r6gQET9ysHRt1EyQjWV7zpe893EfcBY9mWTQIJ+D6Nfex7VEws
1jMdDhw52YD3PUuHiAuKgvj8Z9pnF77dNAF8mv665mjINHA7eteAVOks8Oa8
iMivAfj8hGkkSRdL4fOgmZedc7YYz9MW9RIDJxv8e4Xnvn6jPYDnkY56y3ZS
DPr8mNPV1aSKfiLUJvxzKwRpO6T8O2wVf3MNeummv94y4Hfn/rz4JvYbhqnJ
4Ifnzht+84zAB+tqmcOmxJwQu9aDi8ljkLMhr3g0hzQGObnGQX9c0h+FnBbb
6TOv101ATmpuk4T1PCfmzBml7159dBxytG3lbx7xnYYcRs7YKuaJachxNCoP
bs+dgpwzNsavJe7MQo5FjpRD+u1ZyClc9/VqxL8syPHKvePz5QQJ3k/W0eXL
bsxzYg75KnvP38Ik+HvJqj/nuieKv6sGNWpt9ZvnxJzbCqLDHvlkyHmVU5dw
5jY35KjRjT9bzHNizs50xVDjzdyQ4632XWnnVh7IaWyw9FSY58QcioLeAtFO
CuTI5TCKtbrx97VTdrunh7uokHP3yvrrHWFUyHmjSt7IjuCDHI0Gr3OV85yY
s0uevvzRIj6c66ZYU6MivrdvtA2RS57nxByeKweenyvjhxwFVSXXnHJByAmp
v5TvOc+JOUVyJ2z27BCk/R+jk/x9
    "], {
     {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
eeb/J8SJ/Q==
        "]]]}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1:eJztl8EJhEAMReNaiZXYw5YgeLYFO7OC7cUSvOxpJR40w/8L75/kEZLwmBlw
mJb3/IqITxfRx2/27YQseZZ9/H6s5tzMJ561PIudTzxruZlPPGt5FjufeNZy
M5941vIsdj7xrOVmPvGs5VnsfOJZy8184lnLs9j5bO1ZtSf11D+przrnre9F
43eJXKfs/Ve9q6pzXlSfRdWnyn+6D3OZy1zmMvfeXLd9Gv/vVO1DH/rQp6AP
HA6H/x0/APMaqsc=
     "]]},
  Axes->True,
  Boxed->False,
  ImageSize->{438.71222894706307`, 193.33333845491777`},
  PlotRange->All,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-0.13180549570578584`, 2.4683142444828152`, 2.310855274954489},
  ViewVertical->{0.05097134140805026, 0.04714694109722245, 
   4.447624342078397}]], "Output",
 CellChangeTimes->{
  3.6087996136384964`*^9, 3.608799648458488*^9, 3.608799980542482*^9, 
   3.608800022941907*^9, {3.6124303544739027`*^9, 3.6124303611732855`*^9}, 
   3.6124304267810383`*^9, 3.612510122143033*^9, 3.6125171063723955`*^9, 
   3.61251714701972*^9, 3.612517201627844*^9, 3.612517751452292*^9, 
   3.6125177901735067`*^9, {3.6125214353810005`*^9, 3.6125214508038826`*^9}, 
   3.6125215081781645`*^9, 3.6125231654564576`*^9, 3.6125232706174726`*^9, 
   3.612523325896634*^9, 3.612523366803974*^9, 3.612523412551591*^9, 
   3.612523467178715*^9, 
   3.61252852752715*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
BsdRmLhrMRRNNGqyuEnC3mAnGs2FRiI+3CrofQWJilGICNuITqI+PUZJ3HtJ
LFg0esk29PJto3pNlcSFqtl2sFgw8Rmpl/aBxUCJBeGEBIJsE4vDVKuJREK2
GRaNDsI8tVnRSBbM3Ixy2ylylp0VHHQu4/wf38KCL7ntJpvQWSS3vSQNvbTt
IdrTTVLQS9v+YpYQFpwCTn73kUD001d9OdRYKIjd92dL4eDb7PBdYboSBUvi
kOEsCclUrQ9mGgNJUHwxbbqP8YLLaI/ej6n2HBpXquGQY0F5Cv3l4XOZkki0
6pnS3HSrFBRzdRQKSsvlPdPekIKihERWJmkVqy9Te0EKiUjas934WIbNRc33
RhtB+ZSzQlzf+Os92PD8AWx44RDWv3BYZIQ4NrPx9bPY9OZ5bH6Dw+WXsP3t
C4i8fht1yX5IImqW6OmFRC8fEhYPIlF3ZQnJhvtCQESgkWMze3xwcZ+fEBbi
UjLQyDbkKAtJiMWGsIBogsJMikPmHJjxE3ZEZocCbmoSkiKijBycifRMF5IS
9VBGHWPIkLBrEO+bQdssJAdmC7eWDQi7uLlRBYJJsaQUKPegWEkLMylyE1yE
JWEbIgWlyk5QBInKk0SqgbYsLGw/mES1k3CwZ9tpIVH0jstOyIZ0VpAdqTCS
sHCrZGEhMTEJOzJUK8gT+wpMphSHGm0gcRpvMpGU2BuP+aWEzIG5XEhJuWAC
FfwO4pZFopFgdJXQ190lTFm6SS56yHL0FKlGQtFNwtFJwtBNlqMnT9wrJ4ds
N7oz6R193suNhKaHBSVdCguH+IhqzHLMpy3KkltigZmq8sRMnR9mar0wVXEH
k0VXMZR9HmNGX+KIWeTDxBmOSeH5cB4GNtujBYZC5zAwncn5Xw4ioOGCgs12
xODOZVdpX1ZtV5kmti/6QlBRmq/qW9ZL+/ITEp2fcGnwVmljSGw4y7Sa4/TP
HRBhzHUvHMH6l05g46snsYXa9jdOYedbZ7DrnXPY9d4F7Hr/MnZ9eAV7Prkh
gkKi6mq9G46Q78HicoqLQsnGXNjrg7M7H9Kcn9/rS3ZRxuWDhdjwlsXmjk5s
BO0ix4MpmIgKkbiIoDw5HxwR4ngmi02IW7LwrDlIzxEhdjxktilNZpt8M0VE
iJ0PzjBJzpUv+JaMCMn3uZroxEvPujhBMzBl5HiUz5WbbBkVYgekId9qYDgi
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
Jcr2BHFxdnpRKqjLqoJK8mNw9raffhhi+jXM6MMiyyydX8p9d+HO/2+x3zPo
aaye77koC1L1L1kF+I9tO+/k2VU15XG47hFgcNpznlmeYWoG0dUfqS+6stwW
FUh+DAmNd6pnJjtTEZ8YwXqmXfZ0iwOoaNcXtOcEzUM7F8ejnT9cRvWoKw35
uXHIKTYaVJeswbFllml8WwFyvLVIydVjEsfHlqtUInvp6GvLQG1DjerZamXh
5r+4WutrZ1nKXGJoG/7RRcgXCDXMFXtxH7jBHPT3Ni2ie/obJyhtbBDX+72h
vhgq8Z7fUizC5C0o7nZSg4FsdLaXLbr7S/VeFbc3Ved7st3m8fji5xUiIetz
ns4ZJ4H7tFOJ53tVzoyULLbvOmQsQW2S99xMwhdJTXXd5DsGjhShub2rbeGu
anXyem3wptpf3MbwSWndY4mfrud8s/PZ0cfoub6U8k0liM3GUkxVB88Xh12E
FdOVhvTmyzZcR62eb9cOTPYrf9mqvqzXZGkLP1zstTghm9OR5aoj3bn0MlhD
P57oHZIn3O500Z5CbfhF7cExjsmTRab7SLH2F8mxcBuuM4iTzNqeZO78LpN3
fp37rI5evpSEDrNETtJkn9hd9O8p3UHFBGkmRzy4ZLzbuqcshDPssEyq+HSt
7lO7Ts353sWSYJHRM8NnDuZLvK6x/X7OUfXfW4+qzrXT2VFX236vL0eY+/1S
PVXW9sMq2120ULLmF+h22aXrhc1Z9N9b+77a9lf6GLX+V7udHfVT3fcu9n3Z
7eyo6ld71HC0o2qN/z6x3UV/j3eHuzg4i3ow715nff9E972173a/0vuR+l/t
0x1V/cnvP9Z9bz2q3a/mHFX9StzLWEsLauO07PS+bifrofU/dXToj+T3nzvr
8Ie6761HVb/aaenQUmfHV7+XQjP/07XnnFve0FxzV1p7enoKjEYjN4OLeF1i
am5utvzGxcFxrHfxWKK+nTNv73xBZ9GNnkfl4myd3tHNiM3VZ3PG/75+7pxd
z6ufKUdKZrnzPec/+wq55yHb378/36eHnR3rPf33juX1Xd0u1gOrThxxduB3
bb+fo5P131uPqrpj+KP/DzWMshw=\
\>"]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"domain", "=", "\"\<Aero\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"displayName", "=", "\"\<Aircraft6DOFSS\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "brief", "=", "\"\<Flight dynamics model of super-sonic aircraft\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"componentType", "=", "\"\<ComponentC\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"author", "=", "\"\<Petter Krus <petter.krus@liu.se>\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "affiliation", " ", "=", " ", 
   "\"\<Division of Fluid and Mechatronic Systems, Link\[ODoubleDot]ping \
University\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetFilenames", "[", 
   RowBox[{"path", ",", "domain", ",", "displayName"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResetComponentVariables", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Date", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.503905077842648*^9, 3.503905079842648*^9}, {
   3.5039103076641607`*^9, 3.5039103985397425`*^9}, {3.5039164662834997`*^9, 
   3.5039164750178747`*^9}, {3.5039165143772497`*^9, 
   3.5039165189397497`*^9}, {3.5041051675625*^9, 3.504105226359375*^9}, {
   3.507570546125*^9, 3.507570569546875*^9}, {3.507570601046875*^9, 
   3.50757067696875*^9}, 3.507796401609375*^9, {3.507887022343302*^9, 
   3.507887057967846*^9}, {3.5078871702320337`*^9, 3.507887175028847*^9}, {
   3.5082235454098396`*^9, 3.5082235597692146`*^9}, 3.5082237305660896`*^9, {
   3.512921352515625*^9, 3.512921388578125*^9}, {3.513708407234375*^9, 
   3.51370842740625*^9}, 3.513708469203125*^9, {3.5137087323125*^9, 
   3.513708733765625*^9}, {3.513708789984375*^9, 3.5137088199375*^9}, {
   3.513709315953125*^9, 3.5137093166875*^9}, {3.51370934803125*^9, 
   3.513709386875*^9}, 3.515393228397682*^9, 3.515394538846967*^9, {
   3.518675928359375*^9, 3.518675955546875*^9}, {3.518676036671875*^9, 
   3.518676042765625*^9}, {3.5194107155625*^9, 3.519410716421875*^9}, {
   3.534158560625*^9, 3.53415858746875*^9}, 3.5556609494210105`*^9, {
   3.5562486448218775`*^9, 3.556248646009256*^9}, {3.567943950786781*^9, 
   3.5679439525278807`*^9}, 3.5763150828826694`*^9, 3.5763151129806786`*^9, {
   3.5785910949113007`*^9, 3.5785911284412184`*^9}, 3.581237056062117*^9, 
   3.5812371050611715`*^9, 3.6124577732491665`*^9, {3.6327782713891926`*^9, 
   3.632778271651207*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2015", ",", "9", ",", "18", ",", "12", ",", "43", ",", 
   "22.415339`9.103120240489769"}], "}"}]], "Output",
 CellChangeTimes->{3.633155589667455*^9, 3.6515618024253397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining node variables", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tafin", "=", "torfin"}], ";", " ", 
  RowBox[{"defin", "=", "thetafin"}], ";", 
  RowBox[{"sdefin", "=", "wfin"}], ";", 
  RowBox[{"cxfin", "=", "cfin"}], ";", 
  RowBox[{"Zxfin", "=", "Zcfin"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tal1", "=", "toral1"}], ";", " ", 
  RowBox[{"del1", "=", "thetaal1"}], ";", 
  RowBox[{"sdel1", "=", "wal1"}], ";", 
  RowBox[{"cxal1", "=", "cal1"}], ";", 
  RowBox[{"Zxal1", "=", "Zcal1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tar1", "=", "torar1"}], ";", " ", 
  RowBox[{"der1", "=", "thetaar1"}], ";", 
  RowBox[{"sder1", "=", "war1"}], ";", 
  RowBox[{"cxar1", "=", "car1"}], ";", 
  RowBox[{"Zxar1", "=", "Zcar1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tal12", "=", "toral12"}], ";", " ", 
  RowBox[{"del12", "=", "thetaal12"}], ";", 
  RowBox[{"sdel12", "=", "wal12"}], ";", 
  RowBox[{"cxal12", "=", "cal12"}], ";", 
  RowBox[{"Zxal12", "=", "Zcal12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tar12", "=", "torar12"}], ";", " ", 
  RowBox[{"der12", "=", "thetaar12"}], ";", 
  RowBox[{"sder12", "=", "war12"}], ";", 
  RowBox[{"cxar12", "=", "car12"}], ";", 
  RowBox[{"Zxar12", "=", "Zcar12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tal2", "=", "toral2"}], ";", " ", 
  RowBox[{"del2", "=", "thetaal2"}], ";", 
  RowBox[{"sdel2", "=", "wal2"}], ";", 
  RowBox[{"cxal2", "=", "cal2"}], ";", 
  RowBox[{"Zxal2", "=", "Zcal2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tar2", "=", "torar2"}], ";", " ", 
  RowBox[{"der2", "=", "thetaar2"}], ";", 
  RowBox[{"sder2", "=", "war2"}], ";", 
  RowBox[{"cxar2", "=", "car2"}], ";", 
  RowBox[{"Zxar2", "=", "Zcar2"}], ";"}]}], "Input",
 CellChangeTimes->{{3.51863778446875*^9, 3.518637882203125*^9}, {
  3.518675714921875*^9, 3.5186758090625*^9}, {3.519442425203125*^9, 
  3.519442437984375*^9}, {3.53416646871875*^9, 3.534166479875*^9}, {
  3.534166520890625*^9, 3.53416661540625*^9}, {3.53416664634375*^9, 
  3.5341667288125*^9}, {3.534167389859375*^9, 3.53416742271875*^9}, {
  3.534481455578125*^9, 3.534481467046875*^9}, {3.534481596953125*^9, 
  3.53448161109375*^9}, {3.534481748515625*^9, 3.534481764453125*^9}, {
  3.534481800265625*^9, 3.534481807890625*^9}, {3.534481851265625*^9, 
  3.534481854609375*^9}, {3.534481917046875*^9, 3.534481922234375*^9}, {
  3.534481964609375*^9, 3.534481981078125*^9}}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MechanicCnode", "[", 
   RowBox[{"n_", ",", "position_", ",", "comment_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"n", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "[", "n", "]"}], ",", "0.", ",", "Real", ",", 
        "\"\<N\>\"", ",", "\"\<force\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "n", "]"}], ",", "position", ",", "Real", ",", 
        "\"\<m\>\"", ",", "\"\<position\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sx", "[", "n", "]"}], ",", "0.", ",", "Real", ",", 
        "\"\<m/s\>\"", ",", "\"\<speed\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cx", "[", "n", "]"}], ",", "0.", ",", "Real", ",", 
        "\"\<N\>\"", ",", "\"\<wave variable\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Zx", "[", "n", "]"}], ",", "0.", ",", "Real", ",", 
        "\"\<N/m/s\>\"", ",", "\"\<Char. impedancs\>\""}], "}"}]}], "}"}], 
    ",", "\"\<mechanicCnodes\>\"", ",", "comment"}], "}"}]}]], "Input"],

Cell[CellGroupData[{

Cell["Loading Library", "Section"],

Cell[TextData[StyleBox["Derivative[1,0][Atan2][y_,x_]:=\nD1Atan2[y,x];",
 FontFamily->"Times"]], "Input",
 PageWidth->WindowWidth],

Cell[TextData[StyleBox["Derivative[1,0][Atan2L][y_,x_]:=\nD1Atan2L[y,x];",
 FontFamily->"Times"]], "Input",
 PageWidth->WindowWidth],

Cell[TextData[StyleBox["Derivative[0,1][Atan2][y_,x_]:=\nD2Atan2[y,x];",
 FontFamily->"Times"]], "Input",
 PageWidth->WindowWidth],

Cell[TextData[StyleBox["Derivative[0,1][Atan2L][y_,x_]:=\nD2Atan2L[y,x];",
 FontFamily->"Times"]], "Input",
 PageWidth->WindowWidth],

Cell[TextData[StyleBox["Derivative[1][ArcSinL][x_]:=\nDArcSinL[x];",
 FontFamily->"Times"]], "Input",
 PageWidth->WindowWidth],

Cell[TextData[StyleBox["Derivative[1][SecL][x_]:=\nDxSecL[x];\n\n\
Unprotect[Sec];\nSec[x_]:=SecL[x]",
 FontFamily->"Times"]], "Input",
 PageWidth->WindowWidth]
}, Open  ]],

Cell[CellGroupData[{

Cell["Component description", "Section",
 Evaluatable->False],

Cell["This model simulates a 3D model of an airplane.", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.6335297340094624`*^9, 3.633529767976405*^9}, {
  3.633530767174556*^9, 3.63353077389894*^9}}],

Cell[CellGroupData[{

Cell["Parameters and variables used in this component.", "Subsection",
 Evaluatable->False,
 PageBreakAbove->True],

Cell[CellGroupData[{

Cell["Declarations", "Subsubsection"],

Cell["Alias for some variables", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]", "=", "Thetao"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Psi]", "=", "Psi"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Phi]", "=", "Phi"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "Alpha"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Beta]", "=", "Beta"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalLambda]", "=", "Lambda1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalGamma]", "=", "Gamma1"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["M", 
    OverscriptBox["\[Theta]", "."]], " ", "=", "Mdvtheta"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["M", 
    OverscriptBox["\[Psi]", "."]], "=", "Mdvpsi"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["M", 
    OverscriptBox[
     RowBox[{"\[EmptySet]", " "}], "."]], "=."}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"q", " ", "=", " ", "qpress"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q0", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q1", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q2", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q3", "=."}], ";"}]}], "Input"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Declarations of variables", "Subsubsection"],

Cell["\<\
The global output variables are those variables that are of interst outside \
the component.\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"outputVariables", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "xcg", ",", "0", ",", "double", ",", "\"\<m\>\"", ",", 
        "\"\<Horizontal position 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"{", 
       RowBox[{
       "ycg", ",", "0", ",", "double", ",", "\"\<m\>\"", ",", 
        "\"\<Horizontal position 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"{", 
       RowBox[{
       "zcg", ",", "0", ",", "double", ",", "\"\<m\>\"", ",", 
        "\"\<Vertical position\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "vx", ",", "0", ",", "double", ",", "\"\<m\>\"", ",", 
        "\"\<Horizontal speed 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "vy", ",", "0", ",", "double", ",", "\"\<m\>\"", ",", 
        "\"\<Horizontal speed 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "vz", ",", "0", ",", "double", ",", "\"\<m\>\"", ",", 
        "\"\<Vertical speed\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\[Psi]", ",", "0", ",", "double", ",", "\"\<rad\>\"", ",", 
        "\"\<Azimuth angle\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\[Theta]", ",", "0", ",", "double", ",", "\"\<rad\>\"", ",", 
        "\"\<Elevation angle\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\[Phi]", ",", "0", ",", "double", ",", "\"\<rad\>\"", ",", 
        "\"\<Bank angle\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "Ub", ",", "100", ",", "double", ",", "\"\<m/s\>\"", ",", 
        "\"\<Speed xb-axis\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "Vb", ",", "0", ",", "double", ",", "\"\<m/s\>\"", ",", 
        "\"\<Speed yb-axis\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "Wb", ",", "0", ",", "double", ",", "\"\<m/s\>\"", ",", 
        "\"\<Speed zb-axis\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "Pb", ",", "0", ",", "double", ",", "\"\<rad/s\>\"", ",", 
        "\"\<Angular velocity\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "Qb", ",", "0", ",", "double", ",", "\"\<rad/s\>\"", ",", 
        "\"\<Angular velocity\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "Rb", ",", "0", ",", "double", ",", "\"\<rad/s\>\"", ",", 
        "\"\<Angular velocity\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "q0", ",", "0", ",", "double", ",", "\"\<\>\"", ",", 
        "\"\<quartenion 0\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "0", ",", "double", ",", "\"\<\>\"", ",", 
        "\"\<quartenion 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "q2", ",", "0", ",", "double", ",", "\"\<\>\"", ",", 
        "\"\<quartenion 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "q3", ",", "0", ",", "double", ",", "\"\<\>\"", ",", 
        "\"\<quartenion 3\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "AlphaAttack", ",", "0", ",", "double", ",", "\"\<rad\>\"", ",", 
        "\"\<Angle of atack\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "BetaSlip", ",", "0", ",", "double", ",", "\"\<rad/s\>\"", ",", 
        "\"\<Sideslip angle\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "altitude", ",", "0", ",", "double", ",", "\"\<m\>\"", ",", 
        "\"\<altitude\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "gfx", ",", "0", ",", "double", ",", "\"\<m/s^2\>\"", ",", 
        "\"\<g-force in x\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "gfy", ",", "0", ",", "double", ",", "\"\<m/s^2\>\"", ",", 
        "\"\<g-force in y\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "gfz", ",", "0", ",", "double", ",", "\"\<m/s^2\>\"", ",", 
        "\"\<g-force in z\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "CL1", ",", "0", ",", "double", ",", "\"\<\>\"", ",", 
        "\"\<Lift coeff. wing 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "Cd1", ",", "0", ",", "double", ",", "\"\<\>\"", ",", 
        "\"\<Drag coeff. wing 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "Fax", ",", "0", ",", "double", ",", "\"\<N\>\"", ",", 
        "\"\<Aero force in z\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "Faz", ",", "0", ",", "double", ",", "\"\<N\>\"", ",", 
        "\"\<Aero force in x\>\""}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
   ";"}], "\n"}]], "Input",
 CellChangeTimes->{{3.518677965015625*^9, 3.518677965015625*^9}, {
  3.518859664453125*^9, 3.518859695546875*^9}, {3.51885990190625*^9, 
  3.518859910359375*^9}, {3.534218733859375*^9, 3.5342187765*^9}, {
  3.538221842021909*^9, 3.538221871552781*^9}, {3.5388296092073016`*^9, 
  3.5388296270199156`*^9}, {3.5764191068929653`*^9, 3.576419120121722*^9}}],

Cell["\<\
The input variables are those variables that are inputs during the simulation \
to the component. In practice thery are very similar to input parameters as \
the can be converted from each other in the Hopsan interface. It only effects \
the default settings in the component XML file.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.633530389366946*^9, 3.633530496639082*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputVariables", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "thrustl", ",", "0.", ",", "double", ",", "\"\<N\>\"", ",", 
       "\"\<Engine thrust\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "thrustr", ",", "0.", ",", "double", ",", "\"\<N\>\"", ",", 
       "\"\<Engine thrust\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "dezthrustl", ",", "0.", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<Thrust angle\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "dezthrustr", ",", "0.", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<Thrust angle\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "deythrustl", ",", "0.", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<Thrust angle\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "deythrustr", ",", "0.", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<Thrust angle\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Mfuel", ",", "0.", ",", "double", ",", "\"\<kg\>\"", ",", 
       "\"\<Fuel weight\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Mcargo", ",", "0.", ",", "double", ",", "\"\<kg\>\"", ",", 
       "\"\<Cargo weight\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "rho", ",", "1.25", ",", "double", ",", "\"\<kg/m3\>\"", ",", 
       "\"\<Air density\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "vM", ",", "340.", ",", "double", ",", "\"\<m/s\>\"", ",", 
       "\"\<Speed of sound\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "vturbx", ",", "0.", ",", "double", ",", "\"\<m/s\>\"", ",", 
       "\"\<air turbulence x\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "vturby", ",", "0.", ",", "double", ",", "\"\<m/s\>\"", ",", 
       "\"\<air turbulence y\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "vturbz", ",", "0.", ",", "double", ",", "\"\<m/s\>\"", ",", 
       "\"\<air turbulence z\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "wturbx", ",", "0.", ",", "double", ",", "\"\<rad/s\>\"", ",", 
       "\"\<air turbulence x\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "wturby", ",", "0.", ",", "double", ",", "\"\<rad/s\>\"", ",", 
       "\"\<air turbulence y\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "wturbz", ",", "0.", ",", "double", ",", "\"\<rad/s\>\"", ",", 
       "\"\<air turbulence z\>\""}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.518678097375*^9, 3.518678097375*^9}, {
  3.518859701390625*^9, 3.51885971253125*^9}, {3.51885991175*^9, 
  3.51885991428125*^9}, {3.5220457101110153`*^9, 3.5220457138604493`*^9}, {
  3.522045777956208*^9, 3.522045787615116*^9}, {3.5678802618306117`*^9, 
  3.5678802891861763`*^9}, {3.58174440079202*^9, 3.58174442225602*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nodeConnections", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MechanicRotCnode", "[", 
      RowBox[{
      "al1", ",", "0.", ",", "0.", ",", 
       "\"\<mechanical node left airleron 1\>\""}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MechanicRotCnode", "[", 
      RowBox[{
      "ar1", ",", "0.", ",", "0.", ",", 
       "\"\<mechanical node right airleron 1\>\""}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MechanicRotCnode", "[", 
      RowBox[{
      "al12", ",", "0.", ",", "0.", ",", 
       "\"\<mechanical node left flaperon 1\>\""}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MechanicRotCnode", "[", 
      RowBox[{
      "ar12", ",", "0.", ",", "0.", ",", 
       "\"\<mechanical node right flaperon 1\>\""}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MechanicRotCnode", "[", 
      RowBox[{
      "al2", ",", "0.", ",", "0.", ",", 
       "\"\<mechanical node left airleraon 2\>\""}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MechanicRotCnode", "[", 
      RowBox[{
      "ar2", ",", "0.", ",", "0.", ",", 
       "\"\<mechanical node right airleraon 2\>\""}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MechanicRotCnode", "[", 
      RowBox[{
      "fin", ",", "0.", ",", "0.", ",", "\"\<mechanical node fin\>\""}], 
      "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.518678117875*^9, 3.518678117875*^9}, {
   3.51885998453125*^9, 3.518859990515625*^9}, {3.519319018984375*^9, 
   3.519319030734375*^9}, {3.534157702359375*^9, 3.53415777759375*^9}, 
   3.534166849125*^9, {3.5341673530625*^9, 3.5341673644375*^9}, 
   3.53448127625*^9, 3.534481376453125*^9, {3.53448148078125*^9, 
   3.534481481796875*^9}, {3.5344816129375*^9, 3.534481614015625*^9}, 
   3.5344817658125*^9, 3.534481809015625*^9}],

Cell["\<\
inptutParameters are parameters that are normally used throughout the whole \
system.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.6335303335127516`*^9, 3.633530382870575*^9}}],

Cell[TextData[{
 "The local parameters are the component specific parameters. Default \
parameters are based on the F-16.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
X05Ux726WZdphDplUY9KfZLKZZXneervh3WZg3Yz9ucZuR0PLfUklwEAgKwU
j2PfP4xqPNZEdd3LltZlGqtO1uUYsT5r5X16nVL7+Tpo+7BNPv43t+OhpZ7k
MgAAkDzZrV/Qpe/ofnZtXfaB9a7X6cG6TGPVybocI9ZHy2VXKbafGKyXk9vx
0FJPchkAAEiWlOt9bySB9b4nqPuKXBY/Kfd03jsGU24/f+y59UxC95dw422v
pMceDrkdDy31JJcBAIDkSLk2wZWEzx0z3x93gjbQctm9dblGqFdW/XApx9XW
36fbHNpP+q2pcysd9m/L7XhoqSe5DAAAJMPfe+iylveD7zcmN3csoC2O5uzv
z1ivrPrhOeey2uueir7Pedvf5pkcmIOW2/HQUk9yGQAAiJqUc8fOpvxMPkVz
9/dnrFdW/XCZebypdfv5zwuuOvyttt7Ltq7PjO1GLgMAAFGScu7YhYTPYflC
es5hSVFDLptsPYkZ65VVP3xpuaxSju3f76C5n7HUZ4b2IpcBAICoSL8131z/
r/eabykqHi/JZfGTcg7W3j2ipbSf7NZKfdvhb/rOHd8x1mfCdiKXAQCAKPic
cdeh7zbaHkkpkpn3xZqxXtn1w7Xjd4ntVzxOpNv80Hcx12fktiGXAQAAM9Jv
PTfXrzuxLru1hly2sS7XCPXKrh8+Zi7z95/c3nuXXdvPf/bh/taeG7eHW0/1
tYSvp/qF//mV9Xs5YZuQywAAwOyknHPTpV/2wf+8aX8yJjnksuLxXxT+oPA9
KecRVucSbnLJ3yPnsqeVv5u9ffianl/K+V7b3zu2bpNKXc6l2xy0m1yOi1pb
kMsAAMBspFyr4qZDH+yd77dlt879CG2ZZC7zffFvFv4q8BhwWe1KEp4/KPra
Nb2PaSnnU7rn2NuvriWXXW1zjXV7NNTJHc/3Hc4NWY1jJpcBAICpyW7ef5c+
l/vZtXXZY+bzalK5rHj8g8K/73Ac1O+ZXljXoWe9H5T6rAY83xPZ3WM6q31v
L5fJbq+7D7H3+6Xfuj+blHN77RiJ+v0BAADpkXLc1EYGrpONxvbdpJTLiscf
98xjdW5+YVL3T8fOZf45t+txvqu2R0Mu234mkkyulXKs82XH3O7uCSa5Twa5
DAAAjE3KOf1XEj53rHVfWTS2cxK5TMpxi38+Uiar3k9NJptNkcv8827XL72s
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
CNiRfvu9b0RZa4drOIBDGq7Z0a7dJY/X2NvLWNp5ryHLOdHvA5ZaboYNchna
SLkerTYmuon72bV1uQErPf5mDu5NwTUcwCGS4Dg5aZ5DcVc97/nPua5bzqFR
z70VfZzpO+tyIT7kMoSQfp/9u3tuzEFD9qTfPeab0PMuuSx/xeO7hV8Wfsu6
LEiT6GsJRb2Xhj93hs6daHJsXY+Aeq6Ucke9LgtskMvQhYwwVwbIhXSfk+l+
7rV0/AybXJa/4vGn/n3+pnVZkCbR510dW5croNxnAzLZlXX5A+uo5bLo98LG
/Mhl6EP6rS3nxiucWJcdGEr6rWHa+/4xuSx/xePr/n3+c+uyIE2ij/NLYm8b
KefWds5kEvn4xUr9jpXy31qXC/Ehl2Eo6b4X08H5NEBspN+ef3dj9IvIZfkr
Hr/u3+dfcm5EH6KvO7+2LleH8r8I/Kz3fUr18nXTctmNdbkQH3IZxiLl2kra
daHt3HohEa8XBUg5/+FCwsfuOu5z69HmdZDLlqF4/My/18wxQ2f+PFU/F51b
l6tjHbaff9Xns7/3/dXzFPsMUn5+vXe/z7pciA+5DGPr2Y91ee7IuuzA1oDP
GVYTlIVctgDCHDMMIPpYwI11uQbUJ5vznpRjhOrvzWvrciE+5DJMRfqN+3LH
YxLj4ZEn6T4u98Ef55ONPcupf4LW95k5Zuitoe9/aV2uAfXJ5rwn+r5rG+ty
IT7kMsxB+q2T4M5jrLOPyUm/dWzcufN0pvJl0z9B6/vMHDP01pDLkh0rl9N5
TzK7l4npkMswJ+m+rrgbG+bW5V9Zlx35kUT2fcipf4KD7/VP/fv9d6zLgknf
5+c+R12N9fmjZLa2RE7nPdHn/q2ty4X4kMtgQco5aO7zoy778I66lgKWS/rt
k+6OV5P55jn1T3Dwvb737/cfWJcFo76vLoed+etY/bo3yn33hlyW7FrsOZ33
JPG1MjEfchms+c8M75VzVpN7zmfoo8exFsWeDjn1T3Dwvf6H/v3+C+uyYND7
6NYNeuU//zl0P/73faY6HnKuEX3v4nvrthhQn2zOe6LvLcd+rthDLkMspN89
jN579WIZpLw3e658Rt3mJqZrZk79Exx8r/965Tjk3JYIKffecueZNwE5rM1q
QBm0XPZg3TYD6pPNea/S1646ti4X4kMuQ2z8teV1h2vbB//zs875Qdyk+1zG
7XG0si67Upds+icIer+3x+zftS4LGt8j9znixuew0HPMpLnMl6v+fO+t22po
XazLMVJdtFxGnwV7yGWIlfRbI89dI6O5zwGT46br2p/R33fNqX+CoPebOWYR
kXLPl20O0/rXfbgs95MZclmy543Uy1+ri9aPGfReI0/kMqRAuu8pFcW8IMx2
fPTZK88dT0nslZdT/wRB7zdzzGzb/4n/fOei43WnjRv/4cZHu88aX/jXGb2v
3vCc0X7mdKAu2Zz3cnpfMC1yGVIi5Rj+qw7Xwnf+2mqyjh4mPx6e+fe3y3yO
5Nb1zKl/gqD3mzlm87a3G5txKuWeGV3WBTp07bn2Oeyo4XXnymWDntPwfcnm
vCfKWFfrMiFO5DKkqGd//Krp+oi0SLnWWZd8nvQ+eFzHl6fSj/sd67Lkxl8/
3BiM1xPkMHffPmje0ES57FZ5ziSvezmd95T35IN1mRAnchlSJrvxa9r1rYk7
5kfZLwazv99dx7M++OMj6fGsOfVPEPye/wv/vn/buiypk3ItqbXPYV3GOh86
t1z55131LNdcuezY+j3oWZcszntS3o/dO36sy4U4kcuQC+m+3oO7JroxJowT
ipj0W/8lq+ydS/8End7z3/Xv+4+ty5IaKddiXfvc1OW80eatz3Uvh2anSjmn
yGVXynMmuRZWLuc9yWz/AkyLXIbcSPf10ZMe45Yrfy27lG77Jbj3PckxOwfa
Iov+CTq959W+3Mq6PDHz53x3X9yNI+yyT2Gbe3/+cTlskvnJM+aytfV71LMu
WZz3pBx3v/fZoXW5ECdyGXIl5RyCTcfrdHJrQuRG+u0vvpmq7xSDXPonMfPH
3OfW5aiV6cf+vf9d67LExPdzX/n3bMgezlV3Poe59T9mGUMxUS7bKM/5yvo9
61mXLM57/ppWf0/eWJcLcSKXYQmkHNPSZX63+9m1dbmXpMd7tJi9EHLpn8Ss
Ty4rHl8p/Ez7veLxa4UfVY7XHxQ+6fj83/a/u+g5ZlKuw+v2GHwzcg5za0ed
WJ1DJsplr5Tn3Fi/hz3rksV5z1+n6u/JlXW5ECdyGZZE+t2LiXrP4ZRJeU/z
XLrd03TvX5LzJQa0Uxb9k5h1zWXy+L7E57XvfbnwncKntX9/v0sGkIXOMZPd
Hs4uh4WORz/k1j/nsXX9KvWcIpdlkwFyOe81ZOUL63IhTuQyLJGUczfcHO4u
c5fczwetf4yD7d91DuC2/VfWZTdqryz6JzHrksuknHPk3pNPQ3+v+jsdyrRq
669LuSaOyy5n1u03oN2fVHLYrYSdD0LOF65dzmPu20yUy46V50xyzFwu5z3R
x5aeW5cLcSKXYcmk31p/7nq/qPs1I7f5iw5tzf3Kr+XTP4mZlq/k8b119V5X
h1z2FX88f9KxXI1zzGR3b+TGuv061MflMDd20I0h7LLnRZv3/n1w54pk5gdP
lMu0NSburOvasy5ZnPcko7VYMD1yGVCS7ntj8XlX/7Y+lIPd+/DSupyxyKV/
ErN6vvL//kbhS/7f7vzw2aHfa3n+TVO2O/B7f+Tf/z9Wvnftvxft/TIpP/ty
a2m4NTXG3MPZtbv7TC3Z9VcnymXPlOdMck32XM57os+d4LNdqMhlwGNS3s/R
Pt+qY0xj97bdeN9saFPWw9TbLYv+Scyq+Up263kcHHMYkstktwbIXq6r/Iya
L4rHV/37/3Ple9tx2Cvr9quU6ZnPsK9HzmHu3HCW03l3ilzmn7f+nB+s6zqk
HtblGKEet8p7wnUOKnIZoPP9iwvR56C93WYM63KmpKHPxf5xge1mXY6c1XKZ
yxVB6yceymWyW/Pj47035We2Y3tdjnla+96q8rdyVPn68fZcZNxurnxrn8Pe
jpTDXF658s+7sj42Jmy7qXKZto5ScuvW5nLem+p9Rp7IZUA7KedDnDWcW5O/
ZszcllofLLn+glW7WZcjZxPmMvf91vGLUo71255ftGz2Q/+936t8beO/djlz
O233cL5qOif28NbnupdL6q9OmMu0fJxcu+Zy3hP9s12ue1CRy4Bw5DLaz7Ld
rMuRM5lgHKPPTqH5btWUzYrHH/qv/0nla9sxgscTt8uRz2FuHGGX/Sza3Fdy
WLb7wQe07VS57FZ53uTGzeVy3lPeiyTHlWIe5DIgHLmC9rNsN+ty5KyWy/bG
HvoMoe0freayLpms8jtqNpPaHDPZre3g1oMf9XN3n8Ne+XqNtYezq4sbq3wq
C19btdbWU+Wya+V5k1tnIofznjweh7yV5DosmAe5DAhHrqD9LNvNuhw5q+er
SjbbHqsfxyLKbi+yul/9jOzW+dB+pnGemX/uvWxW69u53LT2/z14fXwp57a5
9eXH3MPZrafq5uaeCOO12tp+qlz2WnnetXV9e9Qj+fOeZLRvAeZBLgPCkSto
P8t2sy4HZnu/tWz2cY6ZDFgfXx7v4TxWDrv1z3lMDuv0XkyVyzbK826s69uh
/NXPHqrH1+kY7TNzXY6V9yLJfb4xD3IZEI5cQftZtpt1OTDre17PZt/2/+3W
dAhaH192ezhvc9gYGcxluTfbHGbdTi11r67XH+VeiBPmsjPleWddH6ZDWbcZ
7LLDMfo+laxWy5dbV9blQrzIZUA4cgXtZ9lu1uXA7O97NZv9ee1vZ299fCnv
q7kc5sYQ3o2Uw977HObGOka7doTs1uu/UvLO4PGeE5V5qlymjbM1zwI9M1iX
4zS6rCblXM16WS+sy4V4kcuAcOQK2s+y3azLAZP3vprNHt3/8Dns1P/3WHs4
u/7tje9Pqntdx+BADnO29/WizZMT5rJj5XlvZ67blBksmawm+pjSc+tjD/ES
chkQjFxB+1m2m3U5YPb+r5Q+/PdH6ru6te/dfDU39u25dV1b2mC7b1rTev1J
5MlanabKZSvlee8nrEcMGSzKrCbl5wb1Mqytjz3ES8hlQDByBe1n2W7W5cDs
7/tKdveE/u+R+qUP/vnc88acww7tm+a+llQOU+o4VS57qr3vI74v7tiZMoN9
qD23y1BunuBYY3Nny2r+GK2/XnJ7FmA+Qi4DgmnndOsypYT2G9Zu1uXA5O/z
9p7QVUOfvY+3vk+77tPflMdrh7zxfYZqH3aUfaHl8L5pSdzX61jnSXKZf+7B
51qZN4O5OZEvq+9tU7ml3NvhTBLIag3tFuW4WsRByGVAsDGudUtG+w1rN+ty
YPT39dA9oT7ufX/V9XEHZSbfJw8pl+tTd1ofX3b7pjXlMJdZriSjHKa0wZS5
THvuxj29xTiDNZQp+LwnkWa1Kd9j5EnIZUAw7VxtXaaU0H7D2s26HBj8Ph66
J9Q3h136fmJjv7tjOd04uOuO5XD35RrvA8jh/au3OWy9lH7rlH120deBeV45
DtcSUQZrqMOg855EkNVE/ztnjz80EnIZEEw7L1uXKSW037B2sy4HOr9vh7JI
H//G//8/nqJ/J+W+X1peCO2LH/vnOZbd2Eet7tvxlS/rfdmlaGjnUdpC9Lw1
1pqdo2ewhjqMft6T+bPaXltZH3eIm5DLgGDaOdi6TCmh/Ya1m3U5cPB92maR
24Ys0se2f+fmeLm5Xmv/9Un25BJ9nYIuftbw9WoOG2VOWupk5Fwmj++DjTUu
dpYM1lCfWc57Mk9Wq2a2aPZXQ3yEXAYE086z1mVKCe03rN2sy4FH70l1PYxb
7dge0OfdNF2TZbcG+vsJ6rRuKZsb1+jGYB4X/uvC/3agLqOPr8yNDMhlkshY
xIHtY3bekwjGQGKZhFwGBNPOrdZlSgntN6zdrMuxZFLOuTrxfdSx+mm99j6u
9OdHWx9eypypzYVxX/vPe9Q9ybXrZz6mgnKZLCCDNbRPVOc9IathnuOMXAYE
0s6j1mVKCe03rN2sy7EkUuawU98XHmtezih7H8tur9pXI9b3ZUOZv9fw9Tvf
h/8vRR+zeWH9HsZO9Fz2n8kCM1hD+0R/3hOyGsY/pshlQCDtnGldppTQfsPa
zbocOZNyvYuXvn/1dqT+VHXPrTHvba39848yx8zX/RsH6rLtF/5qnlvt98+V
n39j/Z7Grnj8vxP145t8SyLNYA3tk+R5T3ZZ7VsTvpdktUwJuQwIpp0frcuU
EtpvWLtZlyMnUs7TcvnmSsbLYQ8yw55bMnCOmYRn0P8lpG8g5Ti7vX6j9Xsc
E5l/LOJ/p3z/1rodOrZZ0uc90ddj/GfCfTW0HzfkMiCQdi60LlNKaL9h7WZd
jpS5nCS7PZwfRuoHuUxzJQZ7bkmHOWZS5ri2HOb68z9Rvh40503KuWn8be/a
w3w+mOyy+6Pj1bptOrZj0seR7MYbV60r32cMJLTjhlwGBKLvQftZtpt1OVIi
uz2cXQ774Uh9nGjWepeWOWby+F6glkH31hsRfQ7daWBZnmuvYX0MzHicubaO
aj6Y6Fk5qXuYqZ/3RN9z4uTA75DVFk7IZUAw7RxnXaaU0H7D2s26HDHz/ZlX
vi+krSvYR7RrvUtljpns7gU25bDqeiPqPTDfD6z/XtDaHaKvr39n3UYTtHmU
GaylvHvrsVi3YcfyJ1fmWvm1XBW87mrlechqCyLkMiCYdj6zLlNKaL9h7WZd
jpj4voq73/NG63/2tF1j0K1tEVUOq9Xd5bD/1pf5lw19rE7rPvp+n5YRVgd+
z92X0cZGXlq308A2TiqDNdThQXnN1vczJqmf96ZsfyGrZUvIZUAw7dxlXaaU
0H7D2s26HMZtcCzj7uH8hbSsMRgT2Y3JdFnrnVIPN05zu+5jr7696GMRt22k
ZlQpM9lVw+8FjYGMgWSQwRrqpdWl8/0aw/cl6fPe3Nc7IatlQchlQLC5z7O5
of2GtZt1OWasr+vvb/cxnqSfbF3HA/Wv5jBtTOaDlDns31S+th7hda8b2uud
zxIr/3PPfJ+saS3He+s2PNC2a8ksg3V4P1PKy9H/rbaU/Zn2d2RQDrJaYoRc
BgRLrX8XG9pvWLtZl2PC+m33cL4Yse9QXdsi6uNODo/JdDnsSmrrPhaPv6j9
3HpgOVxfUrsf17XdR9urbWB9FpPBGup/qZT3zLpcHcof3d9qx2Ov3vZRfF4h
ZLWoCbkMCKadf6zLlBLab1i7WZdjxPps77e4fqO2DmDffoC6tkVsx50czmHb
dR/XTf2Zhn6f83Jg2U4Gvg/nRm266AzW0CbaZxIb63J1KL/53+qAsmt/R9Hu
tS5ktWgIuQwIpp1rrMuUEtpvWLtZl2NA+UP3Me7C3ddx47QOrm1hfdzJ4blx
ndffl/09a/9tJTu0rsUd8Nwvpd+alrNkMiGDhbbTWqnXlXW5OpQ/2fNe6m3v
60BWs2l3chkQSDuvWJepoZzflXKdtt+yLkuK7Reb1NpKDu+f1Yd7nl5rW8x5
3Ek5N+5Y2nNYdf39XvugVfpJ3/X//z3ZZbUxspnL0m8C3xuXKydZT0LIYEPa
7lipa7T3bJTyJ3Xeq5V9o7T9xrpcI9SLrDZ9G5PLgEDaOcS6TA3l/FNfvm9a
lyXF9otN7G0lu/2zXG4aM4ddSctYvhiOO3m8RklTP2XUfdCknI+3zRO/7f/7
F/57m8r3BmUz/3zb+5z1ut1v358R25IMNiLR19iMYo5TYPmjPu8dKLu2H2Ay
c/s61nXurObOt70+z0qBkMuAYFP270Yu59d9+f7cuiwptl9srNpKHt/3Oq18
fbteoMthQ9eJ2Oo8ls/iuJOwNUqq+6CNvv6+7MZIvfHv0fZ1j/z3NzJiNpvo
2CKDTd/GT5U2mX1NwAHlT/YaIeVc13rbJ7MW5gj1nyOrvfPnwI1klNWEXAYE
G7N/N3E5f92X75dT9Atzb7/YzNVW0n7f69vSvG57H4PH8s1x3Mkuh7WtUbLt
+8+yD5rs9gw78//+of/37yk/47KJ6Z5VQgazbPtkz7mplbdWdi2LJLN33ERt
QlYLaydyGRAopWtc8fiZL2M0c8xSar+YTNVWcni/4p8WfjHS9XJ7D2mUsXxT
HXeyW6PkUA7bWF03ZZeNV/7ff+j//Se1n9tmM/fzs6xdL2SwqIg+rnhlXa7A
sid7jUi53WduJ7LafpuQy4BAXfp31iTCOWYptV9Mxmorebw+u3bfS1uzva9t
v3mWe0hDjzsp54lpa0Vu90HbxHCdlN1aDm8rX/uq/9rPlZ+vZrNR84uQwaIn
el83iv3lAsqe7DWCa92gtlt0VhNyGRAspXOtRDjHLKX2i0nftpLduoBN+2T9
eMTr3K1Ekl36HndSfsZd3Y86unFHsps7dlH52qqtzy27bHY54HXJYAkSfZ5T
lHMOlbIneY2Q8p77Xg6wLlfKZEFZTchlQLDQ/l0MJMI5Zim1X0xC2kp26wJu
WvrNPxqx/xxtdul73KWQA2Q3tvK49vW9OWa1YyN4Hp+QwbIhu0xetbYuV2DZ
k7xGiL7nezLrYKZCMs1qQi4DgoX272Ih5fwgV86/Y12WFNsvFlpbSdi6gGPl
MDcGzn3u7uaiRZ/Dcj3uZPc5/Hvle+ocs4DnJINlTPR9tGbZ/3uEsif5t+r7
7/U2T2bfuJRJBllNyGVAsNT6d7L7bP0PrMuSYvvFotJeh9aj+MmI1x23JqPL
YUnMRVnCcefff1f+a+V7jXPMKj9DBlsYKfuo9feo93jWmcue5N+q7PaxqLqy
LtdSSWJZTchlQLDU+nfF4x/6cv6FdVlSbD/jtlr567u2P2m1DzxmDjvLsR+d
y3Hn+xcP2vVaanPMhAyGrz3K8lV7uT5Gqf6tin6PcmNdLjx6j6LNakIuA4Kl
1r8rHn+9UtZZ1ybPof1mbpvnstvD+aHhPP/Thq939eBfx73eyrruHHeD67fN
YD+fqH9BBkuU73/W38tb63IFlj3Jv1XRP0s7sy4XDr5vUWQ1IZcBwVLs38nu
nsrfjaAsybXfhG1xJLs9nLW9w34u490Pe+uvNa4/vbKuO8fd4ONmLdwHQ9jx
slLe3wfrcgWWPcm/VdHXwDy1Lhd6vZcWWe1bQi4DgqTYv5OI5pil2H4j1t2d
37d7ODftHfYzrY16uPf9dtenjmZfFo67zuUmg2GM4yjV4z+ZstbKrfXfk1sv
CY3v7xxZzfm2RLi/GhCTFK9vEtEcsxTbb0Bdj2W3h7N238ut0fGLkc7fd77v
7tZnNB+vGpsUjjshg2G6Y0u7Hx99Py/Wv9WAcj8o7b2yLhcmfc+jGAMJLE0K
/TulzNHMMUux/QLr5faHOpb2vcPG3MP5zvet3bk5ir3pYhbbcSfzZLBfCBkM
X2u8fxP9Oqsx/K0OKXcs5xuYHQdkNWBiqZ5vZXe/5ndov1Hqsd3DeY69w6qO
reueIsvjTua/D/Zd/7VO+5ghX5LofKcUrxGy22PwUd/ZulyIg5DVgFGlmiuK
x7/w5f027der3Ns9nNv2DvvhiH1sd051YyCPpcyA2++98f3vW3/OPeWcG89x
JxGMRZSAfcywLJLo+oApXSMqZT5S2vreulyIl5DVgN7m6t9NUO7f9eX9Me0X
VM5nvs/rzpNvG85zY+UwtwaI+zzb5bAXtXKsRZ8bUuf66JOMZ/T9jO16JSvr
9yaW404iyGAN5VpVfj/6sWqYnj+37J0zrMsVUO5orxEtZT5R2vqNdbmQjsr1
5B8JWQ1oNUX/bqZyV/tqK9pPbR/Xx74Sfc62m6sz1rhEdy50GedVU79Zyvtz
1x2f1+XHwWt+yeMcVl83cm39XlkcdxJpBmsp7/Yzg9+zbnvY88du/Xi7si5X
QLmjuUbk3taIhzTsXybcVwP2DO3fGZd9u+7E7y69/aTcw7lt77CfyXjrdLzz
r3MW0teW8l6dlg1D+/bHHduiLYd9IRnsQd3luJPEMlhDHf7Qvw5zzOCOh2Pl
GIx+b+nUrrG+zBulrTfW5UI6pMO+0kJWw8J16d/FRsq9MFyZzeaYWbVfQPb4
IOPt4Twox4g+R7/rObRx3U1/Hj9vaYvkc1jocScZZLCG+jLHDNXj4blyXL61
LldAuZO6xvoyJzmXD/GQDrms4ffJaliMpv5dCiSCOWZztV8le7xpyB7uXthP
Rjo/vfXnP9fnXg0s9/rAa7lseVw55zb93FVDW2jZM7scFnLcTSSK/cGEOWZ4
fDw8VY7V99blCih3UtdYX+Y3SlufWJcL6ZCBuazhOclqyJJ2LI7wnO6+xecz
lL3aV1sp33/q/6Ym+2xvivbzz3ssu73DtOzx7wo/Henccy+7HDbaeUfKdRe1
DPnxa8rvuHNt07ok32poi9FyZKwk0/tgHduAOWaoHg/auSDqvQ/HvEbMWGZt
vV4+G0EwmSCXNbwOWQ3J0467EZ6zcy4rHl+Rcg5U199rnGMmu3s1NzG3nzze
O6ypz/2XhX8/0nnFXWdd/96tST/Zvty+b6+9/nFbW/nfa6trNYdld04UMlhT
uzDHDNXj4UE5rlfW5TpQ5hRzmTZfebLrBvIjM+WyhtcmqyEp2jE2wnN2ymXy
eF5x11z2R/73/lj53nb9v6jul8njvcOazhN/OeI54873v935YrbPk3396mW5
qrab/+9j2d0bbKvH/5nb+U7IYF3aijlmqB4P2t/LsXW5DpQ5qVwmj/ea/Hg+
sS4X0iKGuayhPGQ1REs7nkZ4zuBcJrt7Kp+2/Z40r7/e2FeT3Xi5lWX7yeO9
w5r2cB4zh936c8GxGI7raeg3rUVfS63KtdH/pHw9+vkjB9qDDDas/VaVeq6s
ywPz40Hbd+OldbkOlDm1XLZS2vjBulxIi0SWyxrKSFZDFLRjZ4Tn3MtX8nhN
vu+Lkhe03/Nff1Hprz+tfa963TiqfP3Yf23SNboa/vZcmdbSvIezG6M3Vg77
UPk7P7Y+nmpt8xBYh71xlaJ/TptSf4YMNk27mu+NgTj4477+N/HKulwHypza
eexYaePo9yNAXCSBXNZQbrIaLI67yXOZ//c3Cl/y/3Z9yM8O/V7l627c37aP
r2WzvfUAZDc28nLu9lO49TnGymHv/d+wW49w8J7LE7RHda7cDxvqUL1nqM5T
EH0d7CjHzwgZbM62Nt8bA3GQci3X+t/JhXW5DpQ5tVy2VtqYPaXRiSSayxrq
QlbD1MfYpLlMdut5fNrl95TvraQhm4myHoDs+v7HE7TZdu8wbRyN4z7T/3cj
/X2+9+3iXi+6NbDkcQ4LOUddVo+7lufV+gN3EdSXDGbb/uZ7YyAOoq8rdG1d
rgNlTi2XnSttHHX2RXwko1zWUD+yGsY8nqbOZe7a+YPCJ11+r+H7K1GymdTm
mEk5n2vbvx08v0oO71s89t/etf8bj64/LmE5bLvOyH+vfO+DVMaetryGNv5z
0nufSjnIYJER5phhdywcK39PUY+xazvvxUj0tZuiHiuK+EjmuayhzmQ19D12
ksll/mdcv+xRNqv11bZ9afffvdbHl936gCH7Fg/9u6o+V3R9ctmtHRmSwx6t
9yj6WMQvKudobY2UJ749tN87nbCeZLBECHPM8LU016RoOu/FSh7PC5/8PIw8
yQJzWUM7kNUQcpxMnctGGcdY+zl3Pa5ns49zzKTD+vg+BxxL+zrtjftl9fib
2T7XWiL8vF8er+HftHZk8Lr70jzWc2vlf+6Zf92mPaXvR6wjGSxhwhwz7I6F
0a9fc5TXuhwdyqv1HaOb14y4CbmsrW3IaqgfE1Pnsi8XviP7635o63t0WV9/
JY+z2bav5vr1jevjS5k7Do3DC953OeDv4V4i3gNZwnLYrfRc71HKvKXtS9o1
4/SaWydksOwIc8ywOxa0c0t059lKeVPLZUm1L+Ik5LKu7UVWWzDt/RrhOevr
MW6z2fY1vi/+Povoc7cf/UzL66xkl83+vPb7b/3PbO/DjHL/J6T9JDDTGb3f
Ie3RO4c1vObJwPPHeeDrkMEWQJhjht2xoJ3DolsfqVLe1HLZ6P0DLI+Qy8Zo
Q7LaQqR+3pXH2azq/5LmMXGj5Y7Y208e72k9eXu0lMOVoc+aKWomEzLYoglz
zPC19OY/xXiNaCnrSmnbqOfvIU5CLpuqXclqGYo9VwSU360t4dZjbNora7vv
8vkU54TY2k8O57BJ2yOgbG8CzwWu7C/875HBUD+WmGMG8ee5+t/ywXnFhuU1
v0Z0KOux0rZRr3eJOAm5bM62JqslLrZcEVDe5/6Yu5bmeUu/lDKrTT4/2br9
pFsOi2K+tjSPXXVjkv7Xwj8RMhjaj6HtHLN/ZV0WmB4HSe2vlcI1tlLW5PaH
Q5yEXGbd/mS1hFjnioDybfdwbto7rLrf1z/yX/vXubaflGNL1lKuJZ9EDjvQ
bq4uZDB0PX7cejW/bl0OmB8Ha+Vv/sq6XC3lje4a21LWV0rbzrqHJPIg5LLo
CFktWnPnisBj5VzC9g57Xvvdlf+ZH+XSfvI4hz0or+ey6o2/hsacwxiLCGBU
kthYuxiusR3Kyp7SGIWQy5IgZLUoTJ0rAl7/WML3DlsFPN82u8yyJtfY7Sfd
cliU644JGQzADETfu/6tdblayptSLtP2nnxpXS6kR8hlyRKymkWbz5bLpNzD
OXTvsF77ffk8M9vnekPbT3bz5ZLMYWQwAFb8NWXvfGFdrpbyppTL2FMaoyCX
5YWsNnn7TpbLJGzP4u3eYaPs9yW7+QY3MbafHF63ZDtfLrocJmQwAJERfd5x
dHtH+rKmlMvYUxqjEHJZ9oSsNmZbjpbL5PHagIf2LO68h3NgGVb+dd7H0H4S
nsPOYsogMk8G2x4PZDAAvTRca6L6TKtS1iRymSR2HxJxE3LZIglZrW+79c5l
Er424GbOv0eZcY5Zw3GSVA6bKYPV74Ml0T8BEDfR90Q8sS5XQ1mTOO8Je0pj
REIuw+5YIKsdbqPgXCblZ2jbzPGg/O52LpTpGu0y4xyzgOPjIaYcZpTB9uqd
Sv8EQNwkob2lUznvSWLrXCJu5DK0IavttUdwLvM//75Wz+jWpJAJ55jJ4f3U
nCtfhpVxO0SRwdqOO+tjBUDa/HW2fl7aWJeroaxJnPcksX3hEDdyGbpaclbr
kcs2Esm9n5YyrnxdBs8xC8xhwe03YZ2jzWBtx531sQIgbSlliFTOe5JQ1kX8
yGUYw1KyWiy5YoJ6Pfj6dLqPJ932tV5ZtF9qGaztuLM+TgCkTRIac5fKeU92
cwGqohwbiviRyzCVHLNaxrlse11pnWMWkMOq+1rvvRdTt18OGaztuLM+TgCk
TRLaWzqV854ktJYK4kcuw5xSz2oZ57K1r89N7euDctiU7ZdrBmtrN+vjBEDa
JKE13VM574m+vnK0cxcQN3IZrKWU1TLOZStfn5/6Nholh43VfkvKYG3tZl0O
AOmTRPZATuW813CtHH2/USwDuQwxijWr5ZbLpJxrsGnJOvc+C52Ocd0Oab+l
Z7C2drMuB9JRPL5S+Fnhc+uyIC6SyN7SKZz3isdTpS0Hr6GF5SKXIRUxZLXU
c1lADtv6urveTPD62muRwQLbzbocSIM8Xh+OXIZHpFwvt36ePLUul1LO6M97
Un6OuPd5pnW5kC5yGVJmkNWSyWVSziM4lMOq98P+sp6XJijTFO9PVhmsrd2s
y4H4+ePeHS+f+v43uQyPiL63dOuaT0bljP6856+d9bYcfS9QLAe5DLmZKatF
l8t8DjvxmaSp3nf+++5a8rTyu9pnfs7LkctIBhvQbtblwOzvu8tVn8nu/sbn
te9t/xa+L8p8FnIZNFKu5VQ/n15Yl0spZ/TnPSn366y35aV1uZAuchmWYMqs
ZlinLjnsROu3VZ5rU/u9f1vJPqOt9+tf5w/IYJ3bLfr+CSZ537fZ6zPl698o
fMn/+2X9Zyo/Ry7DI7K7p1p1bV0upZzRn/f8NanelufW5UK6yGVYqoFZ7Xs+
Y2xmLO9oOUx57u3zfbdWvymymTbugwzW3mbR908wyfv+KH/5r23X8/g08PfJ
ZXhEEtlbOoXznsuzSluOOs4Ey0IuA3Y6ZLXJx3xIuc6TyzBu/pe2ftYX/u93
0zWHKa+zzUO/7f/7F/57o2ez4vGMDNa5zaLvn2CS930vV/m/kx8UPunz+4Ds
9kWperAul1LO6M97Df2EF9blQrrIZUC7hqw2+tpVHXPY8Yivu/bP/aZ2vT7y
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
bWczfmXiZd/c9X0xy1aaNWjaezqNlbU/FyPP7VI59tPWOY/J16+5yrX9kZ/U
7hUAAISw+/qFva99mEBZot5rJaExsSNl3B45Zv3/Zq7Z2ZFzcMqRLk1eCS0O
vBFlD+McSDXeaNrmxcR2rpn6+TzuFmWOn+hxvfO45ZTPQs/5bXraettT1jGx
f339O8efgCvtuotdJgBAnmyf5aPY5bBl+cTe136QQFkWv9dKgmNiR8pqxqy0
sY3X0torq/P6657ybpT3P7F96b5xozqvelZ9bWnG+ky8fRMg7jD17RyT2uui
+x7PfT8XI89bK//RMks1JvvQljtUbpMLOZLbBPChXWexywQAyJN4xGW7ry/t
/Lx1//npzvsBy/Jn9n0/TaBeZr/XSgZjYkfK/qSnHPfa9aecr3aez2U/h72W
Q+Q21pSMcj1Ik5swZO760XGF7O9hUHPOTTn2s2Dr4KBNR7xPey+AkHGtKV9W
Y61Ig3ZdxS4TACBP4hiX7b6+uPPxzgedf/8wVD9Z9teYxd7rapZ7rWQ0JjZw
Htq4y3m3/pTf0+ICbY3Y4rFmoHoJPb5j6qbey2vy2GDnM3Z7DN/PxYjjninH
vQhwPifSrDUMNQ/0TDKL/xHPXPcKAMD6yIR5jFI9tzb3oQ8ClqfOz/bHys/M
2IOZv/ZkgXoJcq+VjMfEBs7rWinj49bPD+rM1sXvO/SJs8phL2HXQ72TZo7m
LM8mRJ8X6nSssZ+Fnuvl6QznFjpvyrVt26yuSSwn1L0CAABR4jLZz5vWOx62
+/qKjTXeD1iej+1xP1Z+dmp/drlAvYy+10ohY2ID53hzrG/f/p5jXWSTw16a
3PWh8gcu2vcXPUZyetYxtt8p+pjo7GPiEnafgfrZyGwxM/Iz5V4BAECbdOIy
++/v7nzB/tuM9Xy953dNXzLYPEb7nn9o722fdt9XqrlKzn3IieVwvtdKoWNi
A/WjzdEza3TqvBZ95/hP2nnHPp+Bc70nzRjM2L3a2ur9tqLMlZMJcwrH9Dtl
4tzJgOddzzHty+vpq94bL/nPK2a9rojLAABBSCsuk2r8y8RDg/MSpckBosZs
Dr+vPm+War1IfX/bdH5W94lPFqiXo/daWcGY2ED9XCjn8u/K926klS9Q9PwP
r2Kfj3INnkq4NUt1GyeRW6KnDW58PheexztVjneVQD3MlZPFXOvZjP9i8nVE
XAYACEL24zLTnxjMsShNzo/bcTXPYz6o++NaP3X39d/2599ofW9T93EXqhet
37WqMbEjdXOy8+0j53jV1z8RfT6Z0x5mM55PnePvQsLk+Eu6fy5VPKKV2yXP
/pi4TIvht7Hroee6Pg3wGa/Ve8mZ2I8cIoXS2j52mQAAeZJxcZn5ndHzF22/
8KbVd7nb+fn37M/+pfW9rf2e815LE+tlap+sLcsxsVZdDOWwb/t2u/467/O0
53dmn5eqXH+u5+Miu/lsosefj1w/F57H0uYMbmLXgUO56z2/Q89fTf7c4XWd
EJcBAIIQz3mMUsVHk/ctk+rZtBqb7b5+z37/V2Jjv1bfbrNQvUzpf5UwJlav
qbo6cn7/fKT/eds/kWqs80XPa1/LzGMJsr+uKETOxLfS5H/Ial/rVp1cKOd1
5vq58DjO6LG51Mh+vpep19Cv7fuY9yOHSMa0to1dJgBAnmQ/LjuYnyjVGFr9
860E3EtaemIz2V9jZvrT77XigUXmA43oY+U+JtbOXXKjnN9BDnvbLlPzEW5m
Op8H9nq9DtyHLiJfuuhjl4P7S/v2OyWD9YQT6nAj4WP9IPvUYdHrgLgMABCE
HOZjrGOz+h7z+XxFafJ8aH2KUevM7PFORI/Nfma/9y1ZKD++NDkAtLikq4Qx
sWO5S+q5eabue9dI2fMf2xedvK9w51zq8b0QueuLnnMmeo7Ewecevv1O0fcf
X2Qu8sL1Ocfc2Av7+TuJfX442vbEZQCAYogSm0kzV+jfZKb8+Pa49foRl758
7mNidQ57U5/aehkTi3jPq5Jm7Z9XTDYUAwwcM/Tan9XlaOipt83A7/jGZep+
CrHPfYG6DZ1LxvztOZdEcnpir62JywAARZHD2OzD1n2uHjs7CXCcB9L/TPt2
rl4p91pp5lpp/eMbaeWwD1CvLv1PEwucjrw+TiVcrry6nzv53HMl+/vH17YD
v+P8WZBqnF173rG6+pbmOULfM5ExzxGi7YGHvbYt4l4BAECb7Mdm3T7+qPz4
cnyMqHcuYq73WhkeAzTjkLPkq7D98PrY3VjsWqqxOKe88dKMN7jOKx3CvLDD
OtbWmB2dK+wZl22U919kn4vUSfh5t+bztZVC1j/mJNd7BQAAQzqxWZvzmhRp
1k31jRENzkXM5V4rwznsb+deyoLP1X3rrHMeWrv5Io/CcJ1ra8zehmpX0ee3
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
BQAAAPJh9h9jD7Ly0K4AAF//D7SHlGs=
     "], {{0, 701}, {870, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{415.4545553065521, Automatic},
   ImageSizeRaw->{870, 701},
   PlotRange->{{0, 870}, {0, 701}}]]],
 "\n",
 "Geometric data is entered in dimensionless form that relates to the actual \
data through the reference area and the aspect ratio. "
}], "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.578591480572359*^9, 3.5785914918810062`*^9}, {
  3.6335303474935513`*^9, 3.633530347739565*^9}, {3.633530550061137*^9, 
  3.6335305505511656`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputParameters", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "afin", ",", "0.3", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<break angle 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "an1", ",", "0.6", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<Neg. break angle 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "an2", ",", "0.6", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<Neg. break angle 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "ap1", ",", "0.9", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<Pos. break angle 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "ap2", ",", "0.7", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<Pos. break angle 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "AR1", ",", "3.62", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Aspect ratio 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "AR2", ",", "3.62", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Aspect ratio 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "ARfin", ",", "1.5", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Aspect ratio fin\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cd01", ",", "0.0045", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Drag coef. 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cd02", ",", "0.0045", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Drag coef. 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cd0b", ",", "0.03", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Drag coef. body\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cd0fin", ",", "0.0045", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Drag coef. fin\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "CdW0", ",", "0.048", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Wave drag coef.\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "CLalpha1", ",", "2.1", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<L. slope coef. 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "CLalpha2", ",", "2.2", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<L. slope coef. 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "CLalphabh", ",", "2.", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<L. slope c. body h\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "CLalphabv", ",", "2.", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<L. slope c. bodyv\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "CLalphafin", ",", "0.80", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<L. sl. c. fin\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "CLde1", ",", "0.1", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Ctrl surface coef 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "CLde12", ",", "0.2", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Flap rudder coef 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cdide1", ",", "0.", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Flap rudder drag coef 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cdide12", ",", "0.", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Flap rudder drag coef 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cdide112", ",", "0.", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Flap rudder cross drag coef 1\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "de10", ",", "0.01", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<rudder min drag angle 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "de120", ",", "0.01", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Flap min drag angle 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "dM", ",", "0.1", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Width of transonic region (rel. Mach)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Cm01", ",", 
       RowBox[{"-", "0.1"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Mom coeff. wing 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Cmfs1", ",", 
       RowBox[{"-", "0.5"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Mom coeff.1, fully separated\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cmde1", ",", "0.02", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Mom slop coeff 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cmde12", ",", "0.1", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Flap Mom slop coeff 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "CLdefin", ",", "0.0827084`", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Rudder coef 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cydeelev", ",", "0.1", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<elevator side force coef\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "dah1", ",", "1.0", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<down wash effect on 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "dah2", ",", "0.6", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<down wash effect on 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "en", ",", "2.71828", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<e\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "e1", ",", "0.95", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Osw. effic. factor 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "e2", ",", "0.95", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Osw. effic. factor 21\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "efin", ",", "0.95", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Osw. eff. f. fin\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "epsM", ",", "0.3", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<Mach smoothening factor\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "awfin", ",", ".2", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<CL exponent fin\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "awn1", ",", ".2", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<CL exponent neg. 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "awn2", ",", ".2", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<CL exponent neg. 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "awp1", ",", ".2", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<CL exponent pos 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "awp2", ",", ".2", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<CL exponent neg 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"gamma1", ",", 
       RowBox[{"-", "0.0872665`"}], ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<dehidral\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"gamma2", ",", 
       RowBox[{"-", "0.0872665`"}], ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<dehidral\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "hthrust0", ",", "0.", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<engine vert. pos\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "ia1", ",", "0.", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<incidence angle 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"ia2", ",", "0.02", ",", "double", ",", 
       RowBox[{"rad", "\"\<\>\""}], ",", "\"\<incidence angle 1\>\""}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Ix0", ",", "0.0147", ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<Norm. Inertia moment Ix/(Me S1)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Ixz0", ",", "0.0055", ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<Norm. Inertia moment\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Iy0", ",", "1.131", ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<Norm. Inertia moment\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Iz0", ",", "1.279", ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<Inertia moment\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "lambda1", ",", "0.436332", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<sweep 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "lambda2", ",", "0.436332", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<sweep 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "lambdafin", ",", "0.785398", ",", "double", ",", "\"\<rad\>\"", ",", 
       "\"\<sweep fin\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "lc10", ",", "0.01", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. ctrl surf. 1 ac fr hinge lc1/sqrt(AR1 S1)\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "lc20", ",", "0.05", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. ctrl surf. 2 ac fr hinge lc1/sqrt(AR1 S1)\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "lc120", ",", "0.01", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. flap 1 ac fr hinge\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "lcfin0", ",", "0.01", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<ctrl s. fin ac fr hinge\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Me", ",", "8700.", ",", "double", ",", "\"\<kg\>\"", ",", 
       "\"\<Empty weight\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "mac0", ",", "1.", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<mean aerodynamic cord/Sqrt(S1/b1)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "rc10", ",", "0.25", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. ctrl surface 1 mom. arm\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "rc120", ",", "0.25", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. ctrl surface 12 mom. arm\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "rc20", ",", "0.15", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. ctrl surface 1 mom. arm\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "rcfin0", ",", ".1", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. ctrl surf. fin mom. arm\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "S1", ",", "27.", ",", "double", ",", "\"\<m2\>\"", ",", 
       "\"\<wing area 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "S20", ",", "0.36", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. wing area 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Sbh0", ",", "0.2", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. hor. proj. area\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Sbv0", ",", "0.1", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm.body vert. proj. area\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Sfin0", ",", "0.17", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. fin area\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xbach0", ",", "3", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. body ac. hor.\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xbacv0", ",", "3", ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<norm. body ac vert.\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xbcge0", ",", "3", ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<norm. body cg\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xcargo0", ",", "3", ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<norm. cargo pos.\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xfuel0", ",", "3", ",", "double", ",", "\"\< \>\"", ",", "\"\<\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xw10", ",", "3", ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<norm. wing1  position\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xw20", ",", "4.8", ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<norm. wing 2 position\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xwfin0", ",", "4.8", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. fin position\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xeng0", ",", "4.8", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. fin position\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "yeng0", ",", "0.", ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<engines off. from center\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "g0", ",", "9.81", ",", "double", ",", "\"\<m/s^2\>\"", ",", 
       "\"\<Gravity acceleration\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "kground", ",", "10000.", ",", "double", ",", "\"\<N/m\>\"", ",", 
       "\"\<Ground stiffness (for limitiation)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "cground", ",", "1000.", ",", "double", ",", "\"\<Ns/m\>\"", ",", 
       "\"\<Ground damping (for limitiation)\>\""}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.468168905578125*^9, 3.4681689365*^9}, {
   3.5183287998405657`*^9, 3.5183288007467923`*^9}, {3.51885971821875*^9, 
   3.5188598484375*^9}, {3.518859934609375*^9, 3.51885996934375*^9}, {
   3.519319065046875*^9, 3.51931906684375*^9}, {3.519404881671875*^9, 
   3.51940489046875*^9}, {3.5194432470625*^9, 3.5194433024375*^9}, {
   3.53415801028125*^9, 3.534158041234375*^9}, {3.53416638509375*^9, 
   3.53416639525*^9}, {3.534167284*^9, 3.534167336078125*^9}, {
   3.534225103421875*^9, 3.53422516034375*^9}, {3.534225190671875*^9, 
   3.53422521971875*^9}, {3.53422904878125*^9, 3.534229069421875*^9}, {
   3.534229331609375*^9, 3.53422935996875*^9}, 3.5342294155*^9, {
   3.53422945175*^9, 3.53422945690625*^9}, {3.534229490578125*^9, 
   3.53422950471875*^9}, {3.534229906984375*^9, 3.534229968125*^9}, {
   3.5342305748125*^9, 3.53423060728125*^9}, {3.534485850390625*^9, 
   3.534485965140625*^9}, 3.53448614121875*^9, {3.5388143586297503`*^9, 
   3.5388143599110003`*^9}, {3.5388315138862495`*^9, 
   3.5388315611831245`*^9}, {3.53883166832436*^9, 3.538831750325325*^9}, {
   3.5389298875625*^9, 3.538929925953125*^9}, {3.53892997175*^9, 
   3.538929974984375*^9}, {3.538930008453125*^9, 3.5389300180625*^9}, {
   3.538930105828125*^9, 3.538930109953125*^9}, {3.5412367205852985`*^9, 
   3.5412367461798677`*^9}, {3.54123886388357*^9, 3.5412389185238457`*^9}, 
   3.5412389622579403`*^9, {3.5556604876710105`*^9, 3.5556606532647605`*^9}, 
   3.5556606864366355`*^9, {3.5556607194835105`*^9, 3.5556608648272605`*^9}, {
   3.5556643290013204`*^9, 3.555664364798196*^9}, {3.5560150728577294`*^9, 
   3.5560151053864813`*^9}, {3.556015152195386*^9, 3.5560152019571886`*^9}, {
   3.556015248375499*^9, 3.5560154101755714`*^9}, {3.556015488825781*^9, 
   3.556015642073084*^9}, {3.5560157609195766`*^9, 3.5560158196176057`*^9}, {
   3.5560162376077776`*^9, 3.55601624360701*^9}, {3.5560162803991747`*^9, 
   3.5560163011308956`*^9}, {3.5560170023080587`*^9, 3.556017016291109*^9}, {
   3.556017294563049*^9, 3.5560173265289345`*^9}, {3.556017356979331*^9, 
   3.556017412240004*^9}, {3.556017469500498*^9, 3.5560175234331656`*^9}, {
   3.556043814671875*^9, 3.556043858109375*^9}, {3.556043895984375*^9, 
   3.556043917234375*^9}, {3.556297419109375*^9, 3.556297515078125*^9}, {
   3.5563349457633634`*^9, 3.5563350425833035`*^9}, {3.5563351742779994`*^9, 
   3.5563352195251036`*^9}, {3.56802828821885*^9, 3.5680282982698545`*^9}, {
   3.578591247893051*^9, 3.5785912838201056`*^9}, {3.5785913426244693`*^9, 
   3.57859135837637*^9}, {3.5785913909212313`*^9, 3.5785914477004795`*^9}, {
   3.5786726451355553`*^9, 3.5786726626835594`*^9}, {3.578737963419788*^9, 
   3.578737966651111*^9}, {3.579582807504713*^9, 3.5795828536253242`*^9}, {
   3.5817434884538507`*^9, 3.5817435768855333`*^9}, {3.581745609986058*^9, 
   3.5817456513181915`*^9}, {3.5817461449055448`*^9, 3.5817461805181055`*^9}, 
   3.5823525182896132`*^9, {3.5840197180923095`*^9, 3.5840197438637834`*^9}, {
   3.584024837531124*^9, 3.584024882890719*^9}, 3.5853719655433645`*^9, 
   3.612461945033779*^9, {3.6124620818656054`*^9, 3.6124620823406324`*^9}, {
   3.612537050709649*^9, 3.612537058166075*^9}, {3.612704434653322*^9, 
   3.6127045011574163`*^9}, {3.613191294972512*^9, 3.613191358523512*^9}}],

Cell["The Qnodes are the connections to other components", "Text",
 Evaluatable->False],

Cell["Qnodes = {};", "Input",
 PageWidth->WindowWidth],

Cell["\<\
There are also a constants. Noiter is the number of iterations performed in \
each time step\
\>", "Text",
 Evaluatable->False]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nomenclature", "Subsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "BV"], TraditionalForm]]],
 "         :Transformation matrix, body coordinates to vehicle-carried \
vertical frame"
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Component equations",
 FontFamily->"Times"]], "Section",
 Evaluatable->False],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 Evaluatable->False,
 PageBreakAbove->True],

Cell[BoxData[
 RowBox[{"\[Zeta]", ":=", 
  TagBox[
   RowBox[{"(", GridBox[{
      {"1", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Phi]", "]"}], 
        RowBox[{"Tan", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], 
        RowBox[{"Tan", "[", "\[Theta]", "]"}]}]},
      {"0", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]},
      {"0", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Phi]", "]"}], 
        RowBox[{"SecL", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], 
        RowBox[{"SecL", "[", "\[Theta]", "]"}]}]}
     }], ")"}],
   MatrixForm[#]& ]}]], "Input"],

Cell["\<\
The transformation matrices for transformation from body to earth axis are \
(Etkin (4.5,2)\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["L", "x"], "[", "\[Phi]_", "]"}], ":=", 
  TagBox[
   RowBox[{"(", GridBox[{
      {"1", "0", "0"},
      {"0", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]},
      {"0", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}
     }], ")"}],
   MatrixForm[#]& ]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["L", "y"], "[", "\[Theta]_", "]"}], " ", ":=", 
  TagBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "0", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
      {"0", "1", "0"},
      {
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "0", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}
     }], ")"}],
   MatrixForm[#]& ]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["L", "z"], "[", "\[Psi]_", "]"}], ":=", 
  TagBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{"Cos", "[", "\[Psi]", "]"}], 
       RowBox[{"Sin", "[", "\[Psi]", "]"}], "0"},
      {
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
       RowBox[{"Cos", "[", "\[Psi]", "]"}], "0"},
      {"0", "0", "1"}
     }], ")"}],
   MatrixForm[#]& ]}]], "Input"],

Cell["\<\
Transformation from vehicle-carried vertical frame to body coordinates can be \
expressed as (Etkin 4.5,3)\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["L", "BV"], ":=", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "x"], "[", "\[Phi]", "]"}], ".", 
   RowBox[{
    SubscriptBox["L", "y"], "[", "\[Theta]", "]"}], ".", 
   RowBox[{
    SubscriptBox["L", "z"], "[", "\[Psi]", "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  SubscriptBox["L", "BV"], " ", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", "Psi", "]"}], " ", 
       RowBox[{"Cos", "[", "Thetao", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "Thetao", "]"}], " ", 
       RowBox[{"Sin", "[", "Psi", "]"}]}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "Thetao", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "Phi", "]"}]}], " ", 
        RowBox[{"Sin", "[", "Psi", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "Psi", "]"}], " ", 
        RowBox[{"Sin", "[", "Phi", "]"}], " ", 
        RowBox[{"Sin", "[", "Thetao", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "Phi", "]"}], " ", 
        RowBox[{"Cos", "[", "Psi", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "Phi", "]"}], " ", 
        RowBox[{"Sin", "[", "Psi", "]"}], " ", 
        RowBox[{"Sin", "[", "Thetao", "]"}]}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "Thetao", "]"}], " ", 
       RowBox[{"Sin", "[", "Phi", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "Phi", "]"}], " ", 
        RowBox[{"Sin", "[", "Psi", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "Phi", "]"}], " ", 
        RowBox[{"Cos", "[", "Psi", "]"}], " ", 
        RowBox[{"Sin", "[", "Thetao", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "Psi", "]"}]}], " ", 
        RowBox[{"Sin", "[", "Phi", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "Phi", "]"}], " ", 
        RowBox[{"Sin", "[", "Psi", "]"}], " ", 
        RowBox[{"Sin", "[", "Thetao", "]"}]}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "Phi", "]"}], " ", 
       RowBox[{"Cos", "[", "Thetao", "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.518675986296875*^9, 3.518676205828125*^9, 3.5186762839375*^9, {
   3.51867639475*^9, 3.51867639975*^9}, 3.5186764465625*^9, {
   3.518677207796875*^9, 3.51867724528125*^9}, 3.518677292828125*^9, 
   3.5186775239375*^9, 3.518677600171875*^9, 3.5186778015625*^9, {
   3.518678007109375*^9, 3.5186780320625*^9}, 3.518678540359375*^9, 
   3.518680167234375*^9, 3.518680426203125*^9, 3.51868061290625*^9, 
   3.51868070646875*^9, 3.518862356734375*^9, 3.518862399734375*^9, 
   3.5188628054375*^9, 3.518863329796875*^9, 3.5194048250625*^9, 
   3.51940489875*^9, 3.519410721984375*^9, 3.51944222840625*^9, 
   3.51944235428125*^9, 3.5194424945625*^9, 3.519442621953125*^9, 
   3.5194428019375*^9, 3.519443090515625*^9, 3.519443152984375*^9, 
   3.5194436350625*^9, 3.51944369409375*^9, 3.519443760546875*^9, {
   3.51944418440625*^9, 3.519444204609375*^9}, 3.519444716859375*^9, 
   3.519543649859375*^9, 3.5198055760625*^9, 3.51980594834375*^9, 
   3.51981395784375*^9, 3.519847788296875*^9, 3.522042509448269*^9, 
   3.5220426628381834`*^9, 3.522042694571746*^9, 3.5220428640517826`*^9, 
   3.522078607078125*^9, 3.531823402948124*^9, 3.53185127046875*^9, 
   3.53185133925*^9, 3.531851423875*^9, 3.531851789609375*^9, 
   3.531852604078125*^9, 3.53185266759375*^9, 3.531852740328125*^9, 
   3.5318528295625*^9, 3.531852887328125*^9, 3.531852949953125*^9, 
   3.53185308740625*^9, 3.531853141953125*^9, 3.53185327928125*^9, 
   3.5318533546875*^9, 3.531853421125*^9, 3.531853472078125*^9, 
   3.531853530765625*^9, 3.53185367490625*^9, 3.531853781984375*^9, 
   3.5318539938125*^9, {3.531854130703125*^9, 3.531854158390625*^9}, 
   3.531854245359375*^9, 3.531854284421875*^9, 3.5318543706875*^9, 
   3.53185447759375*^9, 3.531854540890625*^9, 3.531855031234375*^9, 
   3.531857042859375*^9, 3.532106951046875*^9, 3.5341586136875*^9, {
   3.534167497609375*^9, 3.534167519546875*^9}, 3.53416762975*^9, 
   3.534167815171875*^9, 3.534167893109375*^9, 3.534174333953125*^9, 
   3.534218554765625*^9, 3.5342185975625*^9, 3.534218781671875*^9, 
   3.534229534859375*^9, 3.534230354765625*^9, 3.53423070103125*^9, 
   3.534415267609375*^9, 3.534419006015625*^9, 3.53441951196875*^9, 
   3.5344373965*^9, 3.534437681484375*^9, 3.53443809840625*^9, 
   3.534485686453125*^9, 3.5344860804375*^9, 3.53448614796875*^9, 
   3.538214450657544*^9, 3.5382200245531178`*^9, 3.5382215890407724`*^9, 
   3.5382218827713876`*^9, {3.538222189470587*^9, 3.538222194845518*^9}, 
   3.5382225054940777`*^9, 3.538222874137494*^9, 3.538223233525218*^9, 
   3.538223624207717*^9, 3.538236866078125*^9, 3.53823704275*^9, 
   3.538281759858375*^9, 3.5382833443508797`*^9, 3.5382841945039597`*^9, 
   3.538284307690735*^9, 3.538285086388877*^9, 3.5382882705052834`*^9, 
   3.5382890615841055`*^9, 3.538289948775527*^9, 3.538395137482119*^9, 
   3.538395395746091*^9, 3.5383955959948096`*^9, 3.5384803257077327`*^9, 
   3.538503420671875*^9, 3.538503688*^9, 3.538503780046875*^9, 
   3.538721228485338*^9, 3.538722695260125*^9, 3.5388035646520996`*^9, 
   3.538805919558338*^9, 3.538806168712993*^9, 3.5388296374418573`*^9, 
   3.5388318571079416`*^9, 3.538930128296875*^9, 3.5389775451145325`*^9, 
   3.5389930345435815`*^9, 3.539011393014875*^9, 3.539012265343*^9, 
   3.539016050296125*^9, 3.541147783945151*^9, 3.541147896271838*^9, 
   3.541154665249383*^9, 3.541157080662964*^9, 3.5483863431357985`*^9, 
   3.548386383406062*^9, {3.554797903375*^9, 3.554797918609375*^9}, 
   3.555661927743376*^9, 3.556248970944729*^9, 3.5562493071368628`*^9, 
   3.556249551246735*^9, 3.55627646979311*^9, 3.556276589196303*^9, 
   3.556296177*^9, 3.5562962858125*^9, 3.567943965206606*^9, 
   3.5680017703695555`*^9, 3.5680020168351994`*^9, 3.568002882919572*^9, 
   3.568003102667572*^9, 3.568028483258352*^9, 3.568030016985709*^9, 
   3.5763155152519016`*^9, 3.576411384004919*^9, 3.576425136582163*^9, 
   3.5764253481212626`*^9, 3.576426208372466*^9, 3.5769934967316327`*^9, 
   3.576993669726633*^9, 3.5769937351666327`*^9, 3.578504373013383*^9, 
   3.578591504499728*^9, 3.5786616378089724`*^9, 3.5812368931176147`*^9, 
   3.581237061581669*^9, 3.581237108930219*^9, 3.5812371478615694`*^9, 
   3.581237281139023*^9, 3.5812373482794905`*^9, 3.5813519970592823`*^9, 
   3.5817462143714905`*^9, 3.5817463987859306`*^9, 3.5817465989929495`*^9, 
   3.581755007805171*^9, 3.5817808894115143`*^9, 3.5818268594286594`*^9, 
   3.5823513295371017`*^9, 3.584025089540539*^9, 3.584025260692328*^9, 
   3.5840253792781105`*^9, 3.5840254213595176`*^9, 3.584025457124563*^9, 
   3.5853720362204313`*^9, 3.5853721197117796`*^9, 3.585372243487156*^9, 
   3.6124578273742623`*^9, 3.612458096910679*^9, 3.61245817857335*^9, {
   3.6124583090998154`*^9, 3.6124583147621393`*^9}, 3.6131936056104984`*^9, 
   3.6131936494808846`*^9, 3.613193687966733*^9, 3.613193844804189*^9, 
   3.6207115497115273`*^9, 3.620711592154771*^9, 3.620844801549524*^9, 
   3.632773913807953*^9, 3.633155590076496*^9, 3.651561802765374*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(", "\[NoBreak]", GridBox[{
    {
     RowBox[{
      RowBox[{"Cos", "[", "Psi", "]"}], " ", 
      RowBox[{"Cos", "[", "Thetao", "]"}]}], 
     RowBox[{
      RowBox[{"Cos", "[", "Thetao", "]"}], " ", 
      RowBox[{"Sin", "[", "Psi", "]"}]}], 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "Thetao", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "Phi", "]"}]}], " ", 
       RowBox[{"Sin", "[", "Psi", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "Psi", "]"}], " ", 
       RowBox[{"Sin", "[", "Phi", "]"}], " ", 
       RowBox[{"Sin", "[", "Thetao", "]"}]}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "Phi", "]"}], " ", 
       RowBox[{"Cos", "[", "Psi", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "Phi", "]"}], " ", 
       RowBox[{"Sin", "[", "Psi", "]"}], " ", 
       RowBox[{"Sin", "[", "Thetao", "]"}]}]}], 
     RowBox[{
      RowBox[{"Cos", "[", "Thetao", "]"}], " ", 
      RowBox[{"Sin", "[", "Phi", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "Phi", "]"}], " ", 
       RowBox[{"Sin", "[", "Psi", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "Phi", "]"}], " ", 
       RowBox[{"Cos", "[", "Psi", "]"}], " ", 
       RowBox[{"Sin", "[", "Thetao", "]"}]}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "Psi", "]"}]}], " ", 
       RowBox[{"Sin", "[", "Phi", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "Phi", "]"}], " ", 
       RowBox[{"Sin", "[", "Psi", "]"}], " ", 
       RowBox[{"Sin", "[", "Thetao", "]"}]}]}], 
     RowBox[{
      RowBox[{"Cos", "[", "Phi", "]"}], " ", 
      RowBox[{"Cos", "[", "Thetao", "]"}]}]}
   }], "\[NoBreak]", ")"}]], "DisplayFormula",
 FontSize->7],

Cell["This can also be expressed using quartenions", "Text"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["L", "BV"], ":=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox["q0", "2"], "+", 
        SuperscriptBox["q1", "2"], "-", 
        SuperscriptBox["q2", "2"], "-", 
        SuperscriptBox["q3", "2"]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q1", " ", "q2"}], "+", 
          RowBox[{"q0", " ", "q3"}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q0"}], " ", "q2"}], "+", 
          RowBox[{"q1", " ", "q3"}]}], ")"}]}]},
      {
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q1", " ", "q2"}], "-", 
          RowBox[{"q0", " ", "q3"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["q0", "2"], "-", 
        SuperscriptBox["q1", "2"], "+", 
        SuperscriptBox["q2", "2"], "-", 
        SuperscriptBox["q3", "2"]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q0", " ", "q1"}], "+", 
          RowBox[{"q2", " ", "q3"}]}], ")"}]}]},
      {
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q0", " ", "q2"}], "+", 
          RowBox[{"q1", " ", "q3"}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q0"}], " ", "q1"}], "+", 
          RowBox[{"q2", " ", "q3"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["q0", "2"], "-", 
        SuperscriptBox["q1", "2"], "-", 
        SuperscriptBox["q2", "2"], "+", 
        SuperscriptBox["q3", "2"]}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]}]], "Input"],

Cell["\<\
where the quartenions can be expressed as below. The inital values of the \
quartenions are caluclated using these expressions\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initialExpressions", 
  StyleBox["=",
   FontFamily->"Times"], 
  RowBox[{
   StyleBox["{",
    FontFamily->"Times"], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q0", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"q1", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"q2", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"q3", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.51984772459375*^9, 3.51984776115625*^9}, {
  3.556249439413949*^9, 3.556249462394224*^9}, {3.556274250560241*^9, 
  3.5562742520134315`*^9}, {3.556276577524727*^9, 3.5562765819933624`*^9}, {
  3.556296109875*^9, 3.55629611140625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"q0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox["Phi", "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["Psi", "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["Thetao", "2"], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        FractionBox["Phi", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Psi", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Thetao", "2"], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q1", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox["Psi", "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["Thetao", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Phi", "2"], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox["Phi", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Psi", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Thetao", "2"], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q2", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox["Thetao", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Phi", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Psi", "2"], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox["Phi", "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["Psi", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Thetao", "2"], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q3", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox["Phi", "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["Thetao", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Psi", "2"], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox["Psi", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Phi", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["Thetao", "2"], "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.556249466390794*^9, 3.5562495512935905`*^9, 3.556276469886857*^9, 
   3.5562765892431765`*^9, 3.556296177046875*^9, 3.556296285875*^9, 
   3.567943965239607*^9, 3.568001770421561*^9, 3.568002016879204*^9, 
   3.5680028831115723`*^9, 3.568003102714572*^9, 3.5680284832973557`*^9, 
   3.5680300170197124`*^9, 3.576315515293906*^9, 3.5764113840459213`*^9, 
   3.5764251366241655`*^9, 3.5764253481642647`*^9, 3.5764262084214687`*^9, 
   3.576993496771633*^9, 3.5769936697676325`*^9, 3.576993735207633*^9, 
   3.5785043730723867`*^9, 3.5785915045387297`*^9, 3.5786616378469744`*^9, 
   3.5812368931696253`*^9, 3.581237061619673*^9, 3.581237108977022*^9, 
   3.5812371478927712`*^9, 3.5812372811858253`*^9, 3.581237348310692*^9, 
   3.581351997103285*^9, 3.5817462144094944`*^9, 3.5817463988209343`*^9, 
   3.581746599031953*^9, 3.581755007844173*^9, 3.5817808894535165`*^9, 
   3.5818268594666595`*^9, 3.582351329586097*^9, 3.584025089576541*^9, 
   3.5840252607363305`*^9, 3.584025379322113*^9, 3.5840254214055204`*^9, 
   3.584025457170566*^9, 3.5853720362734365`*^9, 3.585372119762785*^9, 
   3.585372243549162*^9, 3.612457827408264*^9, 3.612458096948681*^9, 
   3.612458178611352*^9, {3.6124583091398177`*^9, 3.6124583147991414`*^9}, 
   3.613193605658503*^9, 3.613193649513888*^9, 3.6131936880017366`*^9, 
   3.613193844840189*^9, 3.620711549747531*^9, 3.6207115921917753`*^9, 
   3.6208448015835257`*^9, 3.632773913843955*^9, 3.6331555901335015`*^9, 
   3.6515618028233795`*^9}]
}, Open  ]],

Cell["\<\
Conversly the total transformation matrix from body coordinates to \
vehicle-carried vertical frame is thus:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["L", "VB"], " ", ":=", 
  RowBox[{"Transpose", "[", 
   SubscriptBox["L", "BV"], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  SubscriptBox["L", "VB"], " ", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["q0", "2"], "+", 
       SuperscriptBox["q1", "2"], "-", 
       SuperscriptBox["q2", "2"], "-", 
       SuperscriptBox["q3", "2"]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q1", " ", "q2"}], "-", 
         RowBox[{"q0", " ", "q3"}]}], ")"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q0", " ", "q2"}], "+", 
         RowBox[{"q1", " ", "q3"}]}], ")"}]}]},
     {
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q1", " ", "q2"}], "+", 
         RowBox[{"q0", " ", "q3"}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["q0", "2"], "-", 
       SuperscriptBox["q1", "2"], "+", 
       SuperscriptBox["q2", "2"], "-", 
       SuperscriptBox["q3", "2"]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "q0"}], " ", "q1"}], "+", 
         RowBox[{"q2", " ", "q3"}]}], ")"}]}]},
     {
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "q0"}], " ", "q2"}], "+", 
         RowBox[{"q1", " ", "q3"}]}], ")"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q0", " ", "q1"}], "+", 
         RowBox[{"q2", " ", "q3"}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["q0", "2"], "-", 
       SuperscriptBox["q1", "2"], "-", 
       SuperscriptBox["q2", "2"], "+", 
       SuperscriptBox["q3", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5186759864375*^9, 3.518676205921875*^9, 3.518676284*^9, {
   3.51867639484375*^9, 3.5186763998125*^9}, 3.518676446640625*^9, {
   3.518677207875*^9, 3.51867724534375*^9}, 3.518677292875*^9, 3.518677524*^9,
    3.518677600421875*^9, 3.518677801640625*^9, {3.51867800715625*^9, 
   3.51867803209375*^9}, 3.5186785405625*^9, 3.518680167296875*^9, 
   3.518680426265625*^9, 3.51868061296875*^9, 3.51868070653125*^9, 
   3.51886235678125*^9, 3.51886239978125*^9, 3.518862805484375*^9, 
   3.518863329859375*^9, 3.519404825109375*^9, 3.51940489878125*^9, 
   3.51941072203125*^9, 3.519442228453125*^9, 3.519442354328125*^9, 
   3.51944249465625*^9, 3.519442622140625*^9, 3.519442801984375*^9, 
   3.519443090546875*^9, 3.51944315303125*^9, 3.519443635109375*^9, 
   3.51944369415625*^9, 3.51944376059375*^9, {3.519444184453125*^9, 
   3.51944420465625*^9}, 3.519444716890625*^9, 3.5195436499375*^9, 
   3.5198055763125*^9, 3.519805948375*^9, 3.519813957875*^9, 
   3.519847788390625*^9, 3.522042509510769*^9, 3.5220426628850574`*^9, 
   3.52204269461862*^9, 3.5220428640986557`*^9, 3.522078607359375*^9, 
   3.531823403276247*^9, 3.5318512705*^9, 3.53185133928125*^9, 
   3.53185142390625*^9, 3.531851789640625*^9, 3.531852604125*^9, 
   3.531852667625*^9, 3.531852740359375*^9, 3.53185282959375*^9, 
   3.531852887359375*^9, 3.531852949984375*^9, 3.5318530874375*^9, 
   3.53185314196875*^9, 3.531853279375*^9, 3.53185335471875*^9, 
   3.53185342115625*^9, 3.531853472125*^9, 3.53185353078125*^9, 
   3.5318536749375*^9, 3.531853782015625*^9, 3.53185399384375*^9, {
   3.53185413071875*^9, 3.531854158421875*^9}, 3.531854245390625*^9, 
   3.531854284453125*^9, 3.53185437071875*^9, 3.531854477625*^9, 
   3.531854540921875*^9, 3.531855031265625*^9, 3.531857042890625*^9, 
   3.532106951203125*^9, 3.534158613859375*^9, {3.534167497796875*^9, 
   3.534167519703125*^9}, 3.53416762990625*^9, 3.53416781534375*^9, 
   3.53416789328125*^9, 3.534174334109375*^9, 3.534218555140625*^9, 
   3.534218597796875*^9, 3.534218781828125*^9, 3.53422953503125*^9, 
   3.53423035490625*^9, 3.534230701640625*^9, 3.5344152679375*^9, 
   3.53441900615625*^9, 3.53441951215625*^9, 3.534437396828125*^9, 
   3.534437682125*^9, 3.5344380990625*^9, 3.534485686625*^9, 
   3.5344860805625*^9, 3.534486148109375*^9, 3.538214450720045*^9, 
   3.538220024693741*^9, 3.5382215890876465`*^9, 3.538221882802637*^9, {
   3.5382221895018363`*^9, 3.538222194892392*^9}, 3.538222505525329*^9, 
   3.538222874184369*^9, 3.5382232335564675`*^9, 3.538223624254592*^9, 
   3.53823686628125*^9, 3.53823704315625*^9, 3.53828175990525*^9, 
   3.5382833443977566`*^9, 3.5382841945508347`*^9, 3.53828430773761*^9, 
   3.538285086435751*^9, 3.538288270552158*^9, 3.5382890616466045`*^9, 
   3.538289948822402*^9, 3.5383951375289936`*^9, 3.538395395777341*^9, 
   3.538395596026059*^9, 3.5384803257545757`*^9, 3.53850342071875*^9, 
   3.538503688046875*^9, 3.53850378009375*^9, 3.5387212287822227`*^9, 
   3.53872269533825*^9, 3.5388035647302265`*^9, 3.5388059195895877`*^9, 
   3.5388061687598677`*^9, 3.5388296374731073`*^9, 3.538831857139192*^9, 
   3.538930129015625*^9, 3.5389775451457825`*^9, 3.5389930346842065`*^9, 
   3.539011393233625*^9, 3.539012265546125*^9, 3.5390160505305*^9, 
   3.5411477840388994`*^9, 3.541147896318712*^9, 3.541154665311882*^9, 
   3.5411570807098484`*^9, 3.548386343198305*^9, 3.548386383468569*^9, {
   3.554797903421875*^9, 3.554797918671875*^9}, 3.5556619278527503`*^9, 
   3.556248971007223*^9, 3.556249307199309*^9, 3.5562495513404455`*^9, 
   3.5562764699493556`*^9, 3.556276589305675*^9, 3.556296177109375*^9, 
   3.55629628590625*^9, 3.5679439652796097`*^9, 3.568001770459564*^9, 
   3.5680020169482107`*^9, 3.568002883173572*^9, 3.568003102757572*^9, 
   3.5680284833353596`*^9, 3.5680300170537157`*^9, 3.57631551533391*^9, 
   3.5764113840919237`*^9, 3.5764251366621675`*^9, 3.5764253482062674`*^9, 
   3.5764262084564705`*^9, 3.576993496813633*^9, 3.5769936698056326`*^9, 
   3.576993735248633*^9, 3.5785043731263895`*^9, 3.5785915045747323`*^9, 
   3.578661637884977*^9, 3.5812368932066326`*^9, 3.5812370616576767`*^9, 
   3.581237109008224*^9, 3.5812371479395742`*^9, 3.5812372812170277`*^9, 
   3.5812373483418927`*^9, 3.581351997139287*^9, 3.5817462144454985`*^9, 
   3.5817463988559375`*^9, 3.5817465990709567`*^9, 3.5817550079561796`*^9, 
   3.5817808894915185`*^9, 3.581826859505659*^9, 3.582351329774078*^9, 
   3.584025089612543*^9, 3.584025260785333*^9, 3.584025379372116*^9, 
   3.5840254214605236`*^9, 3.5840254572175684`*^9, 3.585372036328442*^9, 
   3.5853721198257914`*^9, 3.5853722438611937`*^9, 3.6124578274422665`*^9, 
   3.612458096984683*^9, 3.612458178649354*^9, {3.6124583091788197`*^9, 
   3.612458314837144*^9}, 3.6131936057025075`*^9, 3.6131936495478916`*^9, 
   3.61319368803874*^9, 3.613193844876189*^9, 3.620711549781534*^9, 
   3.6207115922277784`*^9, 3.620844801624528*^9, 3.632773913880957*^9, 
   3.633155590183507*^9, 3.651561802866384*^9}]
}, Open  ]],

Cell[TextData[{
 "When Euler angles are used, the state vector ",
 StyleBox["stateVariables",
  FontSlant->"Italic"],
 " of the system is defined as:"
}], "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"stateVariables", "=", 
   RowBox[{"{", 
    RowBox[{
    "Ub", ",", "Vb", ",", "Wb", ",", "Pb", ",", "Qb", ",", "Rb", ",", 
     "\[Phi]", ",", "\[Theta]", ",", "\[Psi]", ",", "xcg", ",", "ycg", ",", 
     "zcg"}], "}"}]}], ";"}]], "DisplayFormula"],

Cell["When quartenions are used it instead becomes:", "Text"],

Cell["\<\
systemVariables = {Ub,Vb,Wb,Pb,Qb,Rb,q0,q1,q2,q3,xcg,ycg,zcg};\
\>", "Input",
 PageWidth->WindowWidth,
 CellChangeTimes->{{3.51867773915625*^9, 3.518677740046875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"variableLowLimits", "=", 
  RowBox[{"{", 
   RowBox[{"xcg", ",", "0."}], "}"}]}]], "Input",
 CellChangeTimes->{{3.460036081859375*^9, 3.460036120125*^9}, {
  3.578504354003296*^9, 3.5785043581795344`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xcg", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.51867598646875*^9, 3.51867620596875*^9, 3.518676284015625*^9, {
   3.518676394875*^9, 3.51867639984375*^9}, 3.518676446671875*^9, {
   3.518677207921875*^9, 3.51867724540625*^9}, 3.518677292890625*^9, 
   3.518677524046875*^9, 3.518677600453125*^9, 3.518677801671875*^9, {
   3.5186780071875*^9, 3.518678032125*^9}, 3.5186785406875*^9, 
   3.518680167328125*^9, 3.5186804263125*^9, 3.518680613*^9, 
   3.5186807065625*^9, 3.5188623568125*^9, 3.5188623998125*^9, 
   3.518862805515625*^9, 3.518863329890625*^9, 3.51940482515625*^9, 
   3.5194048988125*^9, 3.5194107220625*^9, 3.519442228484375*^9, 
   3.519442354359375*^9, 3.51944249484375*^9, 3.5194426221875*^9, 
   3.519442802015625*^9, 3.51944309059375*^9, 3.519443153046875*^9, 
   3.519443635140625*^9, 3.5194436941875*^9, 3.519443760640625*^9, {
   3.519444184484375*^9, 3.519444204703125*^9}, 3.519444716921875*^9, 
   3.51954365*^9, 3.519805576328125*^9, 3.51980594840625*^9, 
   3.51981395790625*^9, 3.519847788453125*^9, 3.522042509542019*^9, 
   3.5220426629163065`*^9, 3.522042694649869*^9, 3.5220428641455297`*^9, 
   3.52207860740625*^9, 3.531823403307496*^9, 3.531851270515625*^9, 
   3.531851339296875*^9, 3.531851423921875*^9, 3.53185178965625*^9, 
   3.531852604140625*^9, 3.531852667640625*^9, 3.531852740375*^9, 
   3.531852829609375*^9, 3.531852887375*^9, 3.53185295*^9, 
   3.531853087453125*^9, 3.531853141984375*^9, 3.531853279390625*^9, 
   3.531853354734375*^9, 3.531853421171875*^9, 3.531853472140625*^9, 
   3.531853530796875*^9, 3.531853674953125*^9, 3.53185378203125*^9, 
   3.531853993859375*^9, {3.53185413075*^9, 3.531854158453125*^9}, 
   3.53185424540625*^9, 3.53185428446875*^9, 3.531854370734375*^9, 
   3.531854477640625*^9, 3.5318545409375*^9, 3.53185503128125*^9, 
   3.531857042921875*^9, 3.5321069513125*^9, 3.53415861396875*^9, {
   3.534167498046875*^9, 3.534167519796875*^9}, 3.53416763*^9, 
   3.534167815640625*^9, 3.534167893390625*^9, 3.5341743341875*^9, 
   3.534218555234375*^9, 3.534218599890625*^9, 3.53421878190625*^9, 
   3.534229535125*^9, 3.534230354984375*^9, 3.53423070178125*^9, 
   3.5344152680625*^9, 3.53441900625*^9, 3.534419512265625*^9, 
   3.534437396984375*^9, 3.534437682296875*^9, 3.534438099234375*^9, 
   3.53448568675*^9, 3.534486080640625*^9, 3.5344861481875*^9, 
   3.538214450751295*^9, 3.538220024740616*^9, 3.5382215891345215`*^9, 
   3.538221882818262*^9, {3.5382221895174613`*^9, 3.538222194923642*^9}, 
   3.53822250555658*^9, 3.5382228742156186`*^9, 3.538223233587717*^9, 
   3.5382236242702165`*^9, 3.538236866390625*^9, 3.53823704328125*^9, 
   3.5382817599365*^9, 3.5382833444133825`*^9, 3.538284194582084*^9, 
   3.53828430776886*^9, 3.538285086451376*^9, 3.5382882705834074`*^9, 
   3.5382890616778545`*^9, 3.5382899488536515`*^9, 3.5383951375446186`*^9, 
   3.538395395808591*^9, 3.538395596057309*^9, 3.538480325785804*^9, 
   3.538503420765625*^9, 3.538503688078125*^9, 3.538503780109375*^9, 
   3.5387212288134737`*^9, 3.538722695385125*^9, 3.5388035648864794`*^9, 
   3.5388059196208377`*^9, 3.5388061687754927`*^9, 3.5388296374887323`*^9, 
   3.5388318571704426`*^9, 3.538930129125*^9, 3.5389775451770325`*^9, 
   3.5389930347467065`*^9, 3.539011394014875*^9, 3.539012266264875*^9, 
   3.5390160506555*^9, 3.5411477840545244`*^9, 3.541147896334337*^9, 
   3.541154665327507*^9, 3.541157080741104*^9, 3.548386343229559*^9, 
   3.5483863834998226`*^9, {3.55479790353125*^9, 3.55479791871875*^9}, 
   3.555661927899626*^9, 3.5562489710384693`*^9, 3.5562493072305317`*^9, 
   3.5562495513873005`*^9, 3.556276469980605*^9, 3.5562765893369246`*^9, 
   3.556296177140625*^9, 3.5562962859375*^9, 3.567943965320612*^9, 
   3.5680017704995685`*^9, 3.5680020170282187`*^9, 3.568002883232572*^9, 
   3.568003102807572*^9, 3.568028483371363*^9, 3.56803001709372*^9, 
   3.576315515373914*^9, 3.5764113841289263`*^9, 3.57642513670117*^9, 
   3.5764253482462697`*^9, 3.5764262084914727`*^9, 3.576993497038633*^9, 
   3.5769936698456326`*^9, 3.576993735287633*^9, 3.5785043731793923`*^9, 
   3.5785915046077337`*^9, 3.5786616379209785`*^9, 3.5812368932446404`*^9, 
   3.5812370616926804`*^9, 3.581237109039426*^9, 3.581237147970776*^9, 
   3.5812372812482295`*^9, 3.5812373483730936`*^9, 3.581351997175289*^9, 
   3.5817462144815016`*^9, 3.5817463988959417`*^9, 3.5817465991079607`*^9, 
   3.5817550079961815`*^9, 3.581780889534521*^9, 3.581826859540659*^9, 
   3.582351329861069*^9, 3.5840250896635456`*^9, 3.5840252608393364`*^9, 
   3.5840253794251194`*^9, 3.584025421502526*^9, 3.5840254572715716`*^9, 
   3.585372036381448*^9, 3.5853721198837967`*^9, 3.5853722439251995`*^9, 
   3.612457827475268*^9, 3.612458097022685*^9, 3.6124581786863565`*^9, {
   3.612458309215822*^9, 3.6124583148741455`*^9}, 3.6131936057435117`*^9, 
   3.613193649579895*^9, 3.6131936880727434`*^9, 3.613193844911189*^9, 
   3.6207115498135376`*^9, 3.620711592262782*^9, 3.6208448016595297`*^9, 
   3.6327739139159594`*^9, 3.6331555902325115`*^9, 3.651561802903388*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalOmega]", "B"], TraditionalForm]]],
 " is from Stevensson and Lewis (1.5-2), "
}], "Text"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[CapitalOmega]", "B"], ":=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", 
       RowBox[{"-", "Rb"}], "Qb"},
      {"Rb", "0", 
       RowBox[{"-", "Pb"}]},
      {
       RowBox[{"-", "Qb"}], "Pb", "0"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]}]], "Input"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[CapitalOmega]", "q"], ":=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "Pb", "Qb", "Rb"},
      {
       RowBox[{"-", "Pb"}], "0", 
       RowBox[{"-", "Rb"}], "Qb"},
      {
       RowBox[{"-", "Qb"}], "Rb", "0", 
       RowBox[{"-", "Pb"}]},
      {
       RowBox[{"-", "Rb"}], 
       RowBox[{"-", "Qb"}], "Pb", "0"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]}]], "Input"],

Cell[BoxData[
 RowBox[{"J", ":=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"Ix", "0", 
       RowBox[{"-", "Ixz"}]},
      {"0", "Iy", "0"},
      {
       RowBox[{"-", "Ixz"}], "0", "Iz"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]}]], "Input"],

Cell["The invers of the inertia matrix is", "Text"],

Cell[BoxData[
 RowBox[{"Jinv", ":=", 
  RowBox[{"Simplify", " ", "[", 
   RowBox[{"Inverse", "[", "J", "]"}], "]"}]}]], "Input"],

Cell["The speed vector in body coordinates", "Text"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["V", "body"], ":=", 
  RowBox[{"{", 
   RowBox[{"Ub", ",", "Vb", ",", "Wb"}], "}"}]}]], "Input"],

Cell["The speed vector in earth coordinates", "Text"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["V", "NED"], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", " ", "xcg"}], ",", " ", 
    RowBox[{"s", " ", "ycg"}], ",", " ", 
    RowBox[{"s", " ", "zcg"}]}], "}"}]}]], "Input"],

Cell["The force vector in body coordinates", "Text"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["F", "b"], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"Fx", ",", "Fy", ",", "Fz"}], "}"}]}]], "Input"],

Cell["The gravitational vector is defined as (earth coordinates):", "Text"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SubscriptBox["G", "0"], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "g0"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"Fground", ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"onPositive", "[", "zcg", "]"}]}], "kground", " ", "zcg"}]}], 
     "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.555056841403258*^9, 3.5550568708249445`*^9}, {
  3.5550569212621217`*^9, 3.555056940511998*^9}}],

Cell["The vector of Euler angles is:", "Text"],

Cell[BoxData[
 RowBox[{"\[CapitalPhi]", " ", ":=", 
  RowBox[{"{", 
   RowBox[{"\[Phi]", ",", " ", "\[Theta]", ",", "\[Psi]"}], 
   "}"}]}]], "DisplayFormula"],

Cell["The quartenion vector is:", "Text"],

Cell[BoxData[
 RowBox[{"quart", ":=", 
  RowBox[{"{", 
   RowBox[{"q0", ",", "q1", ",", "q2", ",", "q3"}], "}"}]}]], "Input"],

Cell["The angular rates in body coordinates", "Text"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   SubscriptBox["\[Omega]", "b"], ":=", 
   RowBox[{"{", 
    RowBox[{"Pb", ",", "Qb", ",", "Rb"}], "}"}]}]}]], "Input"],

Cell["The vector of moments in body coordinates", "Text"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["T", "b"], ":=", 
  RowBox[{"{", 
   RowBox[{"Lb", ",", "Mb", ",", "Nb"}], "}"}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The system equations", "Subsection"],

Cell[TextData[StyleBox["Force Equations",
 FontSlant->"Italic"]], "Text"],

Cell[BoxData[
 RowBox[{"forceEquation", ":=", 
  RowBox[{
   RowBox[{"s", " ", 
    SubscriptBox["V", "body"]}], "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubscriptBox["\[CapitalOmega]", "B"], ".", 
       SubscriptBox["V", "body"]}]}], "+", 
     RowBox[{
      SubscriptBox["L", "BV"], " ", ".", "  ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["G", "0"], "+", 
        FractionBox["Fground", "mass"]}], ")"}]}], "+", 
     FractionBox[
      SubscriptBox["F", "b"], "mass"]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.5550568095597115`*^9, 3.555056811856572*^9}, {
  3.555056866246849*^9, 3.5550568965747795`*^9}, {3.5550569356839046`*^9, 
  3.555056936949521*^9}}],

Cell[TextData[StyleBox["Kinematic Equations",
 FontSlant->"Italic"]], "Text"],

Cell["(when Euler angles are used)", "Text"],

Cell[BoxData[
 RowBox[{"kinematicEquation", ":=", 
  RowBox[{
   RowBox[{"s", " ", "\[CapitalPhi]"}], "-", 
   RowBox[{"\[Zeta]", ".", " ", 
    SubscriptBox["\[Omega]", "b"]}]}]}]], "DisplayFormula"],

Cell["(when quartenions are used)", "Text"],

Cell[BoxData[
 RowBox[{"kinematicEquation", ":=", 
  RowBox[{
   RowBox[{"s", " ", "quart"}], " ", "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     RowBox[{
      SubscriptBox["\[CapitalOmega]", "q"], ".", "quart"}]}], 
    ")"}]}]}]], "Input"],

Cell[TextData[StyleBox["Moment Equations",
 FontSlant->"Italic"]], "Text"],

Cell[BoxData[
 RowBox[{"momentEquation", ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"s", " ", 
     SubscriptBox["\[Omega]", "b"]}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Jinv", " ", ".", 
        SubscriptBox["\[CapitalOmega]", "B"], " ", ".", "J", " ", ".", " ", 
        SubscriptBox["\[Omega]", "b"]}]}], "+", 
      RowBox[{"Jinv", ".", " ", 
       SubscriptBox["T", "b"]}]}], ")"}]}], "]"}]}]], "Input"],

Cell[TextData[StyleBox["Naviagation Equations",
 FontSlant->"Italic"]], "Text"],

Cell[BoxData[
 RowBox[{"navigationEquation", ":=", 
  RowBox[{
   SubscriptBox["V", "NED"], "-", 
   RowBox[{
    SubscriptBox["L", "VB"], ".", 
    SubscriptBox["V", "body"]}]}]}]], "Input"],

Cell[TextData[{
 "Tranformation between quartenions and Euler angles can be done in a \
straightforward way by simply adding this set of equation to the ",
 StyleBox["systemEquationDa",
  FontSlant->"Italic"],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{"quartenion2Euler", ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q1", "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}]}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"q2", "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}]}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"q3", "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         FractionBox["\[Phi]", "2"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Theta]", "2"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Psi]", "2"], "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input"],

Cell["\<\
A (marginally) more computationally efficient way, however, is to calculate \
them explicitly (which is used here).\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "expr"], "=", 
   RowBox[{"Atan2L", "[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"q2", " ", "q3"}], "+", 
        RowBox[{"q0", " ", "q1"}]}], ")"}]}], ",", 
     RowBox[{
      SuperscriptBox["q0", "2"], "-", 
      SuperscriptBox["q1", "2"], "-", 
      SuperscriptBox["q2", "2"], "+", 
      SuperscriptBox["q3", "2"]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Theta]", "expr"], "=", 
   RowBox[{"ArcSinL", "[", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q0", " ", "q2"}], "-", 
       RowBox[{"q1", " ", "q3"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Psi]", "expr"], "=", 
   RowBox[{"Atan2L", "[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"q1", " ", "q2"}], "+", 
        RowBox[{"q0", " ", "q3"}]}], ")"}]}], ",", 
     RowBox[{
      SuperscriptBox["q0", "2"], "+", 
      SuperscriptBox["q1", "2"], "-", 
      SuperscriptBox["q2", "2"], "-", 
      SuperscriptBox["q3", "2"]}]}], "]"}]}], ";"}]}], "Input"],

Cell["\<\
To solve the system of equations all equations are equal to zero.\
\>", "Text"]
}, Open  ]],

Cell["\<\
Another instance of the navigation equation is needed to obtain the speeds i \
earth coordinates.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"expressionVE", ":=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], ",", 
     RowBox[{
      SubscriptBox["L", "VB"], ".", 
      SubscriptBox["V", "body"]}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{3.541153908526613*^9}],

Cell[CellGroupData[{

Cell["Assembling the system of equations", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"forceEquation", "//", "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["Fx", "mass"]}], "+", 
       RowBox[{"s", " ", "Ub"}], "-", 
       RowBox[{"Rb", " ", "Vb"}], "+", 
       RowBox[{"Qb", " ", "Wb"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q0"}], " ", "q2"}], "+", 
          RowBox[{"q1", " ", "q3"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g0", "-", 
          FractionBox[
           RowBox[{"kground", " ", "zcg", " ", 
            RowBox[{"onPositive", "[", "zcg", "]"}]}], "mass"]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["Fy", "mass"]}], "+", 
       RowBox[{"Rb", " ", "Ub"}], "+", 
       RowBox[{"s", " ", "Vb"}], "-", 
       RowBox[{"Pb", " ", "Wb"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q0", " ", "q1"}], "+", 
          RowBox[{"q2", " ", "q3"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g0", "-", 
          FractionBox[
           RowBox[{"kground", " ", "zcg", " ", 
            RowBox[{"onPositive", "[", "zcg", "]"}]}], "mass"]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["Fz", "mass"]}], "-", 
       RowBox[{"Qb", " ", "Ub"}], "+", 
       RowBox[{"Pb", " ", "Vb"}], "+", 
       RowBox[{"s", " ", "Wb"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q0", "2"], "-", 
          SuperscriptBox["q1", "2"], "-", 
          SuperscriptBox["q2", "2"], "+", 
          SuperscriptBox["q3", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g0", "-", 
          FractionBox[
           RowBox[{"kground", " ", "zcg", " ", 
            RowBox[{"onPositive", "[", "zcg", "]"}]}], "mass"]}], ")"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.518675986671875*^9, 3.518676206125*^9, 3.518676284234375*^9, {
   3.518676395015625*^9, 3.518676399984375*^9}, 3.518676446828125*^9, {
   3.51867720825*^9, 3.518677245546875*^9}, 3.518677293*^9, 
   3.518677524203125*^9, 3.51867760059375*^9, 3.5186778018125*^9, {
   3.5186780073125*^9, 3.518678032234375*^9}, 3.51867854153125*^9, 
   3.51868016746875*^9, 3.51868042653125*^9, 3.51868061315625*^9, 
   3.51868070671875*^9, 3.518862356953125*^9, 3.518862399921875*^9, 
   3.518862805671875*^9, 3.51886333003125*^9, 3.519404825453125*^9, 
   3.519404898921875*^9, 3.519410722203125*^9, 3.519442228625*^9, 
   3.5194423545*^9, 3.519442495109375*^9, 3.51944262234375*^9, 
   3.519442802140625*^9, 3.5194430906875*^9, 3.51944315315625*^9, 
   3.51944363528125*^9, 3.5194436945*^9, 3.519443760953125*^9, {
   3.519444184578125*^9, 3.5194442048125*^9}, 3.5194447170625*^9, 
   3.519543650484375*^9, 3.519805576484375*^9, 3.5198059485*^9, 
   3.519813958*^9, 3.519847788890625*^9, 3.522042509792017*^9, 
   3.522042663088177*^9, 3.522042694774866*^9, 3.522042864286151*^9, 
   3.52207860759375*^9, 3.5318234034637456`*^9, 3.53185127059375*^9, 
   3.531851339375*^9, 3.531851424*^9, 3.531851789765625*^9, 
   3.531852604234375*^9, 3.53185266771875*^9, 3.531852740453125*^9, 
   3.5318528296875*^9, 3.531852887453125*^9, 3.53185295009375*^9, 
   3.53185308753125*^9, 3.531853142078125*^9, 3.53185327946875*^9, 
   3.531853354828125*^9, 3.53185342125*^9, 3.531853472234375*^9, 
   3.531853530875*^9, 3.531853675015625*^9, 3.531853782109375*^9, 
   3.5318539939375*^9, {3.5318541308125*^9, 3.53185415853125*^9}, 
   3.531854245484375*^9, 3.531854284578125*^9, 3.5318543708125*^9, 
   3.53185447771875*^9, 3.531854541015625*^9, 3.531855031359375*^9, 
   3.531857043015625*^9, 3.53210695225*^9, 3.534158614703125*^9, {
   3.534167498609375*^9, 3.53416752028125*^9}, 3.5341676305*^9, 
   3.534167816140625*^9, 3.534167893890625*^9, 3.5341743348125*^9, 
   3.534218555671875*^9, 3.534218602328125*^9, 3.534218782609375*^9, 
   3.534229535921875*^9, 3.53423035571875*^9, 3.534230702765625*^9, 
   3.534415268578125*^9, 3.534419006890625*^9, 3.53441951296875*^9, 
   3.534437398515625*^9, 3.534437683640625*^9, 3.534438100609375*^9, 
   3.5344856876875*^9, 3.53448608153125*^9, 3.53448614896875*^9, 
   3.538214450923171*^9, 3.538220024896864*^9, 3.538221589368893*^9, 
   3.538221882912011*^9, {3.53822218961121*^9, 3.5382221950486403`*^9}, 
   3.538222505650333*^9, 3.538222874340618*^9, 3.538223233697091*^9, 
   3.538223624395215*^9, 3.538236867125*^9, 3.53823704371875*^9, 
   3.538281760077125*^9, 3.5382833445540147`*^9, 3.5382841946758337`*^9, 
   3.538284307893859*^9, 3.5382850865451255`*^9, 3.5382882707084064`*^9, 
   3.5382890618184786`*^9, 3.538289948963026*^9, 3.5383951377164927`*^9, 
   3.53839539593359*^9, 3.538395596182308*^9, 3.5384803259263325`*^9, 
   3.538503420890625*^9, 3.538503688390625*^9, 3.538503780234375*^9, 
   3.5387212289853544`*^9, 3.538722695541375*^9, 3.538803565136484*^9, 
   3.5388059197145867`*^9, 3.5388061689317417`*^9, 3.5388296376137333`*^9, 
   3.5388318572798185`*^9, 3.538930129953125*^9, 3.5389775455676603`*^9, 
   3.5389930352310815`*^9, 3.53901139524925*^9, 3.539012267452375*^9, 
   3.5390160519055*^9, 3.5411477841795225`*^9, 3.541147896443711*^9, 
   3.541154665468129*^9, 3.5411570809286413`*^9, 3.548386343604602*^9, 
   3.5483863836717176`*^9, {3.554797903640625*^9, 3.554797918890625*^9}, 
   3.5556619280715003`*^9, 3.556248971288444*^9, 3.556249307386648*^9, 
   3.556249551637195*^9, 3.5562764703712196`*^9, 3.5562765894306717`*^9, 
   3.556296177265625*^9, 3.55629628603125*^9, 3.5679439655786266`*^9, 
   3.5680017708206005`*^9, 3.5680020176832843`*^9, 3.568002883646572*^9, 
   3.5680031031895723`*^9, 3.568028483572383*^9, 3.56803001729574*^9, 
   3.5763155156899457`*^9, 3.5764113844359436`*^9, 3.576425137018188*^9, 
   3.576425348440281*^9, 3.5764262087764893`*^9, 3.5769934972576327`*^9, 
   3.576993670243633*^9, 3.5769937354966326`*^9, 3.5785043734394073`*^9, 
   3.578591504850748*^9, 3.578661638205995*^9, 3.581236893618715*^9, 
   3.5812370618937006`*^9, 3.581237109226638*^9, 3.581237148282796*^9, 
   3.5812372815758505`*^9, 3.581237348685104*^9, 3.581351997475306*^9, 
   3.581746214734527*^9, 3.581746399206972*^9, 3.58174659930098*^9, 
   3.581755008212194*^9, 3.581780889814537*^9, 3.5818268598316593`*^9, 
   3.582351330173038*^9, 3.5840250900105658`*^9, 3.5840252611893563`*^9, 
   3.5840253797161355`*^9, 3.5840254218165436`*^9, 3.584025457572589*^9, 
   3.585372036854495*^9, 3.58537212031584*^9, 3.585372244236231*^9, 
   3.61245782768228*^9, 3.6124580972276974`*^9, 3.612458178890368*^9, {
   3.6124583094288344`*^9, 3.612458315085158*^9}, 3.613193605967534*^9, 
   3.613193649782915*^9, 3.613193688286765*^9, 3.6131938451061893`*^9, 
   3.6207115500035563`*^9, 3.620711592461802*^9, 3.6208448018615417`*^9, 
   3.632773914154973*^9, 3.633155590508539*^9, 3.651561803132411*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"momentEquation", "//", "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["Iz", "2"]}], " ", "Qb", " ", "Rb"}], "+", 
        RowBox[{"Iz", " ", 
         RowBox[{"(", 
          RowBox[{"Lb", "+", 
           RowBox[{"Ixz", " ", "Pb", " ", "Qb"}], "+", 
           RowBox[{"Iy", " ", "Qb", " ", "Rb"}], "-", 
           RowBox[{"Ix", " ", "Pb", " ", "s"}]}], ")"}]}], "+", 
        RowBox[{"Ixz", " ", 
         RowBox[{"(", 
          RowBox[{"Nb", "+", 
           RowBox[{"Ix", " ", "Pb", " ", "Qb"}], "-", 
           RowBox[{"Iy", " ", "Pb", " ", "Qb"}], "-", 
           RowBox[{"Ixz", " ", "Qb", " ", "Rb"}], "+", 
           RowBox[{"Ixz", " ", "Pb", " ", "s"}]}], ")"}]}]}], 
       RowBox[{
        SuperscriptBox["Ixz", "2"], "-", 
        RowBox[{"Ix", " ", "Iz"}]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "Mb"}], "+", 
        RowBox[{"Ix", " ", "Pb", " ", "Rb"}], "-", 
        RowBox[{"Iz", " ", "Pb", " ", "Rb"}], "+", 
        RowBox[{"Ixz", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["Pb", "2"], "-", 
           SuperscriptBox["Rb", "2"]}], ")"}]}], "+", 
        RowBox[{"Iy", " ", "Qb", " ", "s"}]}], "Iy"]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Ixz", " ", 
         RowBox[{"(", 
          RowBox[{"Lb", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Ix", "-", "Iy", "+", "Iz"}], ")"}], " ", "Qb", " ", 
            "Rb"}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["Ixz", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Pb", " ", "Qb"}], "+", 
           RowBox[{"Rb", " ", "s"}]}], ")"}]}], "+", 
        RowBox[{"Ix", " ", 
         RowBox[{"(", 
          RowBox[{"Nb", "+", 
           RowBox[{"Ix", " ", "Pb", " ", "Qb"}], "-", 
           RowBox[{"Iy", " ", "Pb", " ", "Qb"}], "-", 
           RowBox[{"Iz", " ", "Rb", " ", "s"}]}], ")"}]}]}], 
       RowBox[{
        SuperscriptBox["Ixz", "2"], "-", 
        RowBox[{"Ix", " ", "Iz"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.518675987*^9, 3.518676206234375*^9, 3.518676284328125*^9, {
   3.518676395078125*^9, 3.5186764000625*^9}, 3.518676446890625*^9, {
   3.5186772083125*^9, 3.518677246875*^9}, 3.518677293015625*^9, 
   3.518677524234375*^9, 3.518677600734375*^9, 3.518677803421875*^9, {
   3.51867800871875*^9, 3.51867803365625*^9}, 3.518678542984375*^9, 
   3.518680168890625*^9, 3.518680428109375*^9, 3.5186806145625*^9, 
   3.518680708171875*^9, 3.518862357609375*^9, 3.51886240178125*^9, 
   3.518862807078125*^9, 3.518863331484375*^9, 3.519404825828125*^9, 
   3.519404900546875*^9, 3.519410723625*^9, 3.519442230046875*^9, 
   3.519442356*^9, 3.519442496578125*^9, 3.519442622515625*^9, 
   3.519442803859375*^9, 3.519443092125*^9, 3.519443154578125*^9, 
   3.519443635421875*^9, 3.51944369621875*^9, 3.519443761109375*^9, {
   3.51944418525*^9, 3.519444205296875*^9}, 3.5194447175625*^9, 
   3.51954365090625*^9, 3.519805576859375*^9, 3.51980595096875*^9, 
   3.519813960078125*^9, 3.5198477910625*^9, 3.522042509948266*^9, 
   3.522042663822533*^9, 3.5220426953061028`*^9, 3.522042864426773*^9, 
   3.522078607859375*^9, 3.531823403854368*^9, 3.531851270828125*^9, 
   3.531851339625*^9, 3.53185142421875*^9, 3.531851790015625*^9, 
   3.5318526045*^9, 3.531852667953125*^9, 3.531852740703125*^9, 
   3.53185282990625*^9, 3.5318528876875*^9, 3.531852950328125*^9, 
   3.531853087765625*^9, 3.531853142328125*^9, 3.531853279703125*^9, 
   3.531853355078125*^9, 3.531853421484375*^9, 3.53185347225*^9, 
   3.531853530875*^9, 3.53185367503125*^9, 3.531853782234375*^9, 
   3.5318539941875*^9, {3.531854131046875*^9, 3.53185415878125*^9}, 
   3.531854245703125*^9, 3.531854284828125*^9, 3.53185437103125*^9, 
   3.53185447796875*^9, 3.531854541265625*^9, 3.531855031578125*^9, 
   3.531857043265625*^9, 3.53210695325*^9, 3.534158615765625*^9, {
   3.534167499234375*^9, 3.534167520390625*^9}, 3.534167631640625*^9, 
   3.534167817234375*^9, 3.534167895015625*^9, 3.534174335796875*^9, 
   3.534218556671875*^9, 3.534218603375*^9, 3.53421878365625*^9, 
   3.534229537078125*^9, 3.53423035671875*^9, 3.534230704125*^9, 
   3.534415269625*^9, 3.5344190079375*^9, 3.534419513984375*^9, 
   3.534437399671875*^9, 3.5344376846875*^9, 3.5344381016875*^9, 
   3.534485688703125*^9, 3.53448608253125*^9, 3.534486150125*^9, 
   3.538214451048172*^9, 3.538220025068736*^9, 3.5382215894782667`*^9, 
   3.5382218830213842`*^9, {3.538222189720584*^9, 3.5382221951580143`*^9}, 
   3.5382225057597113`*^9, 3.538222874449992*^9, 3.538223233806464*^9, 
   3.538223624504588*^9, 3.538236867734375*^9, 3.5382370443125*^9, 
   3.538281760202125*^9, 3.5382833446633954`*^9, 3.5382841947852077`*^9, 
   3.538284308003233*^9, 3.538285086670125*^9, 3.538288270833406*^9, 
   3.538289061943478*^9, 3.5382899490724*^9, 3.5383951378258667`*^9, 
   3.5383953960429645`*^9, 3.5383955962916827`*^9, 3.538480326035633*^9, 
   3.53850342103125*^9, 3.538503688515625*^9, 3.53850378034375*^9, 
   3.538721229110358*^9, 3.538722695682*^9, 3.5388035653083625`*^9, 
   3.5388059198239613`*^9, 3.538806169041116*^9, 3.5388296377387342`*^9, 
   3.5388318574048204`*^9, 3.5389301308125*^9, 3.5389775456770363`*^9, 
   3.5389930354967065`*^9, 3.539011395858625*^9, 3.539012267952375*^9, 
   3.539016052421125*^9, 3.541147784632642*^9, 3.5411478965530844`*^9, 
   3.5411546656087513`*^9, 3.541157081053666*^9, 3.54838634410466*^9, 
   3.548386383781105*^9, {3.55479790384375*^9, 3.554797919*^9}, 
   3.5556619281965003`*^9, 3.5562489721477313`*^9, 3.5562493075895987`*^9, 
   3.5562495517777605`*^9, 3.556276470480592*^9, 3.556276589540044*^9, 
   3.55629617740625*^9, 3.556296286140625*^9, 3.5679439656786327`*^9, 
   3.5680017709106092`*^9, 3.5680020177822943`*^9, 3.568002883725572*^9, 
   3.568003103258572*^9, 3.5680284836383896`*^9, 3.568030017357746*^9, 
   3.576315515786955*^9, 3.5764113845059476`*^9, 3.576425137088192*^9, 
   3.5764253485092845`*^9, 3.576426208839493*^9, 3.5769934973436327`*^9, 
   3.576993670341633*^9, 3.576993735596633*^9, 3.578504373539413*^9, 
   3.578591504916752*^9, 3.5786616382990007`*^9, 3.581236893704732*^9, 
   3.5812370619647074`*^9, 3.581237109289042*^9, 3.581237148407604*^9, 
   3.5812372816694565`*^9, 3.5812373487787066`*^9, 3.581351997576312*^9, 
   3.5817462148365374`*^9, 3.581746399304982*^9, 3.5817465993659863`*^9, 
   3.5817550083162003`*^9, 3.5817808898845415`*^9, 3.581826859925659*^9, 
   3.582351330298025*^9, 3.584025090110571*^9, 3.584025261283362*^9, 
   3.58402537979014*^9, 3.584025421891548*^9, 3.5840254576445932`*^9, 
   3.58537203720453*^9, 3.585372120564865*^9, 3.5853722443142385`*^9, 
   3.6124578277412834`*^9, 3.612458097292701*^9, 3.612458178955372*^9, {
   3.6124583094948378`*^9, 3.6124583151501617`*^9}, 3.613193606067544*^9, 
   3.613193649843921*^9, 3.6131936883497715`*^9, 3.613193845173189*^9, 
   3.6207115500945654`*^9, 3.62071159254281*^9, 3.6208448019225454`*^9, 
   3.6327739142189765`*^9, 3.6331555905835466`*^9, 3.6515618031974173`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kinematicEquation", "//", "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Pb", " ", "q1"}], "+", 
          RowBox[{"q2", " ", "Qb"}], "+", 
          RowBox[{"q3", " ", "Rb"}]}], ")"}]}], "+", 
       RowBox[{"q0", " ", "s"}]}]},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Pb"}], " ", "q0"}], "+", 
          RowBox[{"q3", " ", "Qb"}], "-", 
          RowBox[{"q2", " ", "Rb"}]}], ")"}]}], "+", 
       RowBox[{"q1", " ", "s"}]}]},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Pb"}], " ", "q3"}], "-", 
          RowBox[{"q0", " ", "Qb"}], "+", 
          RowBox[{"q1", " ", "Rb"}]}], ")"}]}], "+", 
       RowBox[{"q2", " ", "s"}]}]},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Pb", " ", "q2"}], "-", 
          RowBox[{"q1", " ", "Qb"}], "-", 
          RowBox[{"q0", " ", "Rb"}]}], ")"}]}], "+", 
       RowBox[{"q3", " ", "s"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.51867598715625*^9, 3.51867620628125*^9, 3.51867628434375*^9, {
   3.518676395203125*^9, 3.5186764001875*^9}, 3.51867644703125*^9, {
   3.51867720834375*^9, 3.518677247109375*^9}, 3.51867729303125*^9, 
   3.51867752428125*^9, 3.51867760075*^9, 3.518677803625*^9, {
   3.518678008921875*^9, 3.518678033859375*^9}, 3.51867854303125*^9, 
   3.518680169125*^9, 3.51868042815625*^9, 3.51868061478125*^9, 
   3.51868070840625*^9, 3.51886235778125*^9, 3.518862401984375*^9, 
   3.518862807234375*^9, 3.518863331640625*^9, 3.519404825875*^9, 
   3.519404900796875*^9, 3.51941072378125*^9, 3.519442230140625*^9, 
   3.519442356109375*^9, 3.519442496734375*^9, 3.5194426225625*^9, 
   3.519442804*^9, 3.519443092296875*^9, 3.519443154765625*^9, 
   3.519443635625*^9, 3.51944369625*^9, 3.519443761140625*^9, {
   3.519444185375*^9, 3.519444205421875*^9}, 3.5194447176875*^9, 
   3.519543650953125*^9, 3.519805576875*^9, 3.519805951125*^9, 
   3.51981396025*^9, 3.519847791125*^9, 3.522042509979516*^9, 
   3.5220426638537827`*^9, 3.52204269539985*^9, 3.5220428645673943`*^9, 
   3.52207860790625*^9, 3.5318234038856177`*^9, 3.53185127084375*^9, 
   3.531851339640625*^9, 3.531851424234375*^9, 3.53185179003125*^9, 
   3.531852604515625*^9, 3.53185266796875*^9, 3.53185274071875*^9, 
   3.531852829921875*^9, 3.531852887703125*^9, 3.53185295034375*^9, 
   3.53185308778125*^9, 3.53185314234375*^9, 3.53185327971875*^9, 
   3.531853355078125*^9, 3.5318534215*^9, 3.531853472265625*^9, 
   3.531853530890625*^9, 3.531853675046875*^9, 3.531853782515625*^9, 
   3.531853994203125*^9, {3.5318541310625*^9, 3.531854158796875*^9}, 
   3.53185424571875*^9, 3.53185428484375*^9, 3.531854371046875*^9, 
   3.531854477984375*^9, 3.53185454128125*^9, 3.53185503159375*^9, 
   3.53185704328125*^9, 3.532106953359375*^9, 3.534158615859375*^9, {
   3.534167499515625*^9, 3.53416752046875*^9}, 3.53416763184375*^9, 
   3.534167817484375*^9, 3.534167895125*^9, 3.534174335890625*^9, 
   3.534218556953125*^9, 3.53421860346875*^9, 3.53421878375*^9, 
   3.5342295371875*^9, 3.534230356796875*^9, 3.534230704625*^9, 
   3.534415269859375*^9, 3.53441900803125*^9, 3.534419514078125*^9, 
   3.534437399859375*^9, 3.5344376848125*^9, 3.5344381018125*^9, 
   3.534485688796875*^9, 3.534486082609375*^9, 3.53448615021875*^9, 
   3.538214451173173*^9, 3.538220025115611*^9, 3.5382215895095167`*^9, 
   3.5382218830370092`*^9, {3.538222189751833*^9, 3.5382221951892633`*^9}, 
   3.538222505775337*^9, 3.538222874465617*^9, 3.538223233822089*^9, 
   3.538223624535838*^9, 3.53823686784375*^9, 3.538237044609375*^9, 
   3.538281760233375*^9, 3.538283344694647*^9, 3.5382841948164577`*^9, 
   3.538284308034483*^9, 3.5382850866857495`*^9, 3.5382882708646555`*^9, 
   3.5382890619591026`*^9, 3.53828994910365*^9, 3.5383951378727417`*^9, 
   3.538395396074214*^9, 3.5383955963073072`*^9, 3.538480326051247*^9, 
   3.53850342121875*^9, 3.538503688546875*^9, 3.538503780359375*^9, 
   3.5387212291416097`*^9, 3.538722695947625*^9, 3.538803565339613*^9, 
   3.5388059198552113`*^9, 3.5388061690879908`*^9, 3.5388296377699842`*^9, 
   3.5388318574204454`*^9, 3.53893013140625*^9, 3.5389775457082863`*^9, 
   3.5389930356685815`*^9, 3.539011396577375*^9, 3.539012268077375*^9, 
   3.539016052514875*^9, 3.541147784773265*^9, 3.5411478965687094`*^9, 
   3.541154665640001*^9, 3.5411570810692945`*^9, 3.5483863441359134`*^9, 
   3.548386383796732*^9, {3.554797903875*^9, 3.55479791903125*^9}, 
   3.5556619282902503`*^9, 3.556248972194601*^9, 3.556249307620822*^9, 
   3.556249551824616*^9, 3.5562764705118413`*^9, 3.556276589571293*^9, 
   3.55629617746875*^9, 3.556296286171875*^9, 3.5679439657016335`*^9, 
   3.5680017709426126`*^9, 3.568002017848301*^9, 3.5680028837705717`*^9, 
   3.568003103291572*^9, 3.5680284836663923`*^9, 3.568030017383749*^9, 
   3.5763155158169584`*^9, 3.576411384531949*^9, 3.5764251371171937`*^9, 
   3.5764253486652937`*^9, 3.5764262088644943`*^9, 3.576993497373633*^9, 
   3.5769936703716326`*^9, 3.5769937356266327`*^9, 3.5785043735824156`*^9, 
   3.5785915049417534`*^9, 3.578661638327002*^9, 3.581236893730737*^9, 
   3.5812370621347246`*^9, 3.581237109320244*^9, 3.581237148438806*^9, 
   3.581237281700659*^9, 3.581237348809908*^9, 3.5813519975993133`*^9, 
   3.5817462148625402`*^9, 3.5817463993289847`*^9, 3.581746599466996*^9, 
   3.5817550083422017`*^9, 3.581780889911543*^9, 3.581826859953659*^9, 
   3.5823513303550196`*^9, 3.5840250901385727`*^9, 3.5840252613103633`*^9, 
   3.584025379825142*^9, 3.58402542192455*^9, 3.5840254576765947`*^9, 
   3.585372037238533*^9, 3.585372121203929*^9, 3.585372244356243*^9, 
   3.612457827766285*^9, 3.612458097319702*^9, 3.612458178983373*^9, {
   3.61245830952484*^9, 3.612458315179163*^9}, 3.613193606098547*^9, 
   3.6131936498689237`*^9, 3.613193688376774*^9, 3.6131938452021894`*^9, 
   3.620711550118568*^9, 3.6207115925708127`*^9, 3.6208448019475465`*^9, 
   3.632773914244978*^9, 3.6331555906215506`*^9, 3.65156180322442*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"navigationEquation", "//", "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["q0", "2"], "+", 
           SuperscriptBox["q1", "2"], "-", 
           SuperscriptBox["q2", "2"], "-", 
           SuperscriptBox["q3", "2"]}], ")"}]}], " ", "Ub"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q1", " ", "q2"}], "-", 
          RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "Vb"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q0", " ", "q2"}], "+", 
          RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "Wb"}], "+", 
       RowBox[{"s", " ", "xcg"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q1", " ", "q2"}], "+", 
          RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "Ub"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q0", "2"], "-", 
          SuperscriptBox["q1", "2"], "+", 
          SuperscriptBox["q2", "2"], "-", 
          SuperscriptBox["q3", "2"]}], ")"}], " ", "Vb"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q0"}], " ", "q1"}], "+", 
          RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "Wb"}], "+", 
       RowBox[{"s", " ", "ycg"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q0"}], " ", "q2"}], "+", 
          RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "Ub"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q0", " ", "q1"}], "+", 
          RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "Vb"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q0", "2"], "-", 
          SuperscriptBox["q1", "2"], "-", 
          SuperscriptBox["q2", "2"], "+", 
          SuperscriptBox["q3", "2"]}], ")"}], " ", "Wb"}], "+", 
       RowBox[{"s", " ", "zcg"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5186759871875*^9, 3.518676206328125*^9, 3.518676284359375*^9, {
   3.51867639521875*^9, 3.518676400203125*^9}, 3.5186764470625*^9, {
   3.518677208359375*^9, 3.518677247125*^9}, 3.518677293046875*^9, 
   3.5186775243125*^9, 3.51867760078125*^9, 3.51867780365625*^9, {
   3.518678008953125*^9, 3.518678033890625*^9}, 3.518678543078125*^9, 
   3.51868016915625*^9, 3.5186804281875*^9, 3.5186806148125*^9, 
   3.5186807084375*^9, 3.518862357796875*^9, 3.518862402015625*^9, 
   3.518862807265625*^9, 3.518863331671875*^9, 3.51940482590625*^9, 
   3.51940490084375*^9, 3.5194107238125*^9, 3.519442230171875*^9, 
   3.51944235615625*^9, 3.51944249678125*^9, 3.519442622609375*^9, 
   3.51944280403125*^9, 3.519443092328125*^9, 3.51944315478125*^9, 
   3.519443635640625*^9, 3.51944369628125*^9, 3.51944376115625*^9, {
   3.51944418540625*^9, 3.51944420546875*^9}, 3.51944471771875*^9, 
   3.519543650984375*^9, 3.519805576890625*^9, 3.519805951140625*^9, 
   3.519813960265625*^9, 3.519847791171875*^9, 3.5220425100107656`*^9, 
   3.5220426638850317`*^9, 3.5220426954154744`*^9, 3.5220428646142683`*^9, 
   3.522078607953125*^9, 3.5318234039324923`*^9, 3.531851270859375*^9, 
   3.53185133965625*^9, 3.53185142425*^9, 3.531851790046875*^9, 
   3.531852604703125*^9, 3.531852667984375*^9, 3.531852740734375*^9, 
   3.5318528299375*^9, 3.53185288771875*^9, 3.531852950359375*^9, 
   3.531853087796875*^9, 3.531853142359375*^9, 3.531853279734375*^9, 
   3.53185335509375*^9, 3.531853421515625*^9, 3.53185347228125*^9, 
   3.53185353090625*^9, 3.5318536750625*^9, 3.53185378253125*^9, 
   3.53185399421875*^9, {3.531854131078125*^9, 3.5318541588125*^9}, 
   3.531854245734375*^9, 3.531854284875*^9, 3.531854371078125*^9, 
   3.531854478*^9, 3.531854541296875*^9, 3.531855031609375*^9, 
   3.531857043296875*^9, 3.5321069534375*^9, 3.534158615953125*^9, {
   3.534167499609375*^9, 3.5341675205625*^9}, 3.534167631953125*^9, 
   3.534167817578125*^9, 3.53416789521875*^9, 3.53417433596875*^9, 
   3.53421855703125*^9, 3.5342186035625*^9, 3.5342187838125*^9, 
   3.53422953728125*^9, 3.534230356875*^9, 3.53423070471875*^9, 
   3.534415269953125*^9, 3.534419008109375*^9, 3.53441951415625*^9, 
   3.5344374*^9, 3.534437684921875*^9, 3.534438101921875*^9, 
   3.534485688875*^9, 3.5344860826875*^9, 3.53448615028125*^9, 
   3.538214451204423*^9, 3.53822002514686*^9, 3.538221589540766*^9, 
   3.5382218830526342`*^9, {3.538222189767458*^9, 3.5382221952205133`*^9}, 
   3.538222505790962*^9, 3.5382228744968667`*^9, 3.5382232338533387`*^9, 
   3.538223624551463*^9, 3.5382368679375*^9, 3.5382370446875*^9, 
   3.538281760249*^9, 3.538283344710273*^9, 3.5382841948320827`*^9, 
   3.538284308050108*^9, 3.5382850867013745`*^9, 3.5382882708802805`*^9, 
   3.5382890620059776`*^9, 3.538289949119275*^9, 3.5383951378883667`*^9, 
   3.538395396089839*^9, 3.5383955963229322`*^9, 3.5384803260824757`*^9, 
   3.53850342125*^9, 3.538503688578125*^9, 3.538503780390625*^9, 
   3.53872122917286*^9, 3.53872269596325*^9, 3.538803565370864*^9, 
   3.5388059198708363`*^9, 3.5388061691192408`*^9, 3.5388296377856092`*^9, 
   3.538831857436071*^9, 3.538930131515625*^9, 3.5389775457239113`*^9, 
   3.5389930357467065`*^9, 3.539011396671125*^9, 3.539012268171125*^9, 
   3.539016052639875*^9, 3.541147784804515*^9, 3.541147896584334*^9, 
   3.5411546656556253`*^9, 3.5411570811005507`*^9, 3.5483863441671667`*^9, 
   3.5483863838279853`*^9, {3.55479790390625*^9, 3.5547979190625*^9}, 
   3.5556619283215003`*^9, 3.5562489722414713`*^9, 3.5562493076520452`*^9, 
   3.556249551855853*^9, 3.556276470558715*^9, 3.556276589758788*^9, 
   3.55629617753125*^9, 3.556296286203125*^9, 3.567943965726635*^9, 
   3.5680017709786167`*^9, 3.5680020179183083`*^9, 3.568002883817572*^9, 
   3.568003103320572*^9, 3.5680284836973953`*^9, 3.5680300174107513`*^9, 
   3.5763155158479614`*^9, 3.5764113845639505`*^9, 3.5764251371441956`*^9, 
   3.5764253486982956`*^9, 3.576426208889496*^9, 3.576993497403633*^9, 
   3.576993670401633*^9, 3.576993735655633*^9, 3.578504373623418*^9, 
   3.578591504975755*^9, 3.5786616383550034`*^9, 3.581236893755742*^9, 
   3.58123706219073*^9, 3.581237109445052*^9, 3.581237148454407*^9, 
   3.58123728171626*^9, 3.581237348809908*^9, 3.5813519976243143`*^9, 
   3.5817462148875427`*^9, 3.581746399354987*^9, 3.5817465994969997`*^9, 
   3.5817550083712034`*^9, 3.5817808899425445`*^9, 3.581826859984659*^9, 
   3.5823513304040146`*^9, 3.584025090172575*^9, 3.584025261339365*^9, 
   3.5840253798671446`*^9, 3.584025421960552*^9, 3.5840254577085967`*^9, 
   3.5853720372895384`*^9, 3.585372121234932*^9, 3.585372244403248*^9, 
   3.6124578277892857`*^9, 3.612458097347704*^9, 3.6124581790113745`*^9, {
   3.6124583095538416`*^9, 3.6124583152081647`*^9}, 3.6131936061305504`*^9, 
   3.6131936498939257`*^9, 3.6131936884017763`*^9, 3.6131938452301893`*^9, 
   3.620711550143571*^9, 3.6207115925978155`*^9, 3.620844801972548*^9, 
   3.6327739142709794`*^9, 3.633155590705559*^9, 3.6515618032504225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The assembled set of equations", "Subsubsection"],

Cell[BoxData[
 RowBox[{"systemEquationsDa", ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
    "forceEquation", ",", "momentEquation", ",", "kinematicEquation", ",", 
     "navigationEquation"}], "}"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"boundaryEquations", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"systemEquationsDa", "//", "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["Fx", "mass"]}], "+", 
       RowBox[{"s", " ", "Ub"}], "-", 
       RowBox[{"Rb", " ", "Vb"}], "+", 
       RowBox[{"Qb", " ", "Wb"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q0"}], " ", "q2"}], "+", 
          RowBox[{"q1", " ", "q3"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g0", "-", 
          FractionBox[
           RowBox[{"kground", " ", "zcg", " ", 
            RowBox[{"onPositive", "[", "zcg", "]"}]}], "mass"]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["Fy", "mass"]}], "+", 
       RowBox[{"Rb", " ", "Ub"}], "+", 
       RowBox[{"s", " ", "Vb"}], "-", 
       RowBox[{"Pb", " ", "Wb"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q0", " ", "q1"}], "+", 
          RowBox[{"q2", " ", "q3"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g0", "-", 
          FractionBox[
           RowBox[{"kground", " ", "zcg", " ", 
            RowBox[{"onPositive", "[", "zcg", "]"}]}], "mass"]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["Fz", "mass"]}], "-", 
       RowBox[{"Qb", " ", "Ub"}], "+", 
       RowBox[{"Pb", " ", "Vb"}], "+", 
       RowBox[{"s", " ", "Wb"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q0", "2"], "-", 
          SuperscriptBox["q1", "2"], "-", 
          SuperscriptBox["q2", "2"], "+", 
          SuperscriptBox["q3", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"g0", "-", 
          FractionBox[
           RowBox[{"kground", " ", "zcg", " ", 
            RowBox[{"onPositive", "[", "zcg", "]"}]}], "mass"]}], ")"}]}]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["Iz", "2"]}], " ", "Qb", " ", "Rb"}], "+", 
        RowBox[{"Iz", " ", 
         RowBox[{"(", 
          RowBox[{"Lb", "+", 
           RowBox[{"Ixz", " ", "Pb", " ", "Qb"}], "+", 
           RowBox[{"Iy", " ", "Qb", " ", "Rb"}], "-", 
           RowBox[{"Ix", " ", "Pb", " ", "s"}]}], ")"}]}], "+", 
        RowBox[{"Ixz", " ", 
         RowBox[{"(", 
          RowBox[{"Nb", "+", 
           RowBox[{"Ix", " ", "Pb", " ", "Qb"}], "-", 
           RowBox[{"Iy", " ", "Pb", " ", "Qb"}], "-", 
           RowBox[{"Ixz", " ", "Qb", " ", "Rb"}], "+", 
           RowBox[{"Ixz", " ", "Pb", " ", "s"}]}], ")"}]}]}], 
       RowBox[{
        SuperscriptBox["Ixz", "2"], "-", 
        RowBox[{"Ix", " ", "Iz"}]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "Mb"}], "+", 
        RowBox[{"Ix", " ", "Pb", " ", "Rb"}], "-", 
        RowBox[{"Iz", " ", "Pb", " ", "Rb"}], "+", 
        RowBox[{"Ixz", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["Pb", "2"], "-", 
           SuperscriptBox["Rb", "2"]}], ")"}]}], "+", 
        RowBox[{"Iy", " ", "Qb", " ", "s"}]}], "Iy"]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Ixz", " ", 
         RowBox[{"(", 
          RowBox[{"Lb", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Ix", "-", "Iy", "+", "Iz"}], ")"}], " ", "Qb", " ", 
            "Rb"}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["Ixz", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Pb", " ", "Qb"}], "+", 
           RowBox[{"Rb", " ", "s"}]}], ")"}]}], "+", 
        RowBox[{"Ix", " ", 
         RowBox[{"(", 
          RowBox[{"Nb", "+", 
           RowBox[{"Ix", " ", "Pb", " ", "Qb"}], "-", 
           RowBox[{"Iy", " ", "Pb", " ", "Qb"}], "-", 
           RowBox[{"Iz", " ", "Rb", " ", "s"}]}], ")"}]}]}], 
       RowBox[{
        SuperscriptBox["Ixz", "2"], "-", 
        RowBox[{"Ix", " ", "Iz"}]}]]},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Pb", " ", "q1"}], "+", 
          RowBox[{"q2", " ", "Qb"}], "+", 
          RowBox[{"q3", " ", "Rb"}]}], ")"}]}], "+", 
       RowBox[{"q0", " ", "s"}]}]},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Pb"}], " ", "q0"}], "+", 
          RowBox[{"q3", " ", "Qb"}], "-", 
          RowBox[{"q2", " ", "Rb"}]}], ")"}]}], "+", 
       RowBox[{"q1", " ", "s"}]}]},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Pb"}], " ", "q3"}], "-", 
          RowBox[{"q0", " ", "Qb"}], "+", 
          RowBox[{"q1", " ", "Rb"}]}], ")"}]}], "+", 
       RowBox[{"q2", " ", "s"}]}]},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Pb", " ", "q2"}], "-", 
          RowBox[{"q1", " ", "Qb"}], "-", 
          RowBox[{"q0", " ", "Rb"}]}], ")"}]}], "+", 
       RowBox[{"q3", " ", "s"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["q0", "2"], "+", 
           SuperscriptBox["q1", "2"], "-", 
           SuperscriptBox["q2", "2"], "-", 
           SuperscriptBox["q3", "2"]}], ")"}]}], " ", "Ub"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q1", " ", "q2"}], "-", 
          RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "Vb"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q0", " ", "q2"}], "+", 
          RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "Wb"}], "+", 
       RowBox[{"s", " ", "xcg"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q1", " ", "q2"}], "+", 
          RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "Ub"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q0", "2"], "-", 
          SuperscriptBox["q1", "2"], "+", 
          SuperscriptBox["q2", "2"], "-", 
          SuperscriptBox["q3", "2"]}], ")"}], " ", "Vb"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q0"}], " ", "q1"}], "+", 
          RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "Wb"}], "+", 
       RowBox[{"s", " ", "ycg"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q0"}], " ", "q2"}], "+", 
          RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "Ub"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q0", " ", "q1"}], "+", 
          RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "Vb"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q0", "2"], "-", 
          SuperscriptBox["q1", "2"], "-", 
          SuperscriptBox["q2", "2"], "+", 
          SuperscriptBox["q3", "2"]}], ")"}], " ", "Wb"}], "+", 
       RowBox[{"s", " ", "zcg"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.518675987234375*^9, 3.518676206390625*^9, 3.518676284375*^9, {
   3.518676395265625*^9, 3.51867640025*^9}, 3.518676447109375*^9, {
   3.51867720840625*^9, 3.51867724715625*^9}, 3.51867729309375*^9, 
   3.518677524359375*^9, 3.518677600828125*^9, 3.518677803703125*^9, {
   3.518678008984375*^9, 3.518678033921875*^9}, 3.51867854315625*^9, 
   3.51868016921875*^9, 3.518680428296875*^9, 3.518680614859375*^9, 
   3.518680708484375*^9, 3.51886235784375*^9, 3.5188624020625*^9, 
   3.518862807296875*^9, 3.51886333171875*^9, 3.519404825953125*^9, 
   3.51940490090625*^9, 3.519410723859375*^9, 3.519442230234375*^9, 
   3.519442356203125*^9, 3.519442496859375*^9, 3.519442622671875*^9, 
   3.5194428040625*^9, 3.519443092375*^9, 3.519443154828125*^9, 
   3.5194436356875*^9, 3.519443696328125*^9, 3.519443761203125*^9, {
   3.519444185484375*^9, 3.51944420553125*^9}, 3.519444717765625*^9, 
   3.519543651046875*^9, 3.5198055769375*^9, 3.519805951171875*^9, 
   3.5198139603125*^9, 3.51984779125*^9, 3.5220425100420156`*^9, 
   3.522042663963155*^9, 3.5220426954623485`*^9, 3.5220428646767664`*^9, 
   3.522078608*^9, 3.5318234040574913`*^9, 3.531851270890625*^9, 
   3.53185133971875*^9, 3.53185142428125*^9, 3.531851790078125*^9, 
   3.53185260475*^9, 3.5318526680625*^9, 3.531852740765625*^9, 
   3.53185282996875*^9, 3.53185288775*^9, 3.531852950390625*^9, 
   3.531853087828125*^9, 3.531853142390625*^9, 3.531853279765625*^9, 
   3.531853355125*^9, 3.531853421546875*^9, 3.531853472296875*^9, 
   3.5318535309375*^9, 3.53185367509375*^9, 3.5318537825625*^9, 
   3.53185399425*^9, {3.531854131109375*^9, 3.53185415884375*^9}, 
   3.531854245765625*^9, 3.53185428490625*^9, 3.53185437109375*^9, 
   3.53185447803125*^9, 3.53185454134375*^9, 3.531855031640625*^9, 
   3.53185704334375*^9, 3.53210695359375*^9, 3.534158616140625*^9, {
   3.53416749978125*^9, 3.5341675206875*^9}, 3.534167632140625*^9, 
   3.534167817703125*^9, 3.534167895359375*^9, 3.53417433609375*^9, 
   3.534218557171875*^9, 3.53421860371875*^9, 3.534218783953125*^9, 
   3.534229537484375*^9, 3.53423035703125*^9, 3.53423070490625*^9, 
   3.53441527021875*^9, 3.53441900825*^9, 3.534419514296875*^9, 
   3.534437400296875*^9, 3.534437685125*^9, 3.53443810209375*^9, 
   3.534485689015625*^9, 3.5344860828125*^9, 3.534486150421875*^9, 
   3.538214451251298*^9, 3.5382200252093596`*^9, 3.5382215896657643`*^9, 
   3.5382218830838833`*^9, {3.5382221897987075`*^9, 3.5382221952673874`*^9}, 
   3.5382225058222136`*^9, 3.5382228745281167`*^9, 3.5382232338845882`*^9, 
   3.538223624582712*^9, 3.53823686809375*^9, 3.5382370448125*^9, 
   3.538281760295875*^9, 3.5382833447415247`*^9, 3.5382841948633327`*^9, 
   3.538284308096983*^9, 3.538285086732624*^9, 3.5382882709115305`*^9, 
   3.538289062037227*^9, 3.538289949259899*^9, 3.5383951379508657`*^9, 
   3.538395396121089*^9, 3.5383955963698072`*^9, 3.5384803261137047`*^9, 
   3.5385034213125*^9, 3.538503688640625*^9, 3.538503780421875*^9, 
   3.538721229219737*^9, 3.538722696010125*^9, 3.538803565402114*^9, 
   3.5388059199020853`*^9, 3.538806169353614*^9, 3.5388296378168592`*^9, 
   3.5388318574829464`*^9, 3.53893013165625*^9, 3.5389775457707863`*^9, 
   3.5389930358717065`*^9, 3.53901139687425*^9, 3.539012268452375*^9, 
   3.539016053514875*^9, 3.541147784851389*^9, 3.5411478966155834`*^9, 
   3.5411546657024994`*^9, 3.5411570812568316`*^9, 3.5483863442765546`*^9, 
   3.5483863838748655`*^9, {3.554797903953125*^9, 3.55479791909375*^9}, 
   3.5556619283840003`*^9, 3.5562489723352118`*^9, 3.55624930769888*^9, 
   3.556249551902708*^9, 3.556276470605589*^9, 3.556276589805662*^9, 
   3.556296177796875*^9, 3.55629628625*^9, 3.567943965788639*^9, 
   3.568001771043623*^9, 3.56800201804432*^9, 3.568002883901572*^9, 
   3.568003103389572*^9, 3.568028483861412*^9, 3.5680300175757685`*^9, 
   3.5763155158989663`*^9, 3.576411384619954*^9, 3.5764251371961985`*^9, 
   3.5764253487532988`*^9, 3.576426208932498*^9, 3.5769934974546328`*^9, 
   3.576993670450633*^9, 3.5769937357046328`*^9, 3.578504373678421*^9, 
   3.5785915050277576`*^9, 3.578661638402006*^9, 3.5812368938047523`*^9, 
   3.5812370622467356`*^9, 3.581237109523057*^9, 3.58123714850121*^9, 
   3.5812372817630625`*^9, 3.5812373488567095`*^9, 3.5813519976773176`*^9, 
   3.5817462149305468`*^9, 3.581746399399992*^9, 3.581746599543004*^9, 
   3.581755008420206*^9, 3.5817808899955473`*^9, 3.5818268600326595`*^9, 
   3.5823513305250025`*^9, 3.5840250902225776`*^9, 3.5840252613883677`*^9, 
   3.584025379927148*^9, 3.584025422012555*^9, 3.5840254577676*^9, 
   3.585372037383548*^9, 3.5853721222880373`*^9, 3.5853722444932566`*^9, 
   3.6124578278392887`*^9, 3.612458097402707*^9, 3.612458179067378*^9, {
   3.6124583096078444`*^9, 3.612458315264168*^9}, 3.6131936061815553`*^9, 
   3.61319364993793*^9, 3.613193688447781*^9, 3.6131938452751894`*^9, 
   3.6207115501955757`*^9, 3.6207115926458206`*^9, 3.620844802028551*^9, 
   3.6327739143359833`*^9, 3.6331555907675653`*^9, 3.651561803301428*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Forces and Moments Acting on the Aircraft", "Subsection"],

Cell[TextData[{
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
J5nrGdzD73Cfch/bkY7Hvd5IuWsCyhfD+qtVc3ovc9fO5O+Ny+jfN/I6rDEA
DNDyPZTt8yT240QvT9jGas7JS8uCwPLEdv3b1HjMNtV9r3LXTfb3gbWTgZNF
QWN04sQefo3trOKcPNJj3L7nrgtYpoG/Z7895fOY7K/5kOtbH13fAsYS6fUm
sqxzVD3v7je1E7ezlqxxkXhtss7dB5YvjNNfveg/b6e63/tcvzUC6xXpNVUv
M9Wy6+H37sTtrDlrfM5dF7AOMWz9oWqtqxe5a6f1NR2yHplrV8BkYjsX8PCz
J8va63FiD7/GdtaSNS4Tr032XovA+kT/vgrG8hcihvVZ+Zzrux44L5HuC3qV
qZbdb2sXJ25nzVlj8FrAAA+J4f2irVE0/2s1pH989fuifrDAbOrPqcPPorcZ
6rjYfW+NsK21ZI1XidfmNnddwPoNPI+tMsqz3LWv3Ql58CJ37cD5ie2a2Yef
S9cZ6ji5h19jW2vJGleJ1+Z97rqA8xHDxufchfE5U7wWfce5fatfO+PcgGxa
zmdPmps9sI5dD7+Tr6msKGu8Sbw217nrAs5TDJt3XH2OmXc8/JgPmb9fZb2X
uWsHqLRkjdnH6cQIPfwa21pL1ijimhNAU/RfT/VH/XvSRe7alyKsSwysRBQw
/zh+7eF38rXeFWWN1Fyaq9x1AVRiO6ej+k2kT584c5OPH9PqO7lvv8XqNTA3
HyhSS9aYdV3VRg0n9fBrbG8tWeNW1gCWILbXyL/0OEf+4vPspONnzWFgESLd
L26Uc/4eNYzSw6+xvbVkjVTvEz20gGIN/F3+LHvJxfa60Nvod13oo+8BYEla
ssa3mWsYpYdfY3tryRp3idfmMnddAA+pv1veR7/5BtX9Vz/fIPrPd9kdm4vc
tQMMkfhcO7nHRc/n3/2mczHm/uQ+riPsRyprrP57GFiPGLaO0qc1/nYf/dfx
OttrPsC6pD7jZnzu3XWV0fLNirJG6rv5InddAENE//4Qi5+TEMP6k1THSH8S
YDVazmln+R0l9r2xR1v7auVZw+9bwKJtbs+jX9/r6vf9al2+xay1FMP6rluj
C1ilnL+fx4g9/BrbXEvWuDeWN3dNAGMZeD5eZZRnuWs/sk/PeuYovUeA1Yv0
vIBZPstjv8bf5YjbXMV5eeI1+Zm7JoCxxX6cUZ85HdX3VjG9saP/+LBv9T4v
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
vhE/c9Ir58NKWsNvE7of+kbi++aZ/PokJ/zt7W2fE/7jH//Y7vtH4/NVYg1X
XQ3iPj/nb6K/34/2eTzi7+qk1mDzfD64VgAAauP60ajPfK+103idT/05tY27
0P3SN644QNXSKMkJvzY+XyXWWDm2sQp97GOk/+58xvSjri3TQv9zrQAA1Mb1
o1IfXUi6Du3OwxhnJ+laUUfN7ZB0njvr8hz2zcbs96urq4+c8M+fPzvPi/X5
KrGG6/sw+roafSB+5yoe5EHhoL+5VgAAauP64ewTc964r9rI3nNWJc0VUOMk
5oRk++bCPg+r1WofZzw/P+9/duSEL6xtFP49iCPvXDu5uhp9IOkaDL7Wd9vo
v9nPoY+tD7hWAACa4PrRyno4nazFKWldh+fQfdg3Yq1Dq3Izkpzw2WyWd84u
rG2UxRq3ju28hD52fMThag6dz/sFa/HwLHKouFYAAJo41euH+F3nfz/el3j+
RWdzmYzx9EPo/uwbseY23d7eluWEH+TWV4g1nhzfg2XoY4fzXJnzIH3kmTfO
sRqqU71WAACOcyrXD0nndrvGh00EzyuVNB+B/IBsv1zb50vV0lCv+/v7vPN5
0IdFfw8SPwtz5ScH+z6g1nckWd9B/Q35WN+h8tpxQ3Uq1woAgF9jvX5Ids0a
X2OJXq2XaRzXSc7pKOiXTE64qg2evCaTievcfs3ZTlGscRDPqPMR+tjR+Duj
1q32eS/iWTp+ztlBH43yWgEAaNdYrh8S5+km69D6mCOxk3iORC/rgAk1/PL6
Rc2VyTxvUOvbqtdms9n//JOf/OQg1nDFjyWxhmut23Xo44e379FU4ucUPuZY
dpK/1UGfjOJaAQDo1lCvH3pMqeKAtfhZhzZZK2ouA6j5LGkNv8fQbekTie8l
f5xXlZvx/v5elBOeuHZsqyjWcH3nmMs2QhLPl1PPM9Vzzd6uS9dBPwzyWgEA
CGso1w9J15Xxdb0f9JqWQg2/vH7JfDfm8/lHTrj62ZETnjiov5f39yBx7k+l
ZyMYH/F/n2MnPX6Gahz3IK4VAIB+6ev1Q9J1aH2tlz+qWl1Gnwz+WDz2ydQ+
76qWhnp9+fKl9F6zY3t5scaD4/NPoY8fYUh2/uYoc8P0cfbyWgEA6Lc+XT8k
vl+8FD91gJUXvb1p6H723E/U8HP3y6N5/lVtcPVSdTUuLi6qfF+m1vbyYg1X
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
Wg8xRKyRxBAHtRglnuO11OcwRKxxLumzo01XfQIAAIAwjNihUk64jiNe9di8
8P5/UTziqe2NYw3r/r8a/5bOHWvSti5jDSvGKYwfQsQa1n5VnzufjQEAAGAc
1DwbPfa7r/GZqR4rbn2P0Wu2/ZhYwxxrz9tqW8exxq2xz3XJezvP19D7vTba
eBfquwMAAIB26Xv7X5uMh/WY8avW6npTBW1oFGvo8XUy3l35bpfZto5jjfuq
sUYo1nduG7o9AAAAaIdxH7zRWlF6/pWZ79BJXQ1j/01jjY0xJm9lHk+gWMM8
rmWo71WFdpprlXX6nQEAAEA3JM67OGpNIInXuX01xo73XT3jaBJr6PYm99WP
ylOQOD9iariy21Y31tD3/Q+2V/GzW6kRa6jt6/1UWec4972SnY9VuoaXfg72
se5XF98VAAAAdEeMnHAP21LjY7OW30uV8auH/TaJNZZGO28b7leNux+teCLx
7vjdpOL5yNvmS1HcodvzkPPZD/q9O8fvnPOtyt4r8dq59nvU8RfmYUg2Z+M1
9N8CAAAA/JI0N3p5xDYu9Ng9uZ9uPt9Qzw5arQ9dN9aQbI2JRvOnJJ53ljwX
2el79Mk9fdfYuzTWsLap1gqe6e0tre05x/A6Rnm2jm0nVg1zow/mxv6KYg3X
e9VaAmrtWnO+lktuvKG/N+b3pPNcHwAAALRDsnUOmoy3kzrb73pMq8aj5/p3
G+ko3mgQa0yNtr002N/cGstPcvrWjjcO3me831w76iBPXbJzvpTcNaMku7bW
suRYzPNUtmZV5r0Sx5Q789zqvjVrkxc+L7Pe29k6WAAAAGiXpPWba9dT02Pp
JLf3Raz5+XI4n+prW2PJBrGGOa5/rLmvSdXxsRWT5MYaeptJHJFb30Sy+Q25
56xmrFF5zSrrvcnzq4O8DDmsl14078v8jjSaywYAAID+kXSuU+1nDkackVuL
zRpDN4ppKralbqyxNNpUKyfZGm8X5hhInCtdJdYwcyyWNbbnzIWpGWuYfVEW
a5jv/VpwPGdWO3PXHJC0rvxR8/gAAADQH5LOI9o1+Kx5v75wrC6Hucren200
iDXMsfii5r7MeVGF9+ElfvZTJdYwt1m4FpgVu91UOL5lyfaaxhplcZZ5TPOK
56JyHUkAAAD0l6RrHdUaa+vPmmuqFq4zJdn8X8V7jegGscZzlXGw43OTqvfr
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
     "], {{0, 875}, {795, 0}}, {
     0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{257.7909020014045, Automatic},
   ImageSizeRaw->{795, 875},
   PlotRange->{{0, 795}, {0, 875}}]]],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
iflORel9pYHvMQMAAOwby+ctfOcdZb1u80o293oJ14E1sedNI+awpGM5tvl3
46qZnZ9ajs/iurgY4rGJ5z/lO+H2bRo3/d5El0mwtvpa4ntpEZsCAAB4ZHHf
i+9rfVnvFaTrHqP9Sprc60bH/uR7HBUcl+aYLiPnRvOVWvNbaa2jJPc29lpj
vuUxHEbutejcXfoe1z6zc3Il+fY4JTYFAACogV13PTRgHM+Ra3d3LeHA9/hS
xt2IvV1rOE69lh849zDCfj63dg+h9HsaktzzqLH3JxKO4zgS12u+t+97XPvM
fm+HstmTLM6s6nswAAAA+8rijFVdoedxHCVcC2rM0/TeNmdhbtf3WGo8Zr2e
1x5Jk8j9gzspuUeSJO+107oYwb4r88h89XyPa9/ZvZbonsf0QgIAAKiBvO0J
6T2eks39G2ZtuF53cnl7u1ZQgvWf40i89WB5qJ3Ood03ictlNb4Xb8LxaDx/
Jev78VxXkWfG1ufmXNbXUSd5IM8NAABQjuVjZNdYPd9jsfGE14T3bYnxxNkD
Bq97+owieaeZ/axQjyQJal/jetM8N+W7W+CYtDbgxjmWpybcG8Lq3Fwk3AeJ
mhKbAgAA7MZyk8++x9FWkrIHDF7nZyjr/armFov1t3yvs4S4YNaW+xcJx3US
mZ+HNuZ/u0iCmt68sWnre24DAAD4YHmm1vQxbRrp0B4wNczVkV3juzXa+v2b
WH48s3bVme+4mKDVta+Wm3PX5mrvqEbtw7uP5K0XUp4+vXf8WwAAAJAfOb5S
5rCTe8DUMG8HFoNNZH1d5Z3FrYl5T0nuxdv6vsc2LyNZ72t81fZ4uwuc2DTP
/qb0rgIAAMjBYgK9fjrzPZY2kj3ZA6amudS63JtILkpzn5dx1/ay2Q8rdOX7
WEqajyPLk7r1zvR7bQAJem6NcsamE2JTAACAZBL0+tzrfrE7zt/e7QFT07ye
2HfT7ZH0aHHAsT3nQJL7o3bmfCwfp5HjZN1iQ1hseu3ktNPo/RbqsAEAACIs
10TdafH52/s9YGqY42Orl3TjsrnN/Y9L8h4xncr9W774KRLj8L1rAMtpj3PE
pi/2PGJTAAAAY9fz977H0VbCHjB1z/eRxWb3znX+ny59Keb6/7lr+cSYvJwe
49D3uPB6fo6sVjcrZ8oaYQAAgE+8Xt/q9dHY91jaSOgP5Xv+9fur66FvE2LS
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
3wuvA5WgbjptrRZ1BNhLdn8sTy839nap97ycpPybNfA9PjQXMSmAJpHNfTL3
KrbxMN8HFkvliU21B89J5PUXkdf+Pxnvoee27/u4K57TI4v33Z5Fz3b9fLHt
d9feb5oyp/Srxt6Q/Hu76P0a7mHWe26IR1EYMSmAppF8+zbqdTh9SMud8zzX
eQuLrXqR147krTfPl5b+dcZ76H97Op+7sLm5sDlz51bj1a16JNkcc68Ge0s2
+63FmfPfBi/nhngUOyEmBdBUkm/fmE70d20KCWqoRzlj04kbU8lmLd2/Wfpy
xn2Fvcrv2TX1jaznlvU7PszzPZZg7VzWXqbkhtApkn9vlyvuy3g5P2nxKOve
kQsxKYCms+v1tBiJfebKn3ONL8eSvi9JOPfjSGzal6C/Zficz+W4r7B3ayLt
Ok7nLtojSfOdiT2SJN9epgPfxwfsStjbpfHsfkHSf59HvseH9iAmBdAGFiOl
XYeH1/N7lXerad6z9p1z7wscOq+N7s3wReKoxHnW67phJJaf29z3E15zmXHP
YCJ7UB+Nbor59yOO/r50rqd3W0jQ221OPIoyEJMCaBMJah+zrlO4Z17+vPck
uy9yGFu+xqbylucIY6e0Wl41lT2vPbX7AHo9fh+ZV53/tR5JFsum9QSbcc2O
NpF8e7vofwPY28XveSIeBQDsNcnXA0mv4dnTtPy51xgoK18dzv8wjJ/s+sWN
sb6S8lr2o32b70N565H04syPnoOB/b3+PqTlstnLFI0n7O3SGsSjAAC8kXw9
kKjtqmbuTyS750iYz3BjU81zZ+31E9Jzm7iuch8tH+cS5EvdWgHNLWte9acl
ey9TruXRKMLeLq1CPAoAQDy7Hs+6ntHreOp5y5/7vqTvnRlbayfZfatc7HGS
PPfjyPXh7yz9YcZ56PseO6CEvV1ahXgUAIB0kq/ua1VP6nusXWTXlo8Z8x9e
Xw7sNYcWU+WJS1kXmT7/WjMwynkOuH6EV8LeLq1DPAoAQH6Srzb0gfimsvk/
3yI2PbfXaB1wnlxrmDOl/jT9HOi1o+ahfyPH7wG1A6jNFveh6FPXIBnx6Nj3
+AAAaCJ5W5+UtbfmDfFNZefgPMe9gYXFr+fOa7Lq+JTWn7LnT77z8PGl306Z
y88KdZGogbC3SytlxKMT3+MDAKDpJN+eplrPy54C1Z2DQc44U69Fz5z7CZ/P
8ZoJ9xRyn4dhxj2af6rxq+9xonsk2Nslq3aCvV0aSIK8NvEoAAAlkPz1vPR4
re4c5I1NpxL07jmSfPuhkjPNfw5OcvwezCx+pb8pdiLs7dJqFo8m3UsgHgUA
oADJX8/LOqZqz0Oe+j03NtUcy/+d4/n3nLdc83+YEet/PRKfjrlXg21s8W8t
e7s0FPEoAADVknz1vHotNRL6PVZ1Dg4sF7dNbHohwdrHtOdqHfbA9/G1gQR5
67S9eH5z6dedP+u50vXX5KSRSPKtCZ/zPWou4lEAAOoj+ep59Tr8wvdYu6pA
bPoXl/7+0tdy5F/ImWbP/3HKtWeYJ/1xCXLb7n0cjWVv7T4B920Qfpey9nbR
7w17uzQY8SgAAPWTtxqztHyRYu+Yas+DXgeNcpyHhcVGf2Xp/8px/TuIfI6u
p6QOdX1O9HcgbW+O1R6Rznm6sHjUPVd6TgbcB9g/wt4unUE8CgCAXxLU895w
XeX9PGwbm2qO9f/LeJ7mbv6zpd9xfqZ52b7v420SCeoG0uZd5/Ew8ppz+71x
89wPdl56vo8JlX9n8qwN535eC2TEo7e+xwcAwD6RII82zbjGCtea0ieyuvOw
bWyqsup5484j18rr836U8f1PjOUl6EWl+TK3Hn5m55HcdIcIe7t0SkY8qvei
qLUGAMADydeng2uu6s/DNrHpry59esu4VM8hee/NeR9lzNso4/W6tvAqcp07
t5i17/v4UPh7kXdvl2vhnl0rEI8CANBskn+t6SPX2ZWfi21i0y9uGZdOue6K
nfNTSa/LnOaJ55ePngQ1nm7/Gz2PEwnu/TD3DSfs7dJJdl6T+lIRjwIA0CCS
f62p1o/2fI+3y7aMTTd88IMfXLzvfe+L+7ux72NrIpvvtF6qeh5y7+lh7zeQ
INcWxjcv9mf9Obm1hhH2dukk4lEAANpJ8q81pW6t+nOxVWx6cHCwuL29XTw+
Pi7efffdxTvvvBP3vIHv42oqCXoWpeXIrre9hrVrYo13JpHzqL9jl9zf8X7O
2dulo4hHAQBov5x5A9aa1nMucsWmg8FgET4mk8nqZ9/wDd8Qdz+BnkfJc621
vGn7+T7sEkcuH30J1pu6v1uPFvNQD1rfeWZvlw4jHgUAoDuEtaaNkic21Vg0
fAyHw6Tz9UdcZ2fOc1qPG53/ixI+58TOpxsDzy1W4r5Bdef3Mse/aezt0lLE
owAAdJPkX2tK7496zkcYm/5Z9Bxo/a7W7urj5eVlcXp6GpcrVb/r+ziaToK1
n2m1vDdlXd9K0CNJa4enzvs/2Wec+56LLpAgR83eLh1GPAoAQPdJvrWmC8vz
kIer/nzo9dc/is5/r9dbPD8/r+LS+Xy++OhHP5q0tvR3uUbLnONjSa/lnZV9
H8buAWk8fOd8Ttgj6UJYx11kPtnbpeMy4tFHzi0AAN0i+daa6jX0iOuAWs7H
Rg673++/1vBOp9PVz97//vfHnac/EPrsZM3vQdwcR77rgwo/W+PQiazXm2q8
esm9n8y5Gwl7u3Qe8SgAAPtJ8q811Vo4rUkkH1ftuXiIzr2uJw0f19fXq58l
7BHzb7kmzzXPFxnf90nV177Lx5nFx+6eqo/2O8Y5fJunPPfNNMfN3i4dQDwK
AMB+k/xrTedV5ZLweh6eovN+d3f3Gpeen5+nnZ8/JeeWa557cfF/JM45qWks
Wks/lvXaYv3f13WNoWkkqLWeZvxbxN4uHWL3gohHAQBAeH18l3EtGF4n0LOl
mnPQl0idovY8ms1mq5hU15jqWtOEnkfq81yr55rnA0nfR0TPQa19ciwWG8p6
D5+wR1Lnc4GSf2+XCfdeuoN4FAAAxLG4KCtPsbDn9H2Pt2ssLlmba7fnkcan
Gqd+4AMfyMppc98ge67PJL2W99bHdbEEOXNda+rWMz7b9ftF1+45CHu77CXi
UQAAkEWC9VxZ+y4oza3uZZ1hhXO/ca12dnb2WsOre5iK5VBjzse/cv43vV+y
5/pIGlLLmzC+Q4tDNT52c+j6ezeQFucMJf/eLgPfY0Xp5554FAAA5GbXvfMc
saleY/R8j7cLJKHn0dXV1Wtcqv2P9GcxPY80bvm7kbzTmOu8zDkfpXy3a6/l
TRnnuf2uuWuPtWZh2JbfP8m3t4vOOXu7dBDxKAAAKMJipKHE9OCJuY4k/iln
znsSU88Y9jx6eXlZnJ6eJvXh1dzex2V9fZ6+19D3cTWZBHm7tO+4l1relPGe
2jl27xk9WnzduNoFYW+XvZcSj87bck8FAAD4JUEd4SguVop4tud1at2bh/nu
R+f28PDwtefRfD5fHB0dJdXw3tl7HMv6ukT2z0ifc83hTVO+215reVPGfWy/
c24t7Nxi1n4DxsfeLnuOeBQAAJTJrtvHOfIdq71NfY+3zSSm59Hx8fFrz6Pp
dLr62Td/8zfHzf/IeZ8zWd9z5I7rwNR5H6V8rxtTy5sw9p4EfYPc2PrJYoLz
Ou8VCXu74BPEowAAoDp27Zt0rRG97rjwPd62kpi1d7pXafgYj8ern7377rtx
c3/uvM+BXfuHeW7W7KXPe19aVMubcAxa2zCwexAvznm/tZ9XMn5hbxe8fReu
iUcBAEDVLBeSd29TavO2n1+NJWfR+Xzvvfde41KNUVNyUL3I+2me+8Z5jsZd
jc37eZ57ja3uU77TjazlTfkeXVgc6Nbf6/FdlhUfSJDbZ28X6HdhRDwKAADq
JEHPlaw6vYU9h+vR7ea2F3edf39/v4pJtZZXa3pTeh5t1EVqLBU5X8QJyfN/
lfJ9bnQtb8ox9e3exDxy30iPdeseQ8LeLlj/PhCPAgAAbyRYu8jeptXM69oc
as8j7XWkD+19pP2OvuVbviV2rlPe90LWa1S1rpN6ys15OpWW1/KmHJven7iW
9Xy8/u9x1n0KCfLuWXUS1InvEeJRAADQFBbrzDOuVYlNt5vTjXyd5kd1bxh9
3N7ern6WEJdepbxvdJ+OF6F3ctw8daaWN+UYexLU37p75GosrjnV6Ppk9zuT
hL1d9gjxKAAAaCLJt7cpsWn++dzISbk9j4bD4epnH/jAB+LmuJ/x3przcnsq
6XmjP9XmPHWuljfl+3AZ+c5pDfmvSvaaUfZ22TMp8egz9yUAAIBvTk4l6zqW
2DTfXG70PNL+u/rQnOnp6WnS3G70PEr4DK1Tdeuvp5yT2DnqZC1vyvfuby99
JuP3d7W3i+/xovbvR1o8yr8dAACgMSSofSQ23X0ej+PmUPcr1cfT09Pi6Ogo
ad9SjTVz1eRajsyNu7R+k7Wmb/PT+Vpe5zjz7O3y6aX/WsiJ7RXiUQAA0EbE
pqXM4Xl0rtyeRxqf6s8+9KEPxebwtjxX2p8mXDe4yoPljWvbyHKCk7yxlQT1
6UnrKltdyyv59nb5F0u/KJs9kq753e024lEAANB2xKY7z9/G9eDJyclrzyOt
502JS4dbflZP1tcVdna9oLzlBM+3eI3W8s5Tvr+TNsXxkn9vl4vI647tnoX7
Wp0XzbH3fR8XSv2ODIhHAQBAVxCb7jR3Gz2PBoPBa88j7X+kP3vnnXfi5rJf
4PPOIvmwTvVVtZhKc5uJ++ekvPYw7nxE4vhGz5WUuLeL3ce4lPX65meLzy/a
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
SDyab576EtSkz6r6HQUAAEDzWByVmOOLoc/tZ7xnz+KVuXu9Les1oeMSxn7l
jCsxNpK3fVRDw4rnVHPLiWtN+/3+4vHxsVBcqmtNh8Nh1jkalxnnCGtMd5k7
4lEAAAAgBwnqT69lu7reQVI+Q4L9Qle5O/tzT97ysjvHhDbeMH83y/H8tf6f
Ncznoc3nl5Lm8PLychVjFnnMZrPF2dlZVm67tNhbWGNaZM6IRwEAAIAt2XX0
QNbrXdM8WewVVzc7suf8nOXZNIYsZY9NWc+R3uZ4/mVk3LXEAxaLJ8Ulq1pc
rckt+ri/v18cHx+nnR+NffolHg9rTPPNE/EoAAAAsCMJ1ndtW9d7GnmPf25/
9+dLf7nEsbnX+5l9e+1Y3LHutMfn8vEX5S0H+mM5nq95499LmjuNKzW+LPLQ
3knaQyljranmMXslzT1rTLf7fhKPAgAAADuwXN9Y1ntjZuXmfmrp7y19Zenr
S18rKyayMc2dz7vM8fyjyBgL5fMisWgoMyZ1Xj9c+lzS3Gk9rtblFnnonjNa
D5xyXjSOvC4jJhLWmKbNzYR4FAAAACifBPWIWgObt67XpbGp9uMtpZ9mJB66
yjn211xeCZ//EQlyv1vFpPbaQ0mpgdW9Y66urgqvNdX+SdpHKeVcaL31zjXU
whrTuDlJikf1+8remwAAAEBJlo//cOnXt4hJf8P+/877kdrnu7WRNzmef+w8
/6GEz/9G55i2ikmd9zhJi+mOjo4WNzc3heJSfdze3q7eI+Wc6D2Cjf16ChwH
a0w/kRmP9nyPDwAAAOgKy4/lreON8/OyY740Egfd53j+mfP8UQlzsHNM6ryX
7lXzqaT5Ojk5WUyn00Jxqa41fe+991a515TzcbtrDk/2fI0p8SgAAABQLwn2
NU2KQfL4s6WbotfrkRjzJSumkrdeTbO4eFg214n+m6XvTHm/0mJSez+tLdZe
wp9PmrPz8/PVmtEiD33dxcVF2vl4sc8vfK9A9nSNKfEoAAAA4IflxorGpC6t
wz0r8PluLDBOeZ67l+lGraoEe9Z8KozHJEdP3bJj0shYk2KcVb5T856a/yzy
eHh4WOVdU86FxlGFc5qSvcb0dpe4t2mIRwEAAAC/ZH2f0Dj/VPLX+ep1vPal
zdUXx+IfNy+30etIgp7BM4tJN/rzWvypPX++M/Lzkb3nLy29L+Z1lcSkzvtr
Hvohaa50naiuFy360HWqGWtNNa4svF+OpK8xfexCvEY8CgAAAPhnMV9SzKk/
P5Dt+/W+2PV+Zm8ci0vdPVQfLE4eSFAb/GQxUOx7SdAbdiPulLdcaWwNb9Ux
qfM5mov+TNJcnZ6ernKfRR7a11f7+2asNdU5LLTWVLLXmO7cX8nj9554FAAA
APBMgvWDTxZ3PMZcn2/U0y4f/UgMmUXzdZn7llj8cyNvucUH+7PGprG1orK+
n0uajZizrpjUPktj+pFs7ov6SvclLbrWdD6fr9aqphy/xo/DHb4j84T3jc1d
N50Ee7wSjwIAAAAeSdAr9sViUo07NF8ZzYMm5jklWDep9Z1fzRmb6udo/rO0
PR6dmPRnC7y2tpjU+cyeBHnd2Dk6PDxcXF9fF15ren9/vzg+Pk47B3p+i6z7
zVpjmrmXT1PIW013XNze8z0+AAAAYB9IsOYzjFF6zs978lbHm7k/i71Ga2S/
LPnylSHNs5axr2YYk8auGc14be0xqfPZ/aXfSpqfXq+3uLu7KxSX6mM8Hq/i
25T5v0+735Ay7rQ1phqz5lpH7PF7nxaPFl57CwAAACA/CephE2MIedsjJnfv
Vgnqa/U9f1mCdXp595jRmFjXqRbq4+rEpIn7vkhQE+y1djdl/HrsiWtNz87O
FrPZrFBcqmtNh8Nh1vxfbxtH2piTzu+8SKxb01wTjwIAAAAeSVB/eW/X4ZO0
OHCbeNR5TRjrasyidb1ap/uUMzZ9ttcXyd2FtbAb9bsWd/5vccfahJjUOS9p
+cdVbKkxZpGHxrT9fj+rpnqrNaES3LdIOrfPRb4/Fc8x8SgAAADgkQQ1uWEP
o439Vkr6DO3j82A5tFPn55qnTFuLGFcDmtkTKfL+4WvXangtXo1da9qUmNQZ
z7Fzz2CD1uJqTW7Rh9YCa01wyrzr96O/xXiPJGWvm6q+ZwXmlXgUAAAA8EjW
e+vmjvUKflbPrvW1hvMw8ncac91I/r1OnyyeyOyJlBJ3JK4zlfWevd5jUmdc
Z0u/lzQv2sNIexkVeWjvJO2hlLHW9C7PnNtY9T5EWg9m/btCddklzSXxKAAA
AOCRvPXWrW0vSQn696zynQl/r7Wq2+x1GsY2qf1iZT1fGlvLa89z86OuxDWp
ns6d9qH6XNKc6N4vugdMkYfuOTMYDNLm+8XiuVzxpLz1zErKv5bWa3mL+SMe
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
cc0CNw==
     "], {{0, 567}, {933, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{305.06362824952316`, Automatic},
   ImageSizeRaw->{933, 567},
   PlotRange->{{0, 933}, {0, 567}}]]],
 "\nThe forces and moments acting on the aircraft are aerodynamic forces and \
moments and forces and moments from the engine"
}], "Text",
 CellChangeTimes->{{3.6335332978453016`*^9, 3.6335333544485393`*^9}, {
  3.6335344967508755`*^9, 3.6335345060284057`*^9}, {3.633534576873458*^9, 
  3.633534576873458*^9}, {3.6335346371109033`*^9, 3.6335346371109033`*^9}}],

Cell["\<\
aircraft`F := aircraft`aero`F + engine`F + ground`F;
aircraft`T := aircraft`aero`T + engine`T;\
\>", "Input",
 PageWidth->WindowWidth,
 CellChangeTimes->{{3.460037191578125*^9, 3.46003721184375*^9}, {
  3.53924679321875*^9, 3.539246810921875*^9}}],

Cell["torque on x-axis", "Text"],

Cell["Lb := aircraft`T[[1]][[1]]", "Text",
 CellChangeTimes->{{3.519444644671875*^9, 3.519444679109375*^9}, 
   3.5220428413961124`*^9}],

Cell["\<\
The aerodynamic forces acting on the airplane (expressed in wind coordinates) \
can be expressed as:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"aircraft`aero`Fw", ":=", 
  RowBox[{
  "wing1`aero`F", "+", "wing2`aero`F", "+", "fin`aero`F", "+", 
   "body`aero`F"}]}]], "Input"],

Cell["Transformed into body coordinates", "Text"],

Cell[BoxData[
 RowBox[{"aircraft`aero`F", ":=", 
  RowBox[{
   SubscriptBox["L", "BW"], ".", "aircraft`aero`Fw"}]}]], "Input"],

Cell["\<\
where the transformation matrix from wind to body coordinates is:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["L", "BW"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["L", "y"], "[", "\[Alpha]", "]"}], ".", 
    RowBox[{
     SubscriptBox["L", "z"], "[", 
     RowBox[{"-", "\[Beta]"}], "]"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"aircraft`aero`Tw", ":=", 
  RowBox[{
  "wing1`aero`T", "+", "wing2`aero`T", "+", "fin`aero`T", "+", 
   "body`aero`T"}]}]], "Input",
 CellChangeTimes->{3.568149962321068*^9}],

Cell["Moments in body coordinates", "Text"],

Cell[BoxData[
 RowBox[{"aircraft`aero`T", ":=", 
  RowBox[{
   SubscriptBox["L", "BW"], ".", "aircraft`aero`Tw"}]}]], "Input",
 CellChangeTimes->{{3.568149971406587*^9, 3.5681499832482643`*^9}}],

Cell[BoxData[
 RowBox[{"aircraft`aero`T", ":=", "aircraft`aero`Tw"}]], "Input",
 CellChangeTimes->{3.5764109484100046`*^9}],

Cell[CellGroupData[{

Cell["Wing", "Subsubsection",
 FontSlant->"Italic"],

Cell["The contributions from the wing are", "Text"],

Cell[BoxData[
 RowBox[{"wing1`aero`F", ":=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "Dragl1"}], "-", "Dragr1"}]},
     {"0"},
     {
      RowBox[{
       RowBox[{"-", "Liftl1"}], "-", "Liftr1"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.5344253985625*^9, 3.534425399078125*^9}, {
  3.534425447328125*^9, 3.534425532*^9}, {3.53448127696875*^9, 
  3.5344812775625*^9}, {3.53448137740625*^9, 3.53448137828125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"wing1`aero`T", ":=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["M", 
           OverscriptBox[
            RowBox[{"\[EmptySet]", " "}], "."]]}], " ", "Pbe"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Liftl1", "-", "Liftr1"}], ")"}], "rc1"}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xbcg", "-", "xw1"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Liftl1", "+", "Liftr1"}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Dragl1", "+", "Dragr1"}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], "+", 
        "Moment1"}]},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Dragl1"}], "+", "Dragr1"}], ")"}], "rc1", " "}]}
     }], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "\[AliasDelimiter]"}], \
"Input",
 CellChangeTimes->{{3.51944410128125*^9, 3.519444135703125*^9}, 
   3.5220455159009824`*^9, {3.534425316421875*^9, 3.53442532525*^9}, {
   3.53442554415625*^9, 3.53442558225*^9}, {3.5344808701875*^9, 
   3.53448089928125*^9}, 3.53448096390625*^9, {3.5344812799375*^9, 
   3.534481282453125*^9}, {3.534481379125*^9, 3.534481381859375*^9}, 
   3.539011217671125*^9, 3.539012056608625*^9, {3.576410891443746*^9, 
   3.5764109043904867`*^9}, {3.6330811048093915`*^9, 3.633081108879799*^9}, {
   3.6330813226391726`*^9, 3.633081337285637*^9}, {3.6330820860695124`*^9, 
   3.633082088222728*^9}, {3.633082195536458*^9, 3.6330822042813325`*^9}}],

Cell[BoxData["\[AliasDelimiter]"], "Output",
 CellChangeTimes->{3.6331555909045787`*^9, 3.651561803558453*^9}]
}, Open  ]],

Cell["\<\
Calculating the rudder hinge forces and aerodynamic stiffness\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kal1", ":=", 
   RowBox[{"CLde1", " ", "S1", " ", "q", " ", "lc1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kar1", ":=", 
   RowBox[{"CLde1", " ", "S1", " ", "q", " ", "lc1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kal12", ":=", 
   RowBox[{"CLde12", " ", "S1", " ", "q", " ", "lc12"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kar12", ":=", 
   RowBox[{"CLde12", " ", "S1", " ", "q", " ", "lc12"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5220785874375*^9, 3.522078589*^9}, {
   3.523893724671875*^9, 3.523893728484375*^9}, {3.534157901265625*^9, 
   3.534157914703125*^9}, {3.5341670091875*^9, 3.534167082234375*^9}, 
   3.534481283640625*^9, 3.534481383203125*^9, 3.534481487984375*^9, 
   3.534481615125*^9, 3.534481769640625*^9, 3.5344818101875*^9, {
   3.538289666760149*^9, 3.538289696760149*^9}, {3.5764261576225634`*^9, 
   3.5764261628508625`*^9}}],

Cell["Rudder forces (wave variables for connection nodes)", "Text",
 CellChangeTimes->{{3.4468796269280376`*^9, 3.4468796487544866`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"exprW1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cxal1", ",", 
       RowBox[{"kal1", " ", 
        RowBox[{"(", 
         RowBox[{"del1", "+", "\[Alpha]"}], ")"}]}]}], "}"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cxar1", ",", 
       RowBox[{"kar1", 
        RowBox[{"(", 
         RowBox[{"der1", "+", "\[Alpha]"}], ")"}]}]}], "}"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cxal12", ",", 
       RowBox[{"kal12", " ", 
        RowBox[{"(", 
         RowBox[{"del12", "+", "\[Alpha]"}], ")"}]}]}], "}"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cxar12", ",", 
       RowBox[{"kar12", 
        RowBox[{"(", 
         RowBox[{"der12", "+", "\[Alpha]"}], ")"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.534157932328125*^9, 3.534157956078125*^9}, {
  3.5341668865625*^9, 3.534166913015625*^9}, {3.5341670903125*^9, 
  3.534167112046875*^9}, {3.534481284171875*^9, 3.5344812855625*^9}, {
  3.534481384578125*^9, 3.5344813856875*^9}, {3.534481489234375*^9, 
  3.53448149259375*^9}, {3.534481615953125*^9, 3.534481617453125*^9}, {
  3.534481770609375*^9, 3.53448177215625*^9}, {3.534481811328125*^9, 
  3.5344818129375*^9}, {3.5764250883074017`*^9, 3.576425091752599*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Horizontal tail", "Subsubsection",
 FontSlant->"Italic"],

Cell["The contributions from the horizontal tail are", "Text"],

Cell["Forces", "Text"],

Cell[BoxData[
 RowBox[{"wing2`aero`F", ":=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "Dragl2"}], "-", "Dragr2"}]},
     {
      RowBox[{"-", "Cy2"}]},
     {
      RowBox[{
       RowBox[{"-", "Liftl2"}], "-", "Liftr2"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.534425643453125*^9, 3.534425665515625*^9}, {
  3.534481494140625*^9, 3.53448149671875*^9}, {3.53448161915625*^9, 
  3.534481620296875*^9}, {3.613191467483512*^9, 3.6131915180675116`*^9}, {
  3.613234750298771*^9, 3.6132347530179267`*^9}, {3.6132349392335777`*^9, 
  3.61323494329381*^9}}],

Cell["Moments", "Text"],

Cell[BoxData[
 RowBox[{"wing2`aero`T", ":=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Liftl2", "-", "Liftr2"}], ")"}], "rc2"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["M", 
          OverscriptBox["\[Theta]", 
           RowBox[{".", " "}]]]}], " ", "Qbe"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Liftl2", "+", "Liftr2"}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Dragl2", "+", "Dragr2"}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", "Cl2", "-", "Cr2"}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"xbcg", "-", "xw2"}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "Dragl2"}], "+", "Dragr2"}], ")"}], "rc2"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.446878866368227*^9, 3.4468788788835316`*^9}, 
   3.5220454949230537`*^9, {3.5344257330625*^9, 3.534425775515625*^9}, {
   3.5344379266875*^9, 3.534437947171875*^9}, 3.534437993765625*^9, 
   3.53443804259375*^9, {3.53448149865625*^9, 3.5344815021875*^9}, {
   3.53448162225*^9, 3.534481628671875*^9}, {3.57641050862185*^9, 
   3.5764105319281826`*^9}, 3.5764107724709415`*^9, {3.5764108081339808`*^9, 
   3.5764108200376616`*^9}, {3.6131915582577834`*^9, 
   3.6131915842923865`*^9}, {3.6330821513450394`*^9, 3.6330822199719014`*^9}}],

Cell["\<\
Rudder hinge forces and aerodynamic stiffness
\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kal2", ":=", 
   RowBox[{"CLalpha2e", " ", "S2", " ", "q", " ", "lc2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kar2", ":=", 
   RowBox[{"CLalpha2e", " ", "S2", " ", "q", " ", "lc2"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.52207857765625*^9, 3.52207858290625*^9}, {
   3.523893603328125*^9, 3.5238936369375*^9}, {3.52389370346875*^9, 
   3.52389370778125*^9}, 3.5344815035*^9, 3.5344816296875*^9, {
   3.576426101213337*^9, 3.5764261089177775`*^9}, {3.5786615984007187`*^9, 
   3.5786616130895586`*^9}, {3.5840152655066357`*^9, 3.5840152669147167`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"exprW2", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cxal2", ",", 
       RowBox[{"kal2", " ", 
        RowBox[{"(", 
         RowBox[{"del2", "+", "\[Alpha]"}], ")"}]}]}], "}"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"cxar2", ",", 
       RowBox[{"kar2", 
        RowBox[{"(", 
         RowBox[{"der2", "+", "\[Alpha]"}], ")"}]}]}], "}"}]}], " ", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.534481504890625*^9, 3.53448150671875*^9}, {
  3.534481630515625*^9, 3.5344816318125*^9}, {3.576425096174852*^9, 
  3.576425096956897*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fin", "Subsubsection",
 FontSlant->"Italic"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
jVoW9T0ReoaTmfzBOZE1KIlcwbmKfa+Mpm9H7v+5vk+2Hn6NWhb1PVGffx0e
62e56+K8yR+slaxBLnIF/Kh+vx6+hx8k7ldED79GPYv6noh9r/Wm7JkNDskf
rIGswRzkCrhfdOxlvbk9r/8uaw+/Rj2L+p6IdI/2rGt5QVfyB0sjazA2uQKG
afn3cpm433X9d1l7+DXqWcz3xOb2IPV5krsuOIX8QclkDU4hV8B4Nrd3iff/
i8T9dv/Wsvbwa9SzmO+Jze0icYyzrxsMY5M/KIWsQVdyBUyrft8f/pv4aZ2p
KKSHX6OexXxPRM+1hWFN5A8yve9kDVLvC7kCZlblisS/k5uD++x6+LWuh5uh
7sV8T4Q+fvAD+YMZ3mOyxpmTK6AM9b+Nw3877w7uU0wPv0ZNi/me2Nxe35fn
4NzJH4z8fpI1zohcAeWKDuN7Yt/Dr5jec0v6nqg/+w6PcfZ+iFA6+YMT3juy
xkrJFbAs0WHechTUw69R02K+Jza394ljXMQce1ga+YOO7xNZYwXkCliHY5+/
se/h19pPPGfNuevoWGvqfOhp7rpgLeQPEu8JWWNh5ApYr0j3mXtU/11RPfwa
NS/me+LY8QWmIX+cN1mjbHIFnJfN7VPi3+iT+u92a+Je567zoObFfE/4foMy
yB/nQ9Yoh1wBxJH5BFFYD79GzYv4ngh9/KBo8sc6yRrZjrtcAfyk/o49/Lf8
sv677/V/F9HDr1HzIr4nQh8/WBz5Y/lkjVmOsVwBdBIt/R+iwB5+jZoX8T0R
HfqXAOWTP5ZF1hj9eMoVwGDR0tc69j3Fi+nh16h5Ed8Tke7L/iZ3XcDp5I9y
yRonHTu5AhhVtIzziQJ7+DVqXsT3ROjjB2dF/iiDrNH5OMkVwOSqf/eJz4aq
f9+X+v8vpodfo+ZFfE9sbu8Sx/ZF7rqA+cgfWY65rPHzMZErgCw2tweJz4v/
p/7fonr4NWpexPdEy3mFPn5w5uSPyY/vWWcNuQIoTZUpWj5LilwzaSnfE6GP
H9CR/DHqsTybrCFXAEsQ6X5+levctbXUW/z3RKSvF33PXRewHPLH4OO2yqwh
VwBLVX/PpD5znuWuraXe4r8nQh8/YALyR6djtPisIVcAaxLpfn6Vonr4Nepd
wvfEZeJ4FjkmDVg2+eOn47GorCFXAGtXf3f89L2Su64j9Rb1PdFS41XimBbX
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
0mOvXhzc51Xz7x88ePDL169ff80a79+/b3vexx32NbV/l4n7Xdb5aIxxYt/q
jPOyS43Ql+8KAIbw/bEusZ3vXL2OWXv4xXbuQlXLbWznPJ96Lp3sz33k+d8k
tnHYP/yHeebPnz//rW/f5eVlqoa7jvudeuzRmmM7//1ZjDv//bZ+DS5yvy9Z
Pt8VAAzh+2NdIlMPv9ivyTTWOrRfTjlXbmSuZFaI7fyQH/7+w4cPv+aMz58/
t9V01eF5n6dy0oD6m+v6jpnVnt+XeyDl/2/v/mFbR7YDDp/dvbvrXewCXmAX
61LpbukqcJFCpUuXbgIonYA0LtVZnUuXKoVULh28xqWRInERBMZWTic8BC/u
4iaIkSK44YhDczga/tWQQ1I/AR/es69EDYf0cg45Zw7XCgBAE1w/xkU6quEn
/u/DqzlASa2JvecASZwbsfMdxr+vzH9TueDJ6+rqKq99pWtBSZy7bX927WF/
Jjp+8jkH7UZy5qABNq4VAIAmuH6Mhx7/q2PYSg0/8ZtfoNrYag1tcedfn0pa
6/Dj99fX1x854b///rurvZXWDxb3OlrenzGJ/9z6R31sz0Kfx+gnrhUAgCa4
foyHeK7hJ+k6tL7WTep0PJsz7p9rmd8nOeF3d3d5ba8UD0m6Bljtz3o6Vq59
bhIH3kuLcSCGh2sFAKAJrh/jIXvW8JN4rajkXrlrzFxXUg8iyDwdyZnPJNZz
GTMn/OzszLkfFb+vcN5Wh/udzG9T+++zzrqK0Sahz3OEwbUCANAE14/xkLSu
w0XF90/Ebw6AWec6eP6xuPO0/2L/Tq1vq17Pz895+zWv+H0zx2cfetAPbeXt
q9z1k9D7h87OI64VAIDauH6Mh5TU8JN0baO1+FnbqNdjTj3GLtyHk5OTspxw
pdIzGbFqkGvL0P3gaOdE0vWIfdY6uajaVxgerhUAgCa4foyDpDX8NsbvkvvZ
ahzo43724ObSlMVUi8WirE545b8Hcc9XmobugwrtTuos+p471/t9R63zhGsF
AKA2rh/jIOn8nX/R4zyftahVDscga1GL+1nDh81ms401VqtV7nsqfk/eM5Tg
c8ka9Jm5JsC+59AXvR21PfLMB4xrBQCgCa4fw6bHhcvIf3geF45i7VMdJzn3
9fz8/GP+1Onp6b6xhis3xMt6YKFJvL6Z7/jVSx0VdHoecK0AANTG9WNYJK2r
4Gsd2lHPdxH32lBban1bMyf8q6++2ifWuHV8ttF6YH0m7czLW0vD+vDo9Nhz
rQAA1Mb1o9/E/1z6g8vjdfWbyglXORrqNZ/PXf30EcdV/A5Xrkal9cCGTPyv
N6Dil5X0ZC0zZI411woAQG1cP/pF/K8RlIzdLg917Ba9/mT3i1pzSr3e3t6+
HB0dufptXfXvQRx1yLWD629JY+M7V4zXgIrhgtVoQebYcq0AANTG9SN4/yf3
hVee7gszJ2W3j//B7qeXl5dtrHF7e5vXj9MascbU8fmX0PvdB+J/zt+jdFh7
HpljybUCAFAb14/O+1vdA0/mu/uo6azuHf+n/v9/H3r/+ih6/bPZZ9PptCwn
/EV/rmqssXRsYx16v/tIx2Wqv3zkmavYJVknjTWu2j92XCsAALVx/eikj9X8
D1/r+KjxVWYNUSmp4XfIJK078mG9Xm/jjKenp+3PjpzwK/3ZqrHGo+M4zULv
e99JHHervw1fcffg6r8MCdcKAEATXD9a6dOkPoFrDNqE2s5SHPNGJJ4fr96z
6Xo/h0DHeB99qer1JTnhl5eXebHcif5s6d+D5NfVmITe96HRfelzPqHaxlp6
Wtd+aLhWAACa4PrhpQ+TOen34mdOeuV8WElr+N2H7oe+kfi+eSa/PskJf319
3eaEf/3113bf3xmfrxJruOpqEPf5OX4TfX7f2cdxj7+rg1qDzfPx4FoBAKiN
60ejPvO91k7jdT7159Q2rkL3S9+44gBVS6MkJ/zc+HyVWGPl2MYq9L6Pkf67
8xnTj7q2TAv9z7UCAFAb149KfXQi6Tq0Gw9jnI2ka0XtNbdD0nnurMuz2zf3
Zr+fnZ195IR//vzZeVysz1eJNVznw+jravSB+J2ruJMHhZ3+5loBAKiN64ez
T8x5475qI3vPWZU0V0CNk5gTku2bE/s4rFarbZzx+Pi4/dmRE76wtlH49yCO
vHPt4Opq9IGkazD4Wt/tXv/Nfg69b33AtQIA0ATXj1bWw+lkLU5J6zo8hu7D
vhFrHVqVm5HkhF9cXOQdsxNrG2WxxtyxnafQ+46POFzNofN5v2AtHp5FDhXX
CgBAE4d6/RC/6/xvx/sSz7/obC6TMZ6+Dd2ffSPW3Kb5fF6WE76TW18h1nhw
nAfL0PsO57Ey50H6yDNvnGM1VId6rQAA7OdQrh+Szu12jQ+bCJ5XKmk+AvkB
2X45t4+XqqWhXjc3N3nHc6cPi/4eJH4W5spPDnY+oNY5kqzvoP6GfKzvUHnt
uKE6lGsFAMCvsV4/JLtmja+xRK/WyzT26yDndBT0SyYnXNUGT16TycR1bN9z
tlMUa+zEM+p4hN53ND5n1LrVPu9FPErHzzk76KNRXisAAO0ay/VD4jzdZB1a
H3MkNhLPkehlHTChhl9ev6i5MpnnDWp9W/W6v7/f/vzNN9/sxBqu+LEk1nCt
dbsOvf/wdh5NJX5O4WOOZSf5Wx30ySiuFQCAbg31+qHHlCoOWIufdWiTtaJm
MoCaz5LW8LsL3ZY+kfhe8sdxVbkZb29vRTnhiXPHtopiDdc5x1y2EZJ4vpx6
nqmea/Z2XboO+mGQ1woAQFhDuX5Iuq6Mr+v9oNe0FGr45fVL5tyYzWYfOeHq
Z0dOeGKn/l7e34PEuT+Vno1gfMT/fY6N9PgZqrHfg7hWAAD6pa/XD0nXofW1
Xv6oanUZfTL4ffHYJ1P7uKtaGup1fX1deq/Zsb28WOPW8fmH0PuPMCQ7f3OU
uWF6P3t5rQAA9Fufrh8S3y9eip86wMqT3t40dD977idq+Ln75c48/qo2uHqp
uhonJydVzpeptb28WMOVDzQLvf/oB4nzzK/0vQ3XWmVN/jsWdM07vV+9uVYA
AIYj5PVDsmu/+LgmJ/cDR7vupO63ZA0kavilfVKaE/7tt9+WnT9ra5s7fw/i
Xn9Kfe9B1FhAfZLeQ/GVZx7k+SyxBgCgiS6vH+J/TfuDq6el+3Gp958afmmf
XJnnhsoJVzka6nV+fl71fHozY9ScWGPt+Bz5+ahE0rmh6p6Ij7mhneWdEWsA
AJpo8/oh8Tzmmfir1bvR21Lb7G0OZQfHLKkBwLpHaZ9kxm2Xl5fbOGOz2Wx/
/vTpk30u/ZO4490LY5uZvwdxPDvhOGAfEs+HVDnhK/G3nl4r/40k1gAANOHz
+iHp+iy+rptqLJisDTm4taJaPGbU8Mv2x866UA8PD9tYY7FY5J1byTpC9u+f
je3ascbC8X41thvtfD10S9L7M77qBHl79kusAQBoYp/rh2TXnfe1VtTga161
fLxOdV9Rwy/tk0zMoGqDl+SEv+pz9zTnPDzX2/34e9Dvd439mMeG1kg87/RK
/3fRV06byjOvndNGrAEAaKLu9UPSdWh95DkqjxLfLz4L3RdDINTws/vjyB6D
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
49DtyWkjsQYAAAAwMNFrqcfy69BtKWgjsQYAAAAwMNHrVY/lT0O3paCNxBoA
AADAgPQ9J9xoJ7EGAAAAMCDR60GP4+eh21LSTmINAAAAYCCi18TICT8K3Z6S
thJrAAAAAAMRvW70GP42dFsqtJVYAwAAABgA9RxjCDnhRnuJNQAAAIABiF6X
evz+FLotFdtLrAEAAAAMQPR61OP3Wei2VGwvsQYAAADQc9Hrsx67v1bNCdd5
5Je67l9C/XzWUZuJNQAAAICeU7ngVXPCo9dx5C7ypp+FqM8+JWN/bRNZtLmW
le9YI3qd6Da/qP9t8Plz3R8m1cZJoGM6VXXfdTs2xvE6D9SehY5Hg3w/AAAA
uqdzwt/0uPhzhfc/6FjjyPr9iTG+Tjy02G4vsYbe/6Ve5/eL7otZg+1M9Dpe
b1YfTDo+nhNJa6S86GNitmmmn2NNtU7WAdBt2T4767I/AAAAEI4ee6ox4GOF
9yZzrU5y/v3IGOcmWhnL+og19Lh8Y7RVPaM53nOblxIo1tD9n4zpV9bvkzXG
Zvp5R9K+0uPuqW1XxndedNUnAAAACEfS+U+l4z8VN+j35uZkWPHGxn7+4bHd
e8UaOm5K4owXXzGBpPUQQ8QaSQyxU4tR4jleS30MQ8Qax5I+O7rvqk8AAAAQ
hhE7VMoJ13HEsx6bF97/L4pHPLW9caxh3f9X49/SuWNN2tZlrGHFOIXxQ4hY
w/pe1efOZ2MAAAAYBzXPRo/9bmp8ZqrHii++x+g1275PrGGOtWdtta3jWGNu
fOe65L2d52vo7z032ngV6twBAABAu/S9/fcm42E9ZnzXWl1vqqANjWINPb5O
xrsr3+0y29ZxrHFTNdYIxTrnXkK3BwAAAO0w7oM3WitKz78y8x06qathfH/T
WOPeGJO3Mo8nUKxh7tcy1HlVoZ3mWmWdnjMAAADohsR5F3utCSTxOrfPxtjx
pqtnHE1iDd3e5L76XnkKEudHTA1ndtvqxhr6vv/O9ip+9kVqxBpq+/p7qqxz
nPteyc7HKl3DSz8H+1j3q4tzBQAAAN0RIyfcw7bU+Nis5fdUZfzq4XubxBpL
o53zht+rxt13VjyReHP826Ti8cjb5lNR3KHbc5vz2Q/6vRvHvznnW5W9V+K1
c+33qP0vzMOQbM7Gc+i/BQAAAPglaW70co9tnOixe3I/3Xy+oZ4dtFofum6s
IdkaE43mT0k87yx5LrLR9+iTe/qusXdprGFtU60VfKG3t7S25xzD6xjl0dq3
jVg1zI0+mBnfVxRruN6r1hJQa9ea87VccuMNfd6Y50nnuT4AAABoh2TrHDQZ
byd1tt/0mFaNR4/1v91LR/FGg1hjarTtqcH3zayx/CSnb+14Y+d9xvvNtaN2
8tQlO+dLyV0zSrJray1L9sU8TmVrVmXeK3FMuTGPre5bszZ54fMy672drYMF
AACAdklav7l2PTU9lk5ye5/Emp8vu/Op3tsaSzaINcxx/V3N75pUHR9bMUlu
rKG3mcQRufVNJJvfkHvMasYaldesst6bPL/aycuQ3XrpRfO+zHOk0Vw2AAAA
9I+kc51qP3Mw4ozcWmzWGLpRTFOxLXVjjaXRplo5ydZ4uzDHQOJc6Sqxhplj
sayxPWcuTM1Yw+yLsljDfO97wf4cWe3MXXNA0rrye83jAwAAQH9IOo9o0+Cz
5v36wrG67OYqe3+20SDWMMfii5rfZc6LKrwPL/GznyqxhrnNwrXArNjtssL+
LUu21zTWKIuzzH2aVTwWletIAgAAoL8kXeuo1lhbf9ZcU7VwnSnJ5v8q3mtE
N4g1HquMgx2fm1S9X2+3LS/WcPRPWX+aY/hlznu6iDXK3lupjyWtV1+6TQAA
APSfpHnGufOfCj57Zo2NS9cOssbH3usoNIg1zPZMa3xuau17ad2LCrGGvc06
8taNGlKsUXmbAAAA6D9Jc8Jr5UXrz86MsWGlmhySnZPvfTzZINYwx+vTGp+z
c54nNb9r5/2ObS5rcD5XGVisUTk3HQAAAP0n6X39aYPPmuPNSrkeskd+RMXt
7/Nco3JevMT1Lnw/18hs01N/DCnWMNu6s9YvAAAAhkPSWs0vDT9v3od/r/gZ
sy6D9zobDWKNSuNgx+fs+WOl+1Ih1jgte0+D/hhSrHFXta0AAADIkniOiKrn
ULtWXkvtScb9jXK0HWPj0v2SbA0F7/3QINaoPBa3Pmfnce+9DpXjPaXPSnzu
Xw9iDfN93p95AQAAjJVk63J/0eOqmTjqn3XUHjMnvFEbJK6dYO5T2RqtZr3r
VubINIg1zByBWm2y4oLCfBfZfQ4yyXmfWRtw7/H2wGKN16rnEgAAAFI61phZ
466PcarE85FK13Hy2J5FlXFije0oZXUWkjz0jbmv0euvI/8b+bOOX5K5Wf8V
+aua7akba5h1w2vVF5TsfLD3ouNnjfmLYo1ba5vO9xnvVzX9phW/12f80DTW
WOa8x675V7jeLwAAANwkvr+vxrjP1vjqTY8Nm9TuntSJG4x7yHvN09FjRHM/
nPOxJJ5v9abHz1P9ux8j/2Z8VsUaf2f1yd/UbE/dWOPc+K5aeSuyu0Zt3rqz
N8a+J++dFpwbmedfBd8/k5L1imvGGuZ7C+Oumu/dVIg1zPl4b/uckwAAAIjp
GEE9GzBr4n3RsYCqbVaptrZxn7k03pB0vaPC5xA198HMw1gl96Ulfp5zocfa
T+K4Xy3pcw312T9FPu3RlrqxxpFk5+7Uup9u7XcyN+5KxyEz/e9veixtjrlz
50dJ9plB8hxoobd5qWOX5HtVnJEbm1rfWbgusWRjRtUnRc9pKr1XducOOuea
SXb95Ceff2MAAAD4mA9zY40Pk7HmsmgcbMUqy5Lv2SsnvGC7C2vc/vG8QO1X
wed+i/y3NJgz5dhWrVhDf+amat85Pnss7nlxH/PKRM+DsvpGjb/VfKm85xEz
yeZu5G3bGYvquOTB8ZlHOzbR5929473q89M93jvN6ZtbseaGScMcfQAAANQn
8X3wlWPsrsbtV+ZYTXbzjovmqiTrJxXmF+zZ9mM9zpxW+Q4j1vjzvm1qGGtM
zP5t8J3q2chCj7dfNTXGnlnve3Qoeiah2rXU201iySf9c1ke/m3O9yl31nsX
Be+93eO9RW2w+8aMr8nVAAAA6Iges6v7vvZ9bjVmm8tu3nFuvCHpPfze1EoL
HWvoz5n36hnrdnv8zVyNRrVeAAAAsD+Jcx/UulXvOfFFbrwh2dyESnkgHe1T
H2INs2Z3rfWosPfxX7jOVwAAAIQh6dqwdm6yy0x/xmtOuMd9CR5r6M+azza8
5rKgsN+T+WG562kBAACgewXzp3biDUlzhWeh223tQ19iDZVnsjHGvXvX7UZp
n0+Nc7SwHiIAAAC6o59tlK1VZHvbdzzfwn70ItbQn58Y8camT3PNxkji+YDJ
uUlfAwAA9ISk9bXr+NfQ7XbsR9A1bx3bUGt1mfUj1HpKx6H7aWx0rJzkHZEj
AwAA0CPirnOgJGuuqvlVy8jfSlorL/l3tZ7utKf70Lien49Yw9jWwhgLq+dB
l6H7CwAAAGibvid8r2OJpE61c61W4/nHX2S3Xket+uR95zPW0Ns7kbSuO/ni
AAAAgEHStaou9c9TcdcJ3Oj5QoONO3zHGgAAAADcJK2TpuKKnbxrHXfcSrZu
82DjDmINAAAAoBs6XtjmN1d472lO3KFyFR70XKJp6H0q2QdiDQAAAKBlkl0T
15nLUfDZJO54kd3c7S869/wmci49WqOJWAMAAABon8T1+9TY+2HP7aj86Asd
e+TVKX/WOSAqD30ScJ8rxRoS19HYrtMV+jgBAAAAQyNpjYgLz9s90nkeSz23
6t0Re2z0sw/1nmSdrEkH+1wYaxgxRtLOZejjBAAAAAxJWU54S9+nYoo72V3f
yvUMpJU4JC/WcMQYxBoAAABAA3o+kxpL3wT6/onx7ONWxxZ2znlRHJLUDjFd
6m0mzhzfm4k1CmIMYg0AAACgJj3HKZnXdBK6PY72nTaMQ+ooizGINQAAAICa
9LwkNY6+D92WBm1P4pALx3ONex2XJPLy1ENYh+47AAAAoG3SUk74EBBrAAAA
AO2IXmd67Psaui2B9j8Z+8+k2rysZeg2AwAAAENg5CgsQrcl0P7bueFlMccy
dJsBAACAvpO45t671ruc8I76IBNrGL/PizmWodsMAAAA9J0MOCfcYx84Yw3j
3+2YYxm6zQAAAEDfRa8XPX4+D92WgH1QGGsY70tijmXoNgMAAAB9JvE6sWqc
/RK6LYH7oVKsYbx/ErrNAAAAQJ9JXHtCjbOvQrclcD/UijUAAAAAFItex5H5
oeaEG/2wrfMXuh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKC//h+E
O8h5
     "], {{0, 862}, {795, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{244.15453866060173`, Automatic},
   ImageSizeRaw->{795, 862},
   PlotRange->{{0, 795}, {0, 862}}]]],
 "\nThe contributions from the vertical tail are"
}], "Text",
 CellChangeTimes->{{3.6335333871574097`*^9, 3.6335333875104303`*^9}}],

Cell["Forces", "Text"],

Cell[BoxData[
 RowBox[{"fin`aero`F", ":=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"-", "Dragfin"}]},
     {
      RowBox[{"-", "Cfin"}]},
     {"0"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{
  3.5344769524375*^9, {3.534476999921875*^9, 3.53447701875*^9}}],

Cell["Moments", "Text"],

Cell[BoxData[
 RowBox[{"fin`aero`T", ":=", 
  RowBox[{"(", GridBox[{
     {"0"},
     {"0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "Cfin"}], " ", 
        RowBox[{"(", 
         RowBox[{"xwfin", "-", "xbcg"}], ")"}]}], "-", 
       RowBox[{"Rbe", " ", 
        SubscriptBox["M", 
         OverscriptBox["\[Psi]", "."]]}]}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{
  3.522045497297324*^9, {3.53447696490625*^9, 3.534476990671875*^9}}],

Cell["Rudder hinge forces and aerodynamic stiffness", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kafin", ":=", 
   RowBox[{"CLdefin", " ", "Sfin", " ", "q", " ", "lcfin"}]}], ";"}]], "Input",\

 CellChangeTimes->{
  3.5220785980625*^9, 3.523893597703125*^9, {3.523893642671875*^9, 
   3.52389364409375*^9}, {3.523893697140625*^9, 3.523893697765625*^9}, {
   3.5764261358563185`*^9, 3.5764261360363283`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"exprFin", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"cxfin", ",", 
      RowBox[{"kafin", " ", 
       RowBox[{"(", 
        RowBox[{"defin", "+", "\[Beta]"}], ")"}]}]}], "}"}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{3.576411191923932*^9, 3.5764251086875677`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Body", "Subsubsection",
 FontSlant->"Italic"],

Cell["The contributions from the body are", "Text"],

Cell["Forces", "Text"],

Cell[BoxData[
 RowBox[{"body`aero`F", ":=", 
  InterpretationBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "Dragb"}]},
      {
       RowBox[{"-", "Cbody"}]},
      {
       RowBox[{"-", "Liftb"}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[{-Dragb, -Cbody, -Liftb}]]}]], "Input"],

Cell["Moments", "Text"],

Cell[BoxData[
 RowBox[{"body`aero`T", ":=", 
  InterpretationBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0"},
      {"0"},
      {"0"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[{0, 0, 0}]]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Propulsion",
 FontSlant->"Italic"]], "Subsubsection"],

Cell["The thrust vector in body coordinates is", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"engine`T", ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"yeng", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"thrustl", " ", 
         RowBox[{"Sin", "[", "dezthrustl", "]"}], " ", 
         RowBox[{"Cos", "[", "deythrustl", "]"}]}], "-", 
        RowBox[{"thrustr", " ", 
         RowBox[{"Sin", "[", "dezthrustr", "]"}], " ", 
         RowBox[{"Cos", "[", "deythrustr", "]"}]}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"xeng", "-", "xbcg"}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"thrustl", " ", 
         RowBox[{"Sin", "[", "dezthrustl", "]"}], 
         RowBox[{"Cos", "[", "deythrustl", "]"}]}], "+", 
        RowBox[{"thrustr", " ", 
         RowBox[{"Sin", "[", "dezthrustr", "]"}], 
         RowBox[{"Cos", "[", "deythrustr", "]"}]}]}], ")"}]}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"xeng", "-", "xbcg"}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"thrustl", " ", 
         RowBox[{"Cos", "[", "dezthrustl", "]"}], " ", 
         RowBox[{"Sin", "[", "deythrustl", "]"}]}], " ", "+", 
        RowBox[{"thrustr", " ", 
         RowBox[{"Cos", "[", "dezthrustr", "]"}], " ", 
         RowBox[{"Sin", "[", "deythrustr", "]"}]}]}], ")"}]}]}], "  ", 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.567880405111807*^9, 3.567880430046233*^9}, 
   3.567880589933378*^9, {3.5678806300296717`*^9, 3.56788064346444*^9}, {
   3.5678806941553392`*^9, 3.5678807311564555`*^9}, {3.567880768684602*^9, 
   3.5678808267689247`*^9}, {3.567880877287814*^9, 3.5678810170858097`*^9}, {
   3.5678811350795584`*^9, 3.567881191522787*^9}, 3.567943793873806*^9, {
   3.5679438574544425`*^9, 3.5679438582744894`*^9}, 3.5680030649205723`*^9, {
   3.5680283597420015`*^9, 3.5680283862856555`*^9}, 3.568028439984025*^9}],

Cell[BoxData[
 RowBox[{"engine`F", " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"thrustl", " ", 
      RowBox[{"Cos", "[", "deythrustl", "]"}], 
      RowBox[{"Cos", "[", "dezthrustr", "]"}]}], "+", 
     RowBox[{"thrustr", " ", 
      RowBox[{"Cos", "[", "deythrustr", "]"}], 
      RowBox[{"Cos", "[", "dezthrustr", "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "thrustl"}], " ", 
      RowBox[{"Sin", "[", "deythrustl", "]"}], 
      RowBox[{"Cos", "[", "dezthrustr", "]"}]}], "-", 
     RowBox[{"thrustr", " ", 
      RowBox[{"Sin", "[", "deythrustr", "]"}], 
      RowBox[{"Cos", "[", "dezthrustr", "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "thrustl"}], " ", 
      RowBox[{"Cos", "[", "deythrustl", "]"}], 
      RowBox[{"Sin", "[", "dezthrustr", "]"}]}], "-", 
     RowBox[{"thrustr", " ", 
      RowBox[{"Cos", "[", "deythrustr", "]"}], 
      RowBox[{"Sin", "[", "dezthrustr", "]"}]}]}]}], "\[IndentingNewLine]", 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.5680024386973815`*^9, 3.5680026409596057`*^9}, {
   3.568002758067572*^9, 3.568002776969572*^9}, {3.5680028518355722`*^9, 
   3.568002874338572*^9}, 3.568003071606572*^9, {3.5877430966711063`*^9, 
   3.587743106380661*^9}}],

Cell["\<\
The total force an moment vectors in body coordinates are then\
\>", "Text",
 CellChangeTimes->{{3.567880379910365*^9, 3.5678803823515053`*^9}, 
   3.568003087731572*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"ground`F", ":=", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"0"},
      {"0"}
     }], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.460037253*^9, 3.4600373400625*^9}, {
   3.518863135171875*^9, 3.518863187140625*^9}, 3.518863232328125*^9, {
   3.518863272328125*^9, 3.518863323953125*^9}, 3.519443222*^9, {
   3.538220000709673*^9, 3.538220002444026*^9}, {3.5389929952154565`*^9, 
   3.5389929974654565`*^9}, {3.5411476588373775`*^9, 3.541147663759189*^9}, 
   3.5550567684193497`*^9}],

Cell["With ground limitation", "Text",
 CellChangeTimes->{{3.567880379910365*^9, 3.5678803823515053`*^9}, 
   3.568003087731572*^9, {3.6648904150871677`*^9, 3.664890419451599*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"ground`F", ":=", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{
        RowBox[{"-", 
         RowBox[{"onPositive", "[", "zcg", "]"}]}], "kground", " ", "zcg"}]}
     }], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.460037253*^9, 3.4600373400625*^9}, {
   3.518863135171875*^9, 3.518863187140625*^9}, 3.518863232328125*^9, {
   3.518863272328125*^9, 3.518863323953125*^9}, 3.519443222*^9, {
   3.538220000709673*^9, 3.538220002444026*^9}, {3.5389929952154565`*^9, 
   3.5389929974654565`*^9}, {3.5411476588373775`*^9, 3.541147663759189*^9}}],

Cell[CellGroupData[{

Cell["Display forces and moments", "Subsection"],

Cell["The inverse of the inertia matrix", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jinv", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["Iz", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["Ixz", "2"]}], "+", 
        RowBox[{"Ix", " ", "Iz"}]}]], "0", 
      FractionBox["Ixz", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["Ixz", "2"]}], "+", 
        RowBox[{"Ix", " ", "Iz"}]}]]},
     {"0", 
      FractionBox["1", "Iy"], "0"},
     {
      FractionBox["Ixz", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["Ixz", "2"]}], "+", 
        RowBox[{"Ix", " ", "Iz"}]}]], "0", 
      FractionBox["Ix", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["Ixz", "2"]}], "+", 
        RowBox[{"Ix", " ", "Iz"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.576426209215514*^9, 3.576993497755633*^9, 3.5769936707316327`*^9, 
   3.5769937361586328`*^9, 3.578504373949436*^9, 3.5785915053047743`*^9, 
   3.5786616386740217`*^9, 3.581236894108813*^9, 3.581237062574768*^9, 
   3.581237109772673*^9, 3.581237148766427*^9, 3.581237282090684*^9, 
   3.5812373491687193`*^9, 3.5813519979723344`*^9, 3.5817462151805716`*^9, 
   3.5817463996540174`*^9, 3.581746599825032*^9, 3.5817550087032223`*^9, 
   3.581780890267563*^9, 3.581826860300659*^9, 3.5823513310749474`*^9, 
   3.5840250905175943`*^9, 3.584025261655383*^9, 3.584025380225165*^9, 
   3.5840254223005714`*^9, 3.584025458043616*^9, 3.585372038147624*^9, 
   3.585372123003109*^9, 3.5853722452633333`*^9, 3.6124578282393117`*^9, 
   3.61245809780273*^9, 3.612458179468401*^9, {3.612458309998867*^9, 
   3.6124583156701913`*^9}, 3.6131936065165887`*^9, 3.6131936502629633`*^9, 
   3.6131936887818146`*^9, 3.6131938455321894`*^9, 3.6207115505546117`*^9, 
   3.620711592985854*^9, 3.6208448023785715`*^9, 3.632773914820011*^9, 
   3.6331555911516037`*^9, 3.6515618037804756`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wing1`aero`F", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "Dragl1"}], "-", "Dragr1"}]},
     {"0"},
     {
      RowBox[{
       RowBox[{"-", "Liftl1"}], "-", "Liftr1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5764262092395153`*^9, 3.5769934977906327`*^9, 3.5769936707606325`*^9, 
   3.5769937361916327`*^9, 3.5785043739874387`*^9, 3.5785915053327756`*^9, 
   3.578661638703024*^9, 3.5812368941338177`*^9, 3.5812370626017714`*^9, 
   3.581237109803875*^9, 3.5812371487976294`*^9, 3.581237282106285*^9, 
   3.5812373491999207`*^9, 3.581351997998336*^9, 3.5817462152085743`*^9, 
   3.58174639968002*^9, 3.5817465998570356`*^9, 3.581755008735224*^9, 
   3.5817808902965646`*^9, 3.581826860327659*^9, 3.5823513311169434`*^9, 
   3.5840250905435963`*^9, 3.5840252616853848`*^9, 3.5840253802641673`*^9, 
   3.5840254223365736`*^9, 3.584025458075618*^9, 3.58537203820863*^9, 
   3.585372123056114*^9, 3.5853722453123384`*^9, 3.6124578282663136`*^9, 
   3.612458097834732*^9, 3.6124581794984026`*^9, {3.6124583100298686`*^9, 
   3.6124583157021933`*^9}, 3.613193606549592*^9, 3.613193650287966*^9, 
   3.6131936888078175`*^9, 3.613193845611189*^9, 3.620711550577614*^9, 
   3.6207115930128574`*^9, 3.6208448024025726`*^9, 3.6327739148470125`*^9, 
   3.6331555911806064`*^9, 3.651561803807478*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wing1`aero`T", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Liftl1", "-", "Liftr1"}], ")"}], " ", "rc1"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pb", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["q0", "2"], "+", 
             SuperscriptBox["q1", "2"], "-", 
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ")"}], " ", "wturbx"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"q1", " ", "q2"}], "-", 
             RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "wturby"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"q0", " ", "q2"}], "+", 
             RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "wturbz"}]}], ")"}], 
        " ", 
        SubscriptBox["M", 
         OverscriptBox["\[EmptySet]", "."]]}]}]},
     {
      RowBox[{
       RowBox[{"qpress", " ", "S1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Cmde1"}], " ", "thetaal1"}], "-", 
          RowBox[{"Cmde12", " ", "thetaal12"}], "-", 
          RowBox[{"Cmde1", " ", "thetaar1"}], "-", 
          RowBox[{"Cmde12", " ", "thetaar12"}], "-", 
          FractionBox[
           RowBox[{"smc", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"CLde1", " ", "thetaal1"}], "+", 
              RowBox[{"CLde12", " ", "thetaal12"}], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"CLift", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Alpha", " ", "dah1"}], "-", "ia1"}], ",", 
                 "CLalpha1e", ",", "ap1", ",", "an1", ",", "awp1", ",", 
                 "awn1"}], "]"}]}]}], ")"}]}], 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["en", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"v", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "dM"}], ")"}], " ", "vM"}]}], ")"}]}], 
                 RowBox[{"dM", " ", "vM"}]]}]]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"smc", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"CLde1", " ", "thetaar1"}], "+", 
              RowBox[{"CLde12", " ", "thetaar12"}], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"CLift", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Alpha", " ", "dah1"}], "-", "ia1"}], ",", 
                 "CLalpha1e", ",", "ap1", ",", "an1", ",", "awp1", ",", 
                 "awn1"}], "]"}]}]}], ")"}]}], 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["en", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"v", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "dM"}], ")"}], " ", "vM"}]}], ")"}]}], 
                 RowBox[{"dM", " ", "vM"}]]}]]}], ")"}]}]], "+", 
          RowBox[{"CMoment", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Alpha", " ", "dah1"}], "-", "ia1"}], ",", "Cm01", ",", 
            "Cmfs1", ",", "ap1", ",", "an1", ",", "awp1", ",", "awn1"}], 
           "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xbcg", "-", "xw1"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Liftl1", "+", "Liftr1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "Alpha", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Dragl1", "+", "Dragr1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "Alpha", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "Dragl1"}], "+", "Dragr1"}], ")"}], " ", "rc1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.576426209264517*^9, 3.576993497820633*^9, 3.5769936707906327`*^9, 
   3.576993736222633*^9, 3.578504374028441*^9, 3.578591505360777*^9, 
   3.578661638731025*^9, 3.581236894158823*^9, 3.5812370626277733`*^9, 
   3.581237109819476*^9, 3.58123714881323*^9, 3.5812372821374865`*^9, 
   3.581237349215521*^9, 3.5813519980233374`*^9, 3.581746215238578*^9, 
   3.5817463997060223`*^9, 3.5817465998850384`*^9, 3.5817550087682257`*^9, 
   3.5817808903285666`*^9, 3.5818268603556595`*^9, 3.5823513311479406`*^9, 
   3.5840250905715976`*^9, 3.5840252617183867`*^9, 3.584025380298169*^9, 
   3.584025422377576*^9, 3.5840254581076193`*^9, 3.5853720382486343`*^9, 
   3.58537212311012*^9, 3.5853722453683443`*^9, 3.612457828291315*^9, 
   3.6124580978637333`*^9, 3.6124581795294046`*^9, {3.61245831005787*^9, 
   3.612458315730195*^9}, 3.613193606580595*^9, 3.6131936503129683`*^9, 
   3.6131936888338194`*^9, 3.6131938456431894`*^9, 3.6207115506016164`*^9, 
   3.62071159304086*^9, 3.620844802427574*^9, 3.632773914874014*^9, 
   3.63315559122161*^9, 3.651561803834481*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wing2`aero`F", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "Dragl2"}], "-", "Dragr2"}]},
     {
      RowBox[{
       RowBox[{"-", "Cydeelev"}], " ", "qpress", " ", "S2", " ", 
       RowBox[{"(", 
        RowBox[{"thetaal2", "-", "thetaar2"}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", "Liftl2"}], "-", "Liftr2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6207115506246185`*^9, 3.6207115930678625`*^9, 
  3.6208448024525757`*^9, 3.632773914900015*^9, 3.6331555912906175`*^9, 
  3.651561803863484*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wing2`aero`T", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Liftl2", "-", "Liftr2"}], ")"}], " ", "rc2"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "Mdvtheta"}], " ", 
        RowBox[{"(", 
         RowBox[{"Qb", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"q1", " ", "q2"}], "+", 
             RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "wturbx"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["q0", "2"], "-", 
             SuperscriptBox["q1", "2"], "+", 
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ")"}], " ", "wturby"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "q0"}], " ", "q1"}], "+", 
             RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "wturbz"}]}], ")"}]}], 
       "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xbcg", "-", "xw2"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Cl2"}], "-", "Cr2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Liftl2", "+", "Liftr2"}], ")"}], " ", 
           RowBox[{"Cos", "[", "Alpha", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Dragl2", "+", "Dragr2"}], ")"}], " ", 
           RowBox[{"Sin", "[", "Alpha", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "Dragl2"}], "+", "Dragr2"}], ")"}], " ", "rc2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.57642620931452*^9, 3.5769934980696325`*^9, 3.5769936708496327`*^9, 
   3.576993736280633*^9, 3.5785043741074457`*^9, 3.578591505428781*^9, 
   3.5786616387870283`*^9, 3.5812368942088327`*^9, 3.5812370626827793`*^9, 
   3.581237109866279*^9, 3.581237148860033*^9, 3.58123728218429*^9, 
   3.5812373492467217`*^9, 3.581351998089341*^9, 3.581746215301584*^9, 
   3.5817463997580276`*^9, 3.5817465999430437`*^9, 3.58175500884023*^9, 
   3.58178089039257*^9, 3.5818268604216595`*^9, 3.5823513312179337`*^9, 
   3.5840250906296005`*^9, 3.5840252617853904`*^9, 3.584025380362173*^9, 
   3.5840254224405794`*^9, 3.584025458173623*^9, 3.585372038395649*^9, 
   3.5853721231851273`*^9, 3.585372245460353*^9, 3.6124578283413177`*^9, 
   3.612458097920737*^9, 3.612458179589408*^9, {3.6124583101158733`*^9, 
   3.612458315787198*^9}, 3.6131936066436014`*^9, 3.613193650362973*^9, 
   3.6131936888848248`*^9, 3.6131938456981893`*^9, 3.620711550648621*^9, 
   3.6207115930958652`*^9, 3.620844802476577*^9, 3.632773914926017*^9, 
   3.6331555913256207`*^9, 3.6515618038884864`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fin`aero`F", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "Dragfin"}]},
     {
      RowBox[{"-", "Cfin"}]},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5764262093395214`*^9, 3.576993498111633*^9, 3.5769936708786325`*^9, 
   3.576993736308633*^9, 3.578504374148448*^9, 3.5785915054597826`*^9, 
   3.57866163881503*^9, 3.5812368942328377`*^9, 3.5812370627087817`*^9, 
   3.581237109897481*^9, 3.5812371488912354`*^9, 3.5812372822154913`*^9, 
   3.5812373492623224`*^9, 3.5813519981263433`*^9, 3.581746215336587*^9, 
   3.58174639978403*^9, 3.581746599974047*^9, 3.581755008868232*^9, 
   3.581780890426572*^9, 3.5818268604546595`*^9, 3.58235133125193*^9, 
   3.584025090663603*^9, 3.5840252618183928`*^9, 3.5840253803941746`*^9, 
   3.5840254224735813`*^9, 3.5840254582056255`*^9, 3.5853720384506545`*^9, 
   3.5853721232261314`*^9, 3.5853722455113583`*^9, 3.612457828366319*^9, 
   3.6124580979497385`*^9, 3.6124581796204095`*^9, {3.6124583101448755`*^9, 
   3.6124583158161993`*^9}, 3.6131936066766047`*^9, 3.6131936503879757`*^9, 
   3.6131936889108276`*^9, 3.6131938457281895`*^9, 3.620711550671623*^9, 
   3.620711593122868*^9, 3.620844802500578*^9, 3.6327739149520187`*^9, 
   3.6331555913606243`*^9, 3.651561803916489*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fin`aero`T", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0"},
     {"0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "Mdvpsi"}], " ", 
        RowBox[{"(", 
         RowBox[{"Rb", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "q0"}], " ", "q2"}], "+", 
             RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "wturbx"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"q0", " ", "q1"}], "+", 
             RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "wturby"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["q0", "2"], "-", 
             SuperscriptBox["q1", "2"], "-", 
             SuperscriptBox["q2", "2"], "+", 
             SuperscriptBox["q3", "2"]}], ")"}], " ", "wturbz"}]}], ")"}]}], 
       "-", 
       RowBox[{"Cfin", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "xbcg"}], "+", "xwfin"}], ")"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.576426209364523*^9, 3.576993498155633*^9, 3.576993670907633*^9, 
   3.576993736337633*^9, 3.57850437418545*^9, 3.578591505493785*^9, 
   3.578661638843032*^9, 3.581236894257843*^9, 3.581237062736785*^9, 
   3.5812371099286833`*^9, 3.581237148922437*^9, 3.5812372822466936`*^9, 
   3.5812373492779226`*^9, 3.581351998160345*^9, 3.5817462153705907`*^9, 
   3.581746399809033*^9, 3.58174660000105*^9, 3.5817550088992333`*^9, 
   3.581780890460574*^9, 3.581826860490659*^9, 3.5823513313059244`*^9, 
   3.5840250906916046`*^9, 3.584025261852394*^9, 3.5840253804291763`*^9, 
   3.584025422507583*^9, 3.584025458237627*^9, 3.5853720385006595`*^9, 
   3.5853721232571344`*^9, 3.5853722455703645`*^9, 3.6124578283903203`*^9, 
   3.6124580979777403`*^9, 3.6124581796544113`*^9, {3.612458310172877*^9, 
   3.6124583158452015`*^9}, 3.6131936067146087`*^9, 3.613193650411978*^9, 
   3.61319368893583*^9, 3.6131938457561893`*^9, 3.620711550694626*^9, 
   3.620711593149871*^9, 3.6208448025255795`*^9, 3.63277391497702*^9, 
   3.6331555913946276`*^9, 3.6515618039414916`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"body`aero`F", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"-", "Dragb"}]},
      {
       RowBox[{"CLalphabv", " ", "qpress", " ", "Sbv", " ", 
        RowBox[{"Sin", "[", "Beta", "]"}]}]},
      {
       RowBox[{"-", "Liftb"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.576426209389524*^9, 3.5769934981986327`*^9, 3.576993671117633*^9, 
   3.576993736365633*^9, 3.578504374222452*^9, 3.5785915055257864`*^9, 
   3.5786616388700333`*^9, 3.581236894281848*^9, 3.5812370627657876`*^9, 
   3.581237109944284*^9, 3.581237148938038*^9, 3.581237282262295*^9, 
   3.581237349309124*^9, 3.5813519981903467`*^9, 3.581746215403594*^9, 
   3.581746399834035*^9, 3.5817466000310526`*^9, 3.581755008994239*^9, 
   3.5817808904925756`*^9, 3.5818268605226593`*^9, 3.582351331337921*^9, 
   3.584025090719606*^9, 3.584025261885396*^9, 3.5840253804631786`*^9, 
   3.5840254225405855`*^9, 3.584025458271629*^9, 3.585372038538663*^9, 
   3.585372123323141*^9, 3.585372245615369*^9, 3.6124578284153223`*^9, 
   3.6124580980067415`*^9, 3.6124581796934137`*^9, {3.6124583102018785`*^9, 
   3.6124583158742027`*^9}, 3.613193606747612*^9, 3.6131936504399805`*^9, 
   3.6131936889608326`*^9, 3.613193845785189*^9, 3.620711550718628*^9, 
   3.6207115931768737`*^9, 3.620844802550581*^9, 3.6327739150030212`*^9, 
   3.6331555914316316`*^9, 3.651561803966494*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"body`aero`T", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5764262094125257`*^9, 3.5769934982376328`*^9, 3.576993671207633*^9, 
   3.576993736394633*^9, 3.578504374260454*^9, 3.5785915055597887`*^9, 
   3.578661638898035*^9, 3.5812368943068523`*^9, 3.58123706279179*^9, 
   3.581237109975486*^9, 3.58123714896924*^9, 3.581237282293497*^9, 
   3.581237349340325*^9, 3.581351998224349*^9, 3.581746215436597*^9, 
   3.5817463998590374`*^9, 3.581746600058056*^9, 3.5817550090332413`*^9, 
   3.5817808905255775`*^9, 3.581826860554659*^9, 3.5823513313749175`*^9, 
   3.5840250907476077`*^9, 3.584025261918398*^9, 3.58402538049518*^9, 
   3.584025422572587*^9, 3.5840254583076305`*^9, 3.5853720386146708`*^9, 
   3.585372123351144*^9, 3.5853722456903763`*^9, 3.6124578284393234`*^9, 
   3.6124580980347433`*^9, 3.6124581797314157`*^9, {3.6124583102298803`*^9, 
   3.612458315903205*^9}, 3.6131936067846155`*^9, 3.613193650464983*^9, 
   3.613193688985835*^9, 3.613193845812189*^9, 3.6207115507416306`*^9, 
   3.620711593202876*^9, 3.6208448025755825`*^9, 3.632773915028023*^9, 
   3.6331555914626346`*^9, 3.6515618039924965`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"engine`F", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"thrustl", " ", 
         RowBox[{"Cos", "[", "deythrustl", "]"}], " ", 
         RowBox[{"Cos", "[", "dezthrustr", "]"}]}], "+", 
        RowBox[{"thrustr", " ", 
         RowBox[{"Cos", "[", "deythrustr", "]"}], " ", 
         RowBox[{"Cos", "[", "dezthrustr", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "thrustl"}], " ", 
         RowBox[{"Cos", "[", "dezthrustr", "]"}], " ", 
         RowBox[{"Sin", "[", "deythrustl", "]"}]}], "-", 
        RowBox[{"thrustr", " ", 
         RowBox[{"Cos", "[", "dezthrustr", "]"}], " ", 
         RowBox[{"Sin", "[", "deythrustr", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "thrustl"}], " ", 
         RowBox[{"Cos", "[", "deythrustl", "]"}], " ", 
         RowBox[{"Sin", "[", "dezthrustr", "]"}]}], "-", 
        RowBox[{"thrustr", " ", 
         RowBox[{"Cos", "[", "deythrustr", "]"}], " ", 
         RowBox[{"Sin", "[", "dezthrustr", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5764262094375267`*^9, 3.5769934982836328`*^9, 3.5769936712706327`*^9, 
   3.5769937364226327`*^9, 3.5785043742974567`*^9, 3.5785915055927906`*^9, 
   3.5786616389250364`*^9, 3.5812368943318577`*^9, 3.581237062818793*^9, 
   3.581237109991087*^9, 3.5812371489848413`*^9, 3.5812372823246984`*^9, 
   3.581237349355925*^9, 3.5813519982563505`*^9, 3.5817462154696007`*^9, 
   3.58174639988404*^9, 3.581746600085058*^9, 3.5817550090692434`*^9, 
   3.5817808905605793`*^9, 3.581826860590659*^9, 3.582351331402915*^9, 
   3.584025090774609*^9, 3.5840252620434055`*^9, 3.5840253806031866`*^9, 
   3.584025422605589*^9, 3.5840254583436327`*^9, 3.585372038684678*^9, 
   3.5853721234241505`*^9, 3.585372245745382*^9, 3.612457828464325*^9, 
   3.6124580980637445`*^9, 3.6124581797614174`*^9, {3.6124583102578816`*^9, 
   3.612458315932206*^9}, 3.613193606817619*^9, 3.613193650490986*^9, 
   3.6131936890128374`*^9, 3.613193845840189*^9, 3.6207115507656326`*^9, 
   3.620711593228879*^9, 3.6208448025995836`*^9, 3.632773915054024*^9, 
   3.6331555915116396`*^9, 3.651561804017499*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"engine`T", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"yeng", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"thrustl", " ", 
           RowBox[{"Cos", "[", "deythrustl", "]"}], " ", 
           RowBox[{"Sin", "[", "dezthrustl", "]"}]}], "-", 
          RowBox[{"thrustr", " ", 
           RowBox[{"Cos", "[", "deythrustr", "]"}], " ", 
           RowBox[{"Sin", "[", "dezthrustr", "]"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xbcg", "-", "xeng"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"thrustl", " ", 
           RowBox[{"Cos", "[", "deythrustl", "]"}], " ", 
           RowBox[{"Sin", "[", "dezthrustl", "]"}]}], "+", 
          RowBox[{"thrustr", " ", 
           RowBox[{"Cos", "[", "deythrustr", "]"}], " ", 
           RowBox[{"Sin", "[", "dezthrustr", "]"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xbcg", "-", "xeng"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"thrustl", " ", 
           RowBox[{"Cos", "[", "dezthrustl", "]"}], " ", 
           RowBox[{"Sin", "[", "deythrustl", "]"}]}], "+", 
          RowBox[{"thrustr", " ", 
           RowBox[{"Cos", "[", "dezthrustr", "]"}], " ", 
           RowBox[{"Sin", "[", "deythrustr", "]"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5764262094615283`*^9, 3.576993498322633*^9, 3.5769936713076324`*^9, 
   3.576993736450633*^9, 3.5785043743344584`*^9, 3.5785915056287923`*^9, 
   3.578661638953038*^9, 3.581236894356862*^9, 3.5812370628457956`*^9, 
   3.5812371100222893`*^9, 3.581237149016043*^9, 3.5812372823402996`*^9, 
   3.581237349402727*^9, 3.5813519983803577`*^9, 3.5817462155076046`*^9, 
   3.581746399909043*^9, 3.581746600116061*^9, 3.581755009099245*^9, 
   3.5817808905935817`*^9, 3.581826860622659*^9, 3.5823513314369116`*^9, 
   3.584025090802611*^9, 3.5840252620854073`*^9, 3.5840253806411886`*^9, 
   3.5840254227155952`*^9, 3.584025458377635*^9, 3.5853720388526945`*^9, 
   3.5853721234721556`*^9, 3.5853722458053875`*^9, 3.612457828489326*^9, 
   3.6124580980927467`*^9, 3.6124581797914195`*^9, {3.6124583102868834`*^9, 
   3.612458315960208*^9}, 3.613193606855623*^9, 3.613193650514988*^9, 
   3.6131936890398407`*^9, 3.6131938458691893`*^9, 3.620711550789635*^9, 
   3.6207115932568817`*^9, 3.620844802624585*^9, 3.6327739150800257`*^9, 
   3.633155591545643*^9, 3.6515618040425014`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aircraft`F", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Dragb"}], "-", "Dragfin", "-", "Dragl1", "-", 
          "Dragl2", "-", "Dragr1", "-", "Dragr2"}], ")"}], " ", 
        RowBox[{"Cos", "[", "Alpha", "]"}], " ", 
        RowBox[{"Cos", "[", "Beta", "]"}]}], "+", 
       RowBox[{"thrustl", " ", 
        RowBox[{"Cos", "[", "deythrustl", "]"}], " ", 
        RowBox[{"Cos", "[", "dezthrustr", "]"}]}], "+", 
       RowBox[{"thrustr", " ", 
        RowBox[{"Cos", "[", "deythrustr", "]"}], " ", 
        RowBox[{"Cos", "[", "dezthrustr", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Liftb"}], "-", "Liftl1", "-", "Liftl2", "-", "Liftr1",
           "-", "Liftr2"}], ")"}], " ", 
        RowBox[{"Sin", "[", "Alpha", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "Alpha", "]"}], " ", 
        RowBox[{"Sin", "[", "Beta", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Cfin"}], "-", 
          RowBox[{"Cydeelev", " ", "qpress", " ", "S2", " ", 
           RowBox[{"(", 
            RowBox[{"thetaal2", "-", "thetaar2"}], ")"}]}], "+", 
          RowBox[{"CLalphabv", " ", "qpress", " ", "Sbv", " ", 
           RowBox[{"Sin", "[", "Beta", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Dragb"}], "-", "Dragfin", "-", "Dragl1", "-", 
          "Dragl2", "-", "Dragr1", "-", "Dragr2"}], ")"}], " ", 
        RowBox[{"Sin", "[", "Beta", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "Beta", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Cfin"}], "-", 
          RowBox[{"Cydeelev", " ", "qpress", " ", "S2", " ", 
           RowBox[{"(", 
            RowBox[{"thetaal2", "-", "thetaar2"}], ")"}]}], "+", 
          RowBox[{"CLalphabv", " ", "qpress", " ", "Sbv", " ", 
           RowBox[{"Sin", "[", "Beta", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"thrustl", " ", 
        RowBox[{"Cos", "[", "dezthrustr", "]"}], " ", 
        RowBox[{"Sin", "[", "deythrustl", "]"}]}], "-", 
       RowBox[{"thrustr", " ", 
        RowBox[{"Cos", "[", "dezthrustr", "]"}], " ", 
        RowBox[{"Sin", "[", "deythrustr", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Liftb"}], "-", "Liftl1", "-", "Liftl2", "-", "Liftr1",
           "-", "Liftr2"}], ")"}], " ", 
        RowBox[{"Cos", "[", "Alpha", "]"}]}], "-", 
       RowBox[{"kground", " ", "zcg", " ", 
        RowBox[{"onPositive", "[", "zcg", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Dragb"}], "-", "Dragfin", "-", "Dragl1", "-", 
          "Dragl2", "-", "Dragr1", "-", "Dragr2"}], ")"}], " ", 
        RowBox[{"Cos", "[", "Beta", "]"}], " ", 
        RowBox[{"Sin", "[", "Alpha", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "Alpha", "]"}], " ", 
        RowBox[{"Sin", "[", "Beta", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Cfin"}], "-", 
          RowBox[{"Cydeelev", " ", "qpress", " ", "S2", " ", 
           RowBox[{"(", 
            RowBox[{"thetaal2", "-", "thetaar2"}], ")"}]}], "+", 
          RowBox[{"CLalphabv", " ", "qpress", " ", "Sbv", " ", 
           RowBox[{"Sin", "[", "Beta", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"thrustl", " ", 
        RowBox[{"Cos", "[", "deythrustl", "]"}], " ", 
        RowBox[{"Sin", "[", "dezthrustr", "]"}]}], "-", 
       RowBox[{"thrustr", " ", 
        RowBox[{"Cos", "[", "deythrustr", "]"}], " ", 
        RowBox[{"Sin", "[", "dezthrustr", "]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5764262094865294`*^9, 3.5769934983626328`*^9, 3.5769936713386326`*^9, 
   3.576993736480633*^9, 3.5785043744244633`*^9, 3.5785915056607943`*^9, 
   3.5786616389810395`*^9, 3.581236894382868*^9, 3.581237062871798*^9, 
   3.581237110053491*^9, 3.581237149031644*^9, 3.581237282371502*^9, 
   3.5812373494183273`*^9, 3.5813519984133596`*^9, 3.5817462155386076`*^9, 
   3.5817463999350452`*^9, 3.5817466001450644`*^9, 3.5817550091352468`*^9, 
   3.5817808906235833`*^9, 3.5818268606576595`*^9, 3.582351331470908*^9, 
   3.5840250908296127`*^9, 3.5840252621244097`*^9, 3.5840253806781907`*^9, 
   3.5840254227615976`*^9, 3.584025458410637*^9, 3.5853720389327025`*^9, 
   3.585372123527161*^9, 3.585372245852392*^9, 3.6124578285143275`*^9, 
   3.612458098121748*^9, 3.612458179824421*^9, {3.612458310315885*^9, 
   3.6124583159892097`*^9}, 3.613193606889626*^9, 3.6131936505419908`*^9, 
   3.6131936890658426`*^9, 3.613193845897189*^9, 3.6207115508136377`*^9, 
   3.6207115932828836`*^9, 3.6208448026495867`*^9, 3.632773915109027*^9, 
   3.633155591583647*^9, 3.6515618040685043`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aircraft`T", "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Liftl1", "-", "Liftr1"}], ")"}], " ", "rc1"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Liftl2", "-", "Liftr2"}], ")"}], " ", "rc2"}], "+", 
       RowBox[{"yeng", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"thrustl", " ", 
           RowBox[{"Cos", "[", "deythrustl", "]"}], " ", 
           RowBox[{"Sin", "[", "dezthrustl", "]"}]}], "-", 
          RowBox[{"thrustr", " ", 
           RowBox[{"Cos", "[", "deythrustr", "]"}], " ", 
           RowBox[{"Sin", "[", "dezthrustr", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pb", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["q0", "2"], "+", 
             SuperscriptBox["q1", "2"], "-", 
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ")"}], " ", "wturbx"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"q1", " ", "q2"}], "-", 
             RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "wturby"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"q0", " ", "q2"}], "+", 
             RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "wturbz"}]}], ")"}], 
        " ", 
        SubscriptBox["M", 
         OverscriptBox["\[EmptySet]", "."]]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "Mdvtheta"}], " ", 
        RowBox[{"(", 
         RowBox[{"Qb", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"q1", " ", "q2"}], "+", 
             RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "wturbx"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["q0", "2"], "-", 
             SuperscriptBox["q1", "2"], "+", 
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ")"}], " ", "wturby"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "q0"}], " ", "q1"}], "+", 
             RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "wturbz"}]}], ")"}]}], 
       "+", 
       RowBox[{"qpress", " ", "S1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Cmde1"}], " ", "thetaal1"}], "-", 
          RowBox[{"Cmde12", " ", "thetaal12"}], "-", 
          RowBox[{"Cmde1", " ", "thetaar1"}], "-", 
          RowBox[{"Cmde12", " ", "thetaar12"}], "-", 
          FractionBox[
           RowBox[{"smc", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"CLde1", " ", "thetaal1"}], "+", 
              RowBox[{"CLde12", " ", "thetaal12"}], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"CLift", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Alpha", " ", "dah1"}], "-", "ia1"}], ",", 
                 "CLalpha1e", ",", "ap1", ",", "an1", ",", "awp1", ",", 
                 "awn1"}], "]"}]}]}], ")"}]}], 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["en", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"v", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "dM"}], ")"}], " ", "vM"}]}], ")"}]}], 
                 RowBox[{"dM", " ", "vM"}]]}]]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"smc", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"CLde1", " ", "thetaar1"}], "+", 
              RowBox[{"CLde12", " ", "thetaar12"}], "+", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"CLift", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Alpha", " ", "dah1"}], "-", "ia1"}], ",", 
                 "CLalpha1e", ",", "ap1", ",", "an1", ",", "awp1", ",", 
                 "awn1"}], "]"}]}]}], ")"}]}], 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["en", 
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"v", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "dM"}], ")"}], " ", "vM"}]}], ")"}]}], 
                 RowBox[{"dM", " ", "vM"}]]}]]}], ")"}]}]], "+", 
          RowBox[{"CMoment", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Alpha", " ", "dah1"}], "-", "ia1"}], ",", "Cm01", ",", 
            "Cmfs1", ",", "ap1", ",", "an1", ",", "awp1", ",", "awn1"}], 
           "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xbcg", "-", "xw1"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Liftl1", "+", "Liftr1"}], ")"}], " ", 
           RowBox[{"Cos", "[", "Alpha", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Dragl1", "+", "Dragr1"}], ")"}], " ", 
           RowBox[{"Sin", "[", "Alpha", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xbcg", "-", "xw2"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Cl2"}], "-", "Cr2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Liftl2", "+", "Liftr2"}], ")"}], " ", 
           RowBox[{"Cos", "[", "Alpha", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Dragl2", "+", "Dragr2"}], ")"}], " ", 
           RowBox[{"Sin", "[", "Alpha", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xbcg", "-", "xeng"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"thrustl", " ", 
           RowBox[{"Cos", "[", "deythrustl", "]"}], " ", 
           RowBox[{"Sin", "[", "dezthrustl", "]"}]}], "+", 
          RowBox[{"thrustr", " ", 
           RowBox[{"Cos", "[", "deythrustr", "]"}], " ", 
           RowBox[{"Sin", "[", "dezthrustr", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Dragl1"}], "+", "Dragr1"}], ")"}], " ", "rc1"}], "+", 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "Dragl2"}], "+", "Dragr2"}], ")"}], " ", "rc2"}], "-", 
       
       RowBox[{"Mdvpsi", " ", 
        RowBox[{"(", 
         RowBox[{"Rb", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "q0"}], " ", "q2"}], "+", 
             RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "wturbx"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"q0", " ", "q1"}], "+", 
             RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "wturby"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["q0", "2"], "-", 
             SuperscriptBox["q1", "2"], "-", 
             SuperscriptBox["q2", "2"], "+", 
             SuperscriptBox["q3", "2"]}], ")"}], " ", "wturbz"}]}], ")"}]}], 
       "-", 
       RowBox[{"Cfin", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "xbcg"}], "+", "xwfin"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xbcg", "-", "xeng"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"thrustl", " ", 
           RowBox[{"Cos", "[", "dezthrustl", "]"}], " ", 
           RowBox[{"Sin", "[", "deythrustl", "]"}]}], "+", 
          RowBox[{"thrustr", " ", 
           RowBox[{"Cos", "[", "dezthrustr", "]"}], " ", 
           RowBox[{"Sin", "[", "deythrustr", "]"}]}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5764262095125313`*^9, 3.5769934983996325`*^9, 3.576993671368633*^9, 
   3.5769937365106325`*^9, 3.578504374466466*^9, 3.578591505694796*^9, 
   3.578661639010041*^9, 3.581236894523896*^9, 3.581237062898801*^9, 
   3.581237110069092*^9, 3.581237149062846*^9, 3.5812372824027033`*^9, 
   3.5812373494495287`*^9, 3.5813519984433613`*^9, 3.5817462155716105`*^9, 
   3.5817463999600477`*^9, 3.5817466001770678`*^9, 3.581755009166249*^9, 
   3.5817808906595855`*^9, 3.581826860780659*^9, 3.5823513315389013`*^9, 
   3.584025090863614*^9, 3.5840252621554117`*^9, 3.584025380711193*^9, 
   3.5840254227976*^9, 3.5840254584456387`*^9, 3.5853720390897183`*^9, 
   3.585372123556164*^9, 3.5853722459284*^9, 3.612457828540329*^9, 
   3.61245809815075*^9, 3.6124581798574233`*^9, {3.6124583103458867`*^9, 
   3.612458316020211*^9}, 3.613193606921629*^9, 3.6131936505669937`*^9, 
   3.613193689092846*^9, 3.613193845927189*^9, 3.62071155083864*^9, 
   3.620711593310887*^9, 3.620844802675588*^9, 3.632773915135029*^9, 
   3.6331555916306515`*^9, 3.651561804096507*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assembling all the rudder forces and aerodynamic stiffnesses", \
"Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expression", " ", ":=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"exprW1", ",", "exprW2", ",", "exprFin"}], "}"}], ",", "1"}], 
    "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expression", " ", "//", "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"cal1", 
     RowBox[{"CLde1", " ", "lc1", " ", "qpress", " ", "S1", " ", 
      RowBox[{"(", 
       RowBox[{"Alpha", "+", "thetaal1"}], ")"}]}]},
    {"car1", 
     RowBox[{"CLde1", " ", "lc1", " ", "qpress", " ", "S1", " ", 
      RowBox[{"(", 
       RowBox[{"Alpha", "+", "thetaar1"}], ")"}]}]},
    {"cal12", 
     RowBox[{"CLde12", " ", "lc12", " ", "qpress", " ", "S1", " ", 
      RowBox[{"(", 
       RowBox[{"Alpha", "+", "thetaal12"}], ")"}]}]},
    {"car12", 
     RowBox[{"CLde12", " ", "lc12", " ", "qpress", " ", "S1", " ", 
      RowBox[{"(", 
       RowBox[{"Alpha", "+", "thetaar12"}], ")"}]}]},
    {"cal2", 
     RowBox[{"CLalpha2e", " ", "lc2", " ", "qpress", " ", "S2", " ", 
      RowBox[{"(", 
       RowBox[{"Alpha", "+", "thetaal2"}], ")"}]}]},
    {"car2", 
     RowBox[{"CLalpha2e", " ", "lc2", " ", "qpress", " ", "S2", " ", 
      RowBox[{"(", 
       RowBox[{"Alpha", "+", "thetaar2"}], ")"}]}]},
    {"cfin", 
     RowBox[{"CLdefin", " ", "lcfin", " ", "qpress", " ", "Sfin", " ", 
      RowBox[{"(", 
       RowBox[{"Beta", "+", "thetafin"}], ")"}]}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.576426209546533*^9, 3.576993498457633*^9, 3.576993671407633*^9, 
   3.576993736565633*^9, 3.5785043745134687`*^9, 3.5785915057377987`*^9, 
   3.5786616390550437`*^9, 3.581236894621916*^9, 3.5812370629358044`*^9, 
   3.581237110100294*^9, 3.581237149094048*^9, 3.5812372825431128`*^9, 
   3.581237349480729*^9, 3.581351998478363*^9, 3.581746215613615*^9, 
   3.581746399994051*^9, 3.581746600218072*^9, 3.581755009207251*^9, 
   3.5817808907775917`*^9, 3.5818268608246593`*^9, 3.5823513316118937`*^9, 
   3.584025090979621*^9, 3.5840252621994143`*^9, 3.5840253807571955`*^9, 
   3.5840254228396025`*^9, 3.5840254585656457`*^9, 3.585372039167726*^9, 
   3.5853721236441727`*^9, 3.5853722460124083`*^9, 3.6124578285843315`*^9, 
   3.612458098195752*^9, 3.612458179905426*^9, {3.612458310390889*^9, 
   3.612458316068214*^9}, 3.613193606967634*^9, 3.613193650604997*^9, 
   3.613193689128849*^9, 3.6131938459641895`*^9, 3.6207115508726435`*^9, 
   3.6207115933468904`*^9, 3.6208448027175903`*^9, 3.632773915178031*^9, 
   3.633155591731662*^9, 3.651561804134511*^9}]
}, Open  ]],

Cell["The wing spans can be calculated as:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b1", "=", 
   SqrtBox[
    RowBox[{"S1", " ", "AR1"}]]}], ";"}]], "Text",
 CellChangeTimes->{3.6124576154081383`*^9}],

Cell["and", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b2", "=", 
   SqrtBox[
    RowBox[{"S2", " ", "AR2"}]]}], ";"}]], "Text",
 CellChangeTimes->{3.6124576177992754`*^9}],

Cell["Roll damping term", "Text"],

Cell[BoxData[
 RowBox[{
  SubscriptBox[
   SubscriptBox["M", 
    OverscriptBox[
     RowBox[{"\[EmptySet]", " "}], "."]], "expr"], " ", ":=", " ", 
  RowBox[{"q", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"S1", "  ", "CLalpha1e", " ", 
      SuperscriptBox["b1", "2"]}], "+", 
     RowBox[{"S2", "  ", "CLalpha2e", " ", 
      SuperscriptBox["b2", "2"]}]}], ")"}], 
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.7", "/", "2"}], ")"}], "2"], 
     RowBox[{"v", "+", "0.1"}]], ")"}]}]}]], "Input",
 CellChangeTimes->{3.5840152882869387`*^9, 3.58401534896441*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["M", 
   OverscriptBox[
    RowBox[{"\[EmptySet]", " "}], "."]], " ", ":=", " ", 
  RowBox[{"q", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"S1", "  ", "CLalpha1e", " ", 
      SuperscriptBox["b1", "2"]}], "+", 
     RowBox[{"S2", "  ", "CLalpha2e", " ", 
      SuperscriptBox["b2", "2"]}]}], ")"}], 
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.7", "/", "2"}], ")"}], "2"], 
     RowBox[{"v", "+", "0.1"}]], ")"}]}]}]], "Input",
 CellChangeTimes->{3.5840152891749897`*^9, 3.5840153477223387`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["M1", 
   OverscriptBox[
    RowBox[{"\[EmptySet]", " "}], "."]], " ", ":=", " ", 
  RowBox[{"q", " ", 
   RowBox[{"(", 
    RowBox[{"S1", "  ", "CLalpha1e", " ", 
     SuperscriptBox["b1", "2"]}], ")"}], 
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.7", "/", "2"}], ")"}], "2"], 
     RowBox[{"v", "+", "0.1"}]], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.53444083075*^9, 3.53444083896875*^9}, 
   3.5840152929602065`*^9}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["M2", 
   OverscriptBox[
    RowBox[{"\[EmptySet]", " "}], "."]], " ", ":=", " ", 
  RowBox[{"q", " ", 
   RowBox[{"(", 
    RowBox[{"S2", "  ", "CLalpha2e", " ", 
     SuperscriptBox["b2", "2"]}], ")"}], 
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.7", "/", "2"}], ")"}], "2"], 
     RowBox[{"v", "+", "0.1"}]], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.534440832171875*^9, 3.534440843859375*^9}, 
   3.5840153430530715`*^9}],

Cell["Pitch damping term", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["M", 
     OverscriptBox["\[Theta]", 
      RowBox[{".", " "}]]], "expr"], ":=", " ", 
   RowBox[{"q", " ", "S2", " ", "CLalpha2e", " ", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"xw2", "-", "xbcg"}], ")"}], "2"], 
     RowBox[{"v", "+", "0.1"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.534440790390625*^9, 3.534440791015625*^9}, 
   3.5840153414729815`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["M1", 
     OverscriptBox["\[Theta]", 
      RowBox[{".", " "}]]], "expr"], ":=", " ", 
   RowBox[{"q", " ", "S1", " ", "CLalpha2e", " ", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"xw1", "-", "xbcg"}], ")"}], "2"], 
     RowBox[{"v", "+", "0.1"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.534440811328125*^9, 3.53444081909375*^9}, 
   3.5840153391768494`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["M2", 
     OverscriptBox["\[Theta]", 
      RowBox[{".", " "}]]], "expr"], ":=", " ", 
   RowBox[{"q", " ", "S2", " ", "CLalpha2e", " ", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"xw2", "-", "xbcg"}], ")"}], "2"], 
     RowBox[{"v", "+", "0.1"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{3.534440809515625*^9, 3.584015336296685*^9}],

Cell["Yaw damping term", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    SubscriptBox["M", 
     OverscriptBox["\[Psi]", "."]], 
    RowBox[{" ", "expr"}]], ":=", " ", 
   RowBox[{"q", " ", "Sfin", " ", "CLalphafin", " ", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"xwfin", "-", "xbcg"}], ")"}], "2"], 
     RowBox[{"v", "+", "0.1"}]]}]}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculation of aerodynamic forces", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dragl1expr", ":=", 
   RowBox[{"Cdl1", " ", "S1", " ", "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dragr1expr", ":=", 
   RowBox[{"Cdr1", " ", "S1", " ", "q"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Liftl1expr", ":=", 
   RowBox[{"CLl1", " ", "S1", " ", "q"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Liftr1expr", ":=", 
   RowBox[{"CLr1", " ", "S1", " ", "q"}]}], ";"}], "\n", 
 RowBox[{"Moment1", ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Cml1", "+", "Cmr1"}], ")"}], "S1", " ", 
   "q"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Momentx1", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"CLl1", "-", "CLr1"}], ")"}], 
          RowBox[{"Cos", "[", "alpha", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Cdl1", "-", "Cdr1"}], ")"}], 
          RowBox[{"Sin", "[", "alpha", "]"}]}]}], ")"}], "rc2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CLde12", " ", "del12"}], "-", 
         RowBox[{"CLde12", " ", "del12"}]}], " ", ")"}], 
       RowBox[{"(", 
        RowBox[{"rc12", "-", "rc2"}], ")"}]}]}], ")"}], " ", "S2", " ", 
    "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dragl2expr", ":=", 
   RowBox[{"Cdl2", " ", "S2", " ", "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dragr2expr", ":=", 
   RowBox[{"Cdr2", " ", "S2", " ", "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Liftl2expr", ":=", 
   RowBox[{"CLl2", " ", "S2", " ", "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Liftr2expr", ":=", 
   RowBox[{"CLr2", " ", "S2", " ", "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cl2expr", ":=", 
   RowBox[{"CLl2", " ", "S2", " ", "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cr2expr", ":=", 
   RowBox[{
    RowBox[{"-", "CLr2"}], " ", "S2", " ", "q"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Momentx2", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"CLl2", "-", "CLr2"}], ")"}], 
       RowBox[{"Cos", "[", "alpha", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Cdl2", "-", "Cdr2"}], ")"}], 
       RowBox[{"Sin", "[", "alpha", "]"}]}]}], ")"}], "rc2", "  ", "S2", " ", 
    "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dragfinexpr", ":=", 
   RowBox[{"Cd0fin", " ", "Sfin", " ", "q"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cfinexpr", ":=", 
   RowBox[{"CLfin", " ", "Sfin", " ", "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dragbexpr", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cd0b", " ", "Sbh"}], " ", "+", 
      RowBox[{"CdW", " ", "S1"}]}], ")"}], "q"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Liftbexpr", ":=", 
   RowBox[{"CLbh", " ", "Sbh", " ", "q"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cbody", ":=", 
   RowBox[{"CLbv", " ", "Sbv", " ", "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cy2", ":=", 
   RowBox[{"Cydeelev", " ", 
    RowBox[{"(", 
     RowBox[{"del2", "-", "der2"}], ")"}], "S2", " ", "q"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.518678260109375*^9, 3.518678260109375*^9}, {
   3.53210692278125*^9, 3.532106936453125*^9}, {3.532107825921875*^9, 
   3.532107951296875*^9}, 3.534320678484375*^9, {3.53448101940625*^9, 
   3.534481026546875*^9}, {3.5344813126875*^9, 3.534481315359375*^9}, {
   3.5344814064375*^9, 3.534481408640625*^9}, {3.53448152559375*^9, 
   3.53448153346875*^9}, {3.534481648609375*^9, 3.53448165109375*^9}, 
   3.538223075698704*^9, {3.538288944537979*^9, 3.538288968912823*^9}, {
   3.5382890143656573`*^9, 3.538289015318776*^9}, {3.5390158761555*^9, 
   3.53901589337425*^9}, {3.539015924639875*^9, 3.539015941343*^9}, 
   3.5411478835688753`*^9, {3.554797755390625*^9, 3.554797819609375*^9}, {
   3.55479785471875*^9, 3.554797857546875*^9}, {3.58174456145402*^9, 
   3.5817445743860197`*^9}, {3.581745543475408*^9, 3.5817455593829985`*^9}, {
   3.6131916803879952`*^9, 3.613191726620618*^9}, {3.6131917909810534`*^9, 
   3.6131917915501103`*^9}, {3.613191838430798*^9, 3.613191874287383*^9}, {
   3.6131919447794313`*^9, 3.6131919667696304`*^9}, 3.6131920220361567`*^9, {
   3.6131920651404667`*^9, 3.613192137129665*^9}, {3.613192341640114*^9, 
   3.613192363485298*^9}, {3.61319258823077*^9, 3.613192629408888*^9}, 
   3.613192680898036*^9, {3.613193168051747*^9, 3.613193369454885*^9}, {
   3.6132347840237*^9, 3.613234892190887*^9}}],

Cell["\<\
The wing drag is a combination of parasitic drag and induced drag\
\>", "Text",
 CellChangeTimes->{{3.664890504912095*^9, 3.664890504987345*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cdl1", "=", 
   RowBox[{
    RowBox[{"Cd01", "/", "2"}], "+", "Cdil1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cdr1", "=", 
   RowBox[{
    RowBox[{"Cd01", "/", "2"}], "+", "Cdir1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cdl2", "=", 
   RowBox[{
    RowBox[{"Cd02", "/", "2"}], "+", "Cdil2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cdr2", "=", 
   RowBox[{
    RowBox[{"Cd02", "/", "2"}], "+", "Cdir2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.518678290234375*^9, 3.518678290234375*^9}, {
  3.534481316296875*^9, 3.534481316859375*^9}, {3.5344814099375*^9, 
  3.534481410421875*^9}, {3.5344815371875*^9, 3.534481537625*^9}, {
  3.534481651828125*^9, 3.534481652234375*^9}, {3.538806117322697*^9, 
  3.5388061365725737`*^9}}],

Cell["The dynamic pressure is calculated as", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["q", "expr"], " ", ":=", " ", 
   RowBox[{"rho", " ", 
    FractionBox[
     SuperscriptBox["v", "2"], "2"]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"epsv", "=", "0.0001"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"uw", ",", "uv", ",", "ww"}], "}"}], "=", 
  RowBox[{
   SubscriptBox["L", "VB"], ".", 
   RowBox[{"{", 
    RowBox[{"vturbx", ",", "vturby", ",", "vturbz"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6207110107536373`*^9, 3.620711151888749*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q0", "2"], "+", 
       SuperscriptBox["q1", "2"], "-", 
       SuperscriptBox["q2", "2"], "-", 
       SuperscriptBox["q3", "2"]}], ")"}], " ", "vturbx"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q1", " ", "q2"}], "-", 
       RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "vturby"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q0", " ", "q2"}], "+", 
       RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "vturbz"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q1", " ", "q2"}], "+", 
       RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "vturbx"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q0", "2"], "-", 
       SuperscriptBox["q1", "2"], "+", 
       SuperscriptBox["q2", "2"], "-", 
       SuperscriptBox["q3", "2"]}], ")"}], " ", "vturby"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "q0"}], " ", "q1"}], "+", 
       RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "vturbz"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "q0"}], " ", "q2"}], "+", 
       RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "vturbx"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q0", " ", "q1"}], "+", 
       RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "vturby"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q0", "2"], "-", 
       SuperscriptBox["q1", "2"], "-", 
       SuperscriptBox["q2", "2"], "+", 
       SuperscriptBox["q3", "2"]}], ")"}], " ", "vturbz"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6207115510056567`*^9, 3.6207115934999056`*^9, 
  3.6208448028745995`*^9, 3.632773915314039*^9, 3.633155591922681*^9, 
  3.651561804287526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"pw", ",", "qw", ",", "rw"}], "}"}], "=", 
  RowBox[{
   SubscriptBox["L", "VB"], ".", 
   RowBox[{"{", 
    RowBox[{"wturbx", ",", "wturby", ",", "wturbz"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6207110107536373`*^9, 3.620711151888749*^9}, {
   3.620711363295888*^9, 3.620711383240882*^9}, 3.6207115896005163`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q0", "2"], "+", 
       SuperscriptBox["q1", "2"], "-", 
       SuperscriptBox["q2", "2"], "-", 
       SuperscriptBox["q3", "2"]}], ")"}], " ", "wturbx"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q1", " ", "q2"}], "-", 
       RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "wturby"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q0", " ", "q2"}], "+", 
       RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "wturbz"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q1", " ", "q2"}], "+", 
       RowBox[{"q0", " ", "q3"}]}], ")"}], " ", "wturbx"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q0", "2"], "-", 
       SuperscriptBox["q1", "2"], "+", 
       SuperscriptBox["q2", "2"], "-", 
       SuperscriptBox["q3", "2"]}], ")"}], " ", "wturby"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "q0"}], " ", "q1"}], "+", 
       RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "wturbz"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "q0"}], " ", "q2"}], "+", 
       RowBox[{"q1", " ", "q3"}]}], ")"}], " ", "wturbx"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q0", " ", "q1"}], "+", 
       RowBox[{"q2", " ", "q3"}]}], ")"}], " ", "wturby"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q0", "2"], "-", 
       SuperscriptBox["q1", "2"], "-", 
       SuperscriptBox["q2", "2"], "+", 
       SuperscriptBox["q3", "2"]}], ")"}], " ", "wturbz"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.620711551028659*^9, 3.6207115935259085`*^9, 
  3.620844802899601*^9, 3.63277391534004*^9, 3.6331555919626846`*^9, 
  3.651561804313529*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ube", "=", 
   RowBox[{"Ub", "+", "uw"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vbe", "=", 
   RowBox[{"Vb", "+", "uw"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Wbe", "=", 
   RowBox[{"Wb", "+", "ww"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pbe", "=", 
   RowBox[{"Pb", "+", "pw"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qbe", "=", 
   RowBox[{"Qb", "+", "qw"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rbe", "=", 
   RowBox[{"Rb", "+", "rw"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.5194423393125*^9, {3.522045582708578*^9, 3.5220456211974216`*^9}, {
   3.620711165217082*^9, 3.6207111732588863`*^9}, {3.6207113172702856`*^9, 
   3.6207113399085493`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["v", "expr"], "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["Ube", "2"], "+", 
     SuperscriptBox["Vbe", "2"], "+", 
     SuperscriptBox["Wbe", "2"], "+", "epsv"}]]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "expr"], " ", ":=", " ", 
   RowBox[{"ArcSin", "[", 
    RowBox[{"Wbe", ",", 
     SubscriptBox["v", "expr"]}], "]"}]}], ";"}]], "Text",
 CellChangeTimes->{{3.518678491515625*^9, 3.518678514734375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "expr"], " ", ":=", " ", 
   RowBox[{"Atan2L", "[", 
    RowBox[{"Wbe", ",", 
     RowBox[{"Ube", "+", "epsv"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Beta]", "expr"], " ", ":=", " ", 
   RowBox[{"Atan2L", "[", 
    RowBox[{"Vbe", ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["Ube", "2"], "+", 
       SuperscriptBox["Wbe", "2"], "+", "epsv"}]]}], " ", "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Beta]", "expr"], " ", ":=", " ", 
   RowBox[{"ArcSin", "[", 
    RowBox[{"Vb", "/", 
     SubscriptBox["v", "expr"]}], "]"}]}], ";", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Etkin", " ", 
     RowBox[{"(", 
      RowBox[{"4.3", ",", "3"}], ")"}]}], ",", " ", 
    RowBox[{"and", " ", "Stevens", " ", "and", " ", "Lewis", " ", 
     RowBox[{"(", 
      RowBox[{"2.3", "-", "6"}], ")"}]}]}], ")"}]}]], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LogisticFunc", "[", "x_", "]"}], ":=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     SuperscriptBox["en", 
      RowBox[{"-", " ", "x"}]]}]]}], ";"}]], "Input",
 CellChangeTimes->{
  3.581743397796723*^9, {3.5817434602882185`*^9, 3.5817434672806168`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"transM", "[", 
    RowBox[{"v_", ",", "vM_", ",", "dM_"}], "]"}], ":=", 
   RowBox[{"LogisticFunc", "[", 
    RowBox[{"2", 
     FractionBox[
      RowBox[{"v", "-", 
       RowBox[{"vM", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "dM"}], ")"}]}]}], 
      RowBox[{"vM", " ", "dM"}]]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.581743838275891*^9, 3.581743901041167*^9}, {
   3.581743965727635*^9, 3.581743976835746*^9}, 3.58174461825602*^9, 
   3.58174465101502*^9, 3.581745588028863*^9, {3.584015575419362*^9, 
   3.5840155775164824`*^9}, {3.62918572163066*^9, 3.629185726796168*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CdW", "=", 
  RowBox[{"CdW0", " ", 
   RowBox[{"transM", "[", 
    RowBox[{"v", ",", "vM", ",", "dM"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.58174462447202*^9, 3.58174463683502*^9}, {
  3.5817465665257025`*^9, 3.581746591020152*^9}}],

Cell[BoxData[
 FractionBox["0.0265`", 
  RowBox[{"1", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "66.66666666666667`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.97`"}], "+", "v"}], ")"}]}]]}]]], "Output",
 CellChangeTimes->{
  3.581746215885642*^9, 3.581746400264078*^9, 3.5817466005271025`*^9, 
   3.5817550094372644`*^9, 3.5817808909956045`*^9, 3.5818268610326595`*^9, 
   3.5823513319638586`*^9, 3.584025091192633*^9, 3.584025262423427*^9, 
   3.5840253809852085`*^9, 3.5840254230556145`*^9, 3.5840254587966585`*^9, 
   3.585372039557765*^9, 3.5853721241802263`*^9, 3.585372246378445*^9, 
   3.6124578287763424`*^9, 3.6124580983917637`*^9, 3.6124581801074376`*^9, {
   3.612458310590901*^9, 3.6124583162672253`*^9}, 3.6131936071706543`*^9, 
   3.6131936507980165`*^9, 3.613193689317868*^9, 3.613193846151189*^9, 
   3.620711551107667*^9, 3.620711593619918*^9, 3.6208448029766054`*^9, 
   3.632773915423045*^9, 3.633155592087697*^9, 3.6515618044125385`*^9, 
   3.6663733884370575`*^9, 3.666373515503748*^9, 3.6663737270422373`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CdW0", "=", "0.0265"}], ";", 
  RowBox[{"vM", "=", "1"}], ";", 
  RowBox[{"dM", "=", "0.03"}], ";", 
  RowBox[{"en", "=", "E"}], ";"}]], "Input",
 CellChangeTimes->{{3.666373391489277*^9, 3.666373398289732*^9}, {
   3.6663734711558466`*^9, 3.6663735019690084`*^9}, {3.666373561862694*^9, 
   3.666373565098102*^9}, 3.6663737061452875`*^9, 3.66637375610106*^9}],

Cell[CellGroupData[{

Cell[BoxData["CdW"], "Input",
 CellChangeTimes->{3.666373533500602*^9}],

Cell[BoxData[
 FractionBox["0.0265`", 
  RowBox[{"1", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "66.66666666666667`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.97`"}], "+", "v"}], ")"}]}]]}]]], "Output",
 CellChangeTimes->{{3.6663735281722207`*^9, 3.6663735445286083`*^9}, {
  3.66637371388593*^9, 3.666373727070222*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"0.0171", "+", "CdW"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0.4", ",", "1.2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.06"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.666373329964795*^9, 3.666373383620715*^9}, {
  3.666373594949537*^9, 3.666373637650182*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
N5mjR+dgjPUcG+b/AyNKOdQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{240.5632449020036, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.40000001632653065`, 1.1999999836734694`}, {0, 0.06}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.666373505305018*^9, 3.6663735678809505`*^9}, {
  3.666373600341357*^9, 3.6663736384222527`*^9}, {3.6663737096014967`*^9, 
  3.6663737271289806`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CdW0", "=."}], ";", 
  RowBox[{"vM", "=."}], ";", 
  RowBox[{"dM", "=."}], ";", 
  RowBox[{"en", "=."}], ";"}]], "Input",
 CellChangeTimes->{{3.66637376878769*^9, 3.666373775360511*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsXXm8TeX6TyjzlCFDHDIVIsOVjinKTa5EQoMGSSPJUFSGEpUGlVARuqlk
SiEkQjLP8zxzjMdB3dvl7PX+vr/1/azn8+y1zz6cY5+ztmN9/9iftdd617ve
8fk+zzs8b+kOL7bqdPVVV13VPRt+Wj3xyh3duj3R+/4s+NOod4+nOmTGRedM
V13VFWH+/9r48OHDhw8fPnz48OHDhw8fPnz48OHDhw8fPnz48OHDhw8fPnz4
8OHDhw8fPnz48OHDhw8fPnz48OHDhw8fPnz48OHDhw8fPnz48OHDhw8fPnz4
8OHDhw8fPnz48OHDhw8fPnz48OHDhw8fPnz48OHDhw8fPnz48OHDhw8fPnz4
8OHDR8aC5cOHDx8+Mha8JpYrFF5Xuw8fPnz4iDC8JpYrFF5Xuw8fPnz4iDC8
JpYrFF5Xuw8fPnz4iDC8JpYrFF5Xuw8fPnz4iDC8JpYrFF5Xuw8fPnz4iDC8
JpYrFF5Xuw8fPnz4iDC8JpYrFF5Xuw8fPnz4iDC8JpYrFF5Xe1gweYmJiefP
n5fUBgIB/jIAnuKXAf73v//x/jkbOnfyIoGQfBc3//77b0Yi8eAmLhADfvku
fhEmdelPOwTCIKXpiVS+woUPl079Iv6yolnmKYJX5eAjskhpPaZ1PJc7Ui1Y
fFwKvK72sADr/fe//6Xg5R0IW3IfSFAEMkmQ9KelNDnRstsVw/Bd3ES0JpiU
XZRqOb1SiojkmzwvXGTBRqq/h/tuYhikNJ5Ipeciw18wnpQipemPVL58+IgG
RKof+UgRvK72sDAOA1o2nfHCOGTHm7QuLZt8JbzQnHCxhCeTyh2xQKUoGI9R
hq2ET2kBppQ3w4WPNh6PeDz8m+oG6VU5+PARzbig5PeRFvC62sNCUqhZj484
nOsKBm7lBWUjGYeWrLCkQAxSS5E1glnB8lYSkwx/pdQeTGuktKLDpT+l8aRA
FbDB0QbCVdQpQoSL76LzldbfvdKQ0vYWDn59EeHK00eawutqDwtSknHMQ47f
yk1wH+1TYw/hSl5InXLxn//8R2ZXGQaBAzY54nW5xq9EosW7LqhIjaOmlL8i
VXHRFk9aI5xcDZf+lMrhtA6f1vH4yNhIqTzxERF4Xe1hweTROCWTMrUHDhxY
sWLFkiVLTp8+bWx6ksAMw0HdU6dOffvtt2/bmDdv3smTJ42z1ggXGzZs+OCD
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
3gE7/tChQx9//HEOBRu1djSqwGajl7MaW0aBT4cPH26cuWAiA6/DMY6Zw3H7
s2fP1q1bt3jx4n/++accYiINKQrrMWMjlE/ffPNNPpKWmbFdTqUhZ/gID6+r
PeogA3S4uP3220ET9KMbqfjFgYNRVio4aOnSpdmzZz98+LB83XKcNUUVxPyU
JoRExsfHZ8qUadCgQfxLL/0ZXl5ZjoN6lAnM0ty5c3OqnYfuMYA+0MRHuiGU
TwcMGMCK0E03Aw+hpBVh+EgWXld71EFKBqKyefPmoInI8qkJXk3Eb4GAnnji
CfCpVAqtvCjctxhw1icbWzRRcJ0+fTpr1qyffPKJ5VAtLdMMLK+0Gb5v377S
pUu///77xlYnpFiMsyo7A/gxvrwQyqcvvPACq0wCWBn6vJ405Awf4eF1tUcd
pKOhcO65554sWbJs3bo1guOWuuQ50QZhu2LFCnxozJgxsgs1Uv7qIw6jPNby
zqJFi7p16wZDvnr16n/88QeHgvVBNhkScogbclq5cuXY2Fi6yg/tX7zvdXqv
LITyab9+/fRavkBGd7KR1sThI0l4Xe3RCCmWe++9l/OnEex6uthl+W67du2u
u+6648ePy+kzUVtBMjlo2YOZ/fv3v/HGG/PkyVOuXLncuXPnz5//1VdfPXz4
MBkkCtMfKQiZLlmyBBlfs2aNPNLLm6O2HjM2QvmUkxEBZze3VJDXKU0rpAd5
+AiB19UedZCSQb/jEaJxcXERLCiZP5WNMPv27YNAnjJlilEOkYgo7O/SbJDU
AQMGFC1adPTo0X/99dfff/8NNeDLL78sUaJE2bJltUDLkGDuZsyYkTlzZlCq
cXbNyAIk/OKObCDyOr1XFkL59Pnnn6cKZNl9UDZ3e53StEI6cIePUHhd7VEH
Tg5y2W2rVq3ApzAbI1hQAeVmgdryqFGjwEEJCQn65FDQU3Su5+FANH63bNmS
I0eO6dOn03+UcZxUzJo1q3jx4mfPns3YW2aMvb8JVvl1113HNb1GHZNqnBlk
uel1eq8shPLpe++9Z5Rjz6idT4kU0p9KfJiM25wuBTxdC4VD+3T//v0sK1hh
Rp1EnLrSk5IXH/j33nvvoEGDIpyHS4YJXjGl1Qz+hSkKPmVZrVq1atGiRdu2
bWOwPn36fPHFF3zRNeYpN73O38XCOIancKXlKBUdOnTImTPnL7/8IgPgl1G+
MiqMWnfN62LFiqEXd+nSRdYjGceJirdJTVNEnCl8XAy8rvaoA4sFNAFrq1Gj
Rrlz5+bqIDE3ZAFnqu0O47AMOjjsu0yZMkXhvhjZsKNdOVnKt1716tXbtm17
4sQJ7irKbOOmm27asWPHtGnTKlWqJDaCFBf9BV1edoFeqWvZ06asdxjg2bNn
p9rA09v9DhUNCDhHMqELs63mypUL9mmPHj3Yy64E512Wz6cewetqjzrIYB26
ZIsWLa655hqISnF7LkYlkYp1m9yeyV0niLZChQqgniisCHH8m2TGkYVrr712
ypQpzZo1A5m2b99+4sSJY8aMAaWWKFFi4cKFkGCLFy8WH4lGuVi0Lqt9Csax
aFhrqDKYqydPnmzZsmXPnj2FbUXx8Dq9VzqMrcKxw1KLu/7667NmzdqnTx+9
boGBMzClpjlz+EgKXld71EGOhEa/a926NXihe/fuP/300y+//PL7778vWLBg
9uzZ8fHxl2JkGWfw8MCBA1myZIE1F4X2qVEj21bIMHXz5s1RMnnz5s2TJ8+s
WbOM43B406ZNVapUgeEGPaROnTqyIIf+hy1l7nmcvYuGrGemavEfG48//ji0
CI4f0jLN8PsZLyNIW2XF1atXD5Ul63v1kj+fT31EFl5Xe9SBIpGikue1gRqy
ZcuWI0cO0ARJBJSqB4FTGj/nHEExY8eOrVu3bnTWgjQPYUDu5UGyhw8fjmLJ
nTs3fj/88ENhHIQ8e/bs/PnzUWJ4lClTpu+//96oRcsk1strM6ax11lZyk/d
kSNHChQoAHvH5R+Ay8w8TayP/+9fEydOHDFiBDrpmDFj3n///fz586Mp0tuG
nm4wPp/6iDS8rvaog6wtMbY/B/ACTDBYkUWKFMEFyLRUqVLz5s1LtX1qnBnY
/fv316xZc/LkySYq/dzKWatWcN+EbZ41a9Y77rijZMmSOXPmPHTokHHc+XLM
E3mpUKFCrly5qlatWrRo0UWLFpFoaKhedoeXGcfMkWPvevbsiYo7c+YMcy2u
jP3x3mgAlFW0Omh0PFYGmjBVOyh+xiFQcwUsuk4P8vARAq+rPepgHMGI3yZN
mlx77bV79uyhixvK1T///DPgnHqZigI0tmSGEO7bt2+hQoVo8UVhRbB5SNqY
7KVLl8bExDzyyCOwQ/ft21e7du1ixYp16dJl2rRpe/fu3b1796efflq2bFnY
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
+fLlc+Jgf4dxuR76KeM5OLGK/5kmGMWnvAM+xSguUaKEHrBysKx/JY0uIs4U
FqmB382eIgLeSVUcsxQyFSpUKFCgACQMBggG9XfffScTUePprUiPlFOmTAGT
Ig1TgjSfeOIJifHSqlUrzPkxa82dOzc+kQAXs2bNkqw41rj/dPLkyTY+kkWU
gO5KV16jAokYb374119/oQd26NCBG1F95C8ZX9OmTUOROEzikE8FYrPatGkT
4+FriWf51CIa8LvZU4TxDF+QJMadtNetWxdMWq5cOaiNDz74YI4cOXLlygWB
Q5WTCqxxl5ww5EG7YMyRI0eeOnVq8+bNxYoVw3937tyJBIcPHwbV4u8333wz
5v/4FxRYJG7YsCGy0rbf4cOHYyT+8ssv8VxRFhkaOjC1nIBGMj1y5Mj1118P
ImC/xUDwcV4no2z8+PEYPpgDcLj5VZ6UoMPzssz0jg7x741b/+RIISbsYREK
v5s9RegwmxgIy5cvp5o5e/ZsjIVjx47VqVMHd1599VUukhpl7H3mmWfwE+jy
xIkTvH/LLbfgzqhRo/B13759YE98HT16tOMe04yxhjuyv48RafA5ePBgPHHO
nDmZeB5r4S9kyV7cjdCZGYnoww8/BHONHTuWJhd/t0waj4MwvcyaNSsXRHws
Txh/BikYC8x4+PTv1Yc/xrkAPE/EgDssksPvZk8RIl54MWzYMDBgyZIlGeYa
d/r27YthUr9+fX1SJKOjQHvNly/f0KFDKYiA/v374+8tWrTA30+ePFm+fPmr
rrpqw4YN+BcU0otc3HXXXcxKBh0fSjtwUgrwu54sMjak3zrBcn7Xrl3ookWL
FoWWKqPVx/5GQkcB5s6di3End/wqT0p8qoUbv27evBkTAOqnjnKsEoNwpkR0
acMiBfjd7ClCZuP01qhbty6orX379vTcOH36NDRWhj3ZvXs330WceFu3bo3E
n376KTVNpP/uu++QOEeOHMwWeSIHcOvatWvBrUhcvXp10KtxDcuiGoORc+bM
OW7cOHDuf1OAz9VkkcGhVSrpeIcOHYI+lSdPHszo2Ksdv51/jLf+wuNaWM44
5FPHCz3heHtm169fT/3U8qlFtOF3s6cI49m+jLtqU6dOnYSEhKZNm9JRHz/t
2LGDeiV4UNY9SZetWrWiOZebZfAr+TRbtmzMk/lDMmCU5c2bt3DhwsuWLXPU
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
cVNYkyZNtm3bJisiuIDcd/i+KKes7Y2axneyp4z2tg7IiYpndJZHB3MkIlXz
TnVVXNQ1k/01L7/8cvfu3Xv37j1o0CDdn9WDYEHUy8P1rrvuQkl86qmnPEVD
yjg1mInQcdspKx8AWVNYWCg9Tamm8Am68BQriB/UutwCifrHqXZIDDOSi/pW
uF+3bh3H9m+88cZ58+b16NGDM+x79uwRyy7qoS9atAjCFOEdOnTo1KlTuTP3
a1/7WhAOVsgMo8+wnQqnGniUCO3ataOiAyaxpJRepASba9asYeNh/PjxX//6
17n/9KabbtKWZYIjPuiyj0xbUFAAn8s+1rFjxwZRHgiizjsnTLlwYtasWczA
ffv2RXifffZZnQdiGN5UOTdxYHxBfCd7yiStDKEJ+1x6D4ueHpLVCFKTsJTJ
bCn15wt9+vTh3hnuLtTLPPg5blhyR40a5SseUkXPDq9cuZJ9tOzs7Ntuu43a
Gjt37ixzi2yBUB7dd999qJOvvvrq48eP7927F0GG5Z/97GeMipNKV3+scGof
xI9//GMKUO7kRTA51f7QQw85NdjLG64V79KlCx/z8vKQ1h07dpQzX1ws17ue
rHi0CnxIrVxUboAUlF3PLmoowv6RI0cgUPCWzUi8nTZtGj5Bk0lGaaQZFiuc
6oa7UC/35ZdfPmDAAC5KRFuI1k4qBc7MsZSn3HqMV+PGjYPJlClT+Daemfkc
qAFZYZwZ38nuDYmB/Px86lS5/fbbUZeiVU9NR1qS8ob9VjzyBCiUSh5qJg1a
KYwxXM8g4YXfevXqBc8/8MADVAdx+PBhHnU3c+ZMV/FkMVQ7VCiELt6dd945
YsSIV199FX15ruugtXjuP+V4BaVG79692a0WD0NqUB8RR/YkffHq448/Pi/U
nvTII4988MEHVACLJpYktHR70wKIS4pUV3HJDWVraWnpxRdfnJmZKWpDXChx
AGPDxVXEuIprrSn9t2zZQpWYKMgyeKL3y+CKPM8lE8i0Bw8epJ4ltDBPqOOA
Y9h+SJXqFRPGWeI72b0hc4XocEE4XnPNNdQstHnzZlanrEZgGESVM6UPBAqH
SVEMIWL0Lhv2AYNYnqsoZ5jiCukA/xcWFrqotmSIklZx4GbJkiV4JcrxqFj4
5ptvDtTZYbHdh+uiZcmsYyFVXdTbmj17NqWMKO6QyUfcfOtb36JyP14ZVzLt
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
z34VlQWBEjE8NFwM66Q8DdTApiRoGu0DMk5PjUsO41T4TnZvSPC5CIG6jyBZ
Dh06JH0W2bAWRGdKSqUKO1yt5DEIKcHwJiL1pFp0OtW0kM2kTm1+DyqeNusq
dk6DWI4Hnh76nC0E2etUHpHUrqiT8lTXAFYh1D2qT0QYKeA72b3B4FOayMYK
OX4FglU6X06t2nXR1hiXbnJE7xV10fExJ9Whn/qtNCEkk8jwuOgICqKZpniu
/6yKRHTymlOTZU4pf5BFRxIJdVKeVp71ZhvJl3+M6qVGpIVxJnwnuzdORrA/
og9oEznCVQ1y6qWLal3p06VRHetUTyRQy7FcxRE/2TXgok6rU7OKrITlw/Lo
yPU0qodFgR6XrfIgNmkS8IaGEuS6Kk+DaHBGGkX1uUKoY9SQvDBOj+9k94ZT
WgSdOr5Ntq1JFOllG9KGj61e06pwanBbB02mQV2kBjwp1DIKqve8OyWUg1jq
c6gKJtmOHTtmzZq1Zs0aGWpIRIpeDxw48MQTT0ybNm3r1q1B3e2fBmp0Ra9N
8uslo7qoZjlhnB2+k90bDL4cKc55Q6lVuDCDgjWhjuSQTROxPafsNEiKi4CQ
09mScgUHvWknaZTYqd0E6VgJ07ff+c53Gjdu3L59+/Xr1zMpJSdMmDCBJ4mP
GzfO1d3+KXOybkqlXVIap6FapYRxtvhOdm9ITy2I5EIQSRDRyZA0DibmemGk
31CkRCJSWBGo5UkSKOljStdbJliTRra1GjqZVPUTpHPis88+69u3b8OGDSE3
IT0lLFzT26lTJ26zzcnJcXVXnibUXlr2zSvPqBrpS61IDyMZ38luGLUK5UhW
VhYVH3Xo0IFilNLk008/pUIh9E9HjBhh8sVIU3wLlnqK72Q3jFqFvW+eAEuK
iopYFtBvnTVrFnUiZWRkDB8+3AqIkab4FCr1GN/Jbhi1CrN9Tk6OHG/6wgsv
8DAv9FL79+9PQ/RSv/vd79axMV6j/uBXrNRbfCe7YdQqnPDNzs6mhn9eaYiO
avPmzRs2bDh69Gj0UiFPfXvWMM4R34KlnuI72Q2jVnHh8qqsrKwLLrjgww8/
7NKly4UXXsijYKdPn45O68iRI99++23I2eHDh6fRPiDD0PgWLPUU38luGLUK
dzkNGDAA8rSsrGzSpEkQnUOHDj1+/Hi/fv1wX1BQsHLlSvRPecarb/8axrng
W7DUU3wnu2HUKsz22dnZkJjFxcWHDh3iYaBTp07lst5EIpGfn4/7W265xQqI
kaZ4lSr1F9/Jbhi1igu1VQwcOBASMy8vD9KzRYsWuO/evTukakZGBiy88MIL
DRo0+N73vmf7ZYw0xbdgqaf4TnbDqFW4ZPfaa6+FDH3qqadQBCZOnHj++edz
m8xDDz30+eef//vf/8bjddddRz1RhpF2+BYs9RTfyW4YtQqz/aBBg0SeFhcX
t2nTBo+tW7cuKSmByZtvvonH3NxcKyBGmuJRptRnfCe7YdQ2J06cyM7OzsjI
mDNnTnl5+WeffTZy5MgLLrjghhtu+N///odCsXbt2gYNGuTk5ODRt2cN41zw
LVjqKb6T3TBqFY737ty58/nnny8tLQ3CmufYsWMrVqwoKysLooNiV61ahUcr
IEaa4luw1FN8J7th1CrM9jzsAI88ow33PPNUTkng1fqnRpriUabUZ3wnu2HU
Kp9//rk+oE2fVSeH3iYd82oYaUdtCxIjxHeyG0atIgfMueg4V3RRccOZU2p7
cNExbTzbzjDSDn8ipV7jO9kNo7ZhzhfBqgd4A3W6q5gYRtrhR5wYEb7T3zAM
w6gefMuT+o7v9DcMwzCqB9/ypL7jO/0NwzCM6sG3PKnv+E5/wzAMo3rwLU/q
O77T3zAMw6gefMuT+o7v9DcMwzCqB9/ypL7jO/0NwzCM6sG3PKnv+E5/wzAM
o3rwLU8MwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMI474Pk/AMAzDMOoCDQzD
MAzD+ML47h8bhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhvH//B9w
RLwE
    "], {{0, 365}, {624, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> {368.54546008228243`, Automatic},
     Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{368.54546008228243`, Automatic},
  ImageSizeRaw->{624, 365},
  PlotRange->{{0, 624}, {0, 365}}]], "Text",
 CellChangeTimes->{
  3.6291860646331987`*^9, {3.629186229436596*^9, 3.6291862482667565`*^9}, 
   3.6327735930326056`*^9, 3.6327738042336855`*^9}],

Cell["The lifts and drag are calculated from:", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CDflat", "=", "1."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CDfinflat", "=", "1."}], ";"}]}], "Input"],

Cell["\<\
The lift coefficients. This model assumes all moving tailplane that is used \
on supersonic aircraft.\
\>", "Text",
 CellChangeTimes->{
  3.534477326125*^9, {3.5785875232390127`*^9, 3.578587563121294*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CLl1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"CLift", "[", 
      RowBox[{
      "Alpha1", ",", "CLalpha1e", ",", "ap1", ",", "an1", ",", "awp1", ",", 
       "awn1"}], "]"}], "/", "2"}], "+", 
    RowBox[{"CLde1", " ", "del1"}], "+", 
    RowBox[{"CLde12", " ", "del12"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CLr1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"CLift", "[", 
      RowBox[{
      "Alpha1", ",", "CLalpha1e", ",", "ap1", ",", "an1", ",", "awp1", ",", 
       "awn1"}], "]"}], "/", "2"}], "+", 
    RowBox[{"CLde1", " ", "der1"}], "+", 
    RowBox[{"CLde12", " ", "der12"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CLl2", "=", 
   RowBox[{
    RowBox[{"CLift", "[", 
     RowBox[{
      RowBox[{"Alpha2", "+", "del2"}], ",", "CLalpha2e", ",", "ap2", ",", 
      "an2", ",", "awp2", ",", "awn2"}], "]"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CLr2", "=", 
   RowBox[{
    RowBox[{"CLift", "[", 
     RowBox[{
      RowBox[{"Alpha2", "+", "der2"}], ",", "CLalpha2e", ",", "ap2", ",", 
      "an2", ",", "awp2", ",", "awn2"}], "]"}], "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cdil1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"CDragInd", "[", 
      RowBox[{
      "Alpha1", ",", "AR1", ",", "e1e", ",", "CLalpha1e", ",", "ap1", ",", 
       "an1", ",", "awp1", ",", "awn1"}], "]"}], "/", "2"}], "+", 
    RowBox[{"Cdide1", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"del1", "-", "de10"}], ")"}], "2"]}], "+", 
    RowBox[{"Cdide12", "  ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"del12", "-", "de120"}], ")"}], "2"]}], "-", 
    RowBox[{"Cdide112", " ", 
     RowBox[{"(", 
      RowBox[{"del1", "-", "de10"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"del12", "-", "de120"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cdir1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"CDragInd", "[", 
      RowBox[{
      "Alpha1", ",", "AR1", ",", "e1e", ",", "CLalpha1e", ",", "ap1", ",", 
       "an1", ",", "awp1", ",", "awn1"}], "]"}], "/", "2"}], "+", 
    RowBox[{"Cdide1", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"der1", "-", "de10"}], ")"}], "2"]}], "+", 
    RowBox[{"Cdide12", "  ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"der12", "-", "de120"}], ")"}], "2"]}], "-", 
    RowBox[{"Cdide112", " ", 
     RowBox[{"(", 
      RowBox[{"der1", "-", "de10"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"der12", "-", "de120"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cdil2", "=", 
   RowBox[{
    RowBox[{"CDragInd", "[", 
     RowBox[{
      RowBox[{"Alpha2", "+", "del2"}], ",", "AR2", ",", "e2e", ",", 
      "CLalpha2e", ",", "ap2", ",", "an2", ",", "awp2", ",", "awn2"}], "]"}], 
    "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cdir2", "=", 
   RowBox[{
    RowBox[{"CDragInd", "[", 
     RowBox[{
      RowBox[{"Alpha2", "+", "der2"}], ",", "AR2", ",", "e2e", ",", 
      "CLalpha2e", ",", "ap2", ",", "an2", ",", "awp2", ",", "awn2"}], "]"}], 
    "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CLfin", " ", "=", " ", 
    RowBox[{"CLift", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Beta]"}], " ", "-", " ", 
       RowBox[{"CLdefin", " ", 
        RowBox[{"defin", "/", "CLalphafin"}]}]}], ",", " ", "CLalphafin", ",",
       " ", "afin", ",", " ", "afin", ",", " ", "awfin", ",", " ", "awfin"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cmr1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"CMoment", "[", 
      RowBox[{
      "Alpha1", ",", "Cm01", ",", "Cmfs1", ",", "ap1", ",", "an1", ",", 
       "awp1", ",", "awn1"}], "]"}], "/", "2"}], "-", 
    RowBox[{"Cmde1", " ", "der1"}], "-", 
    RowBox[{"Cmde12", " ", "der12"}], "-", 
    RowBox[{"CLr1", " ", 
     FractionBox["smc", "4"], " ", 
     RowBox[{"transM", "[", 
      RowBox[{"v", ",", "vM", ",", "dM"}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cml1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"CMoment", "[", 
      RowBox[{
      "Alpha1", ",", "Cm01", ",", "Cmfs1", ",", "ap1", ",", "an1", ",", 
       "awp1", ",", "awn1"}], "]"}], "/", "2"}], "-", 
    RowBox[{"Cmde1", " ", "del1"}], "-", 
    RowBox[{"Cmde12", " ", "del12"}], "-", 
    RowBox[{"CLl1", " ", 
     FractionBox["smc", "4"], " ", 
     RowBox[{"transM", "[", 
      RowBox[{"v", ",", "vM", ",", "dM"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.518678322859375*^9, 3.5186783538125*^9}, {
   3.534157342875*^9, 3.53415741446875*^9}, {3.53416716728125*^9, 
   3.534167197015625*^9}, {3.5341677299375*^9, 3.53416773265625*^9}, 
   3.534174289359375*^9, {3.534218084953125*^9, 3.534218114515625*^9}, {
   3.53421832103125*^9, 3.5342183315*^9}, {3.53421843934375*^9, 
   3.53421845734375*^9}, {3.5342185058125*^9, 3.5342185401875*^9}, {
   3.534220781015625*^9, 3.534220822203125*^9}, {3.53422107496875*^9, 
   3.534221128125*^9}, {3.53422493534375*^9, 3.534224996921875*^9}, {
   3.5342296561875*^9, 3.53422977696875*^9}, {3.5342298265*^9, 
   3.5342298719375*^9}, 3.534439902421875*^9, {3.53448100075*^9, 
   3.534481009796875*^9}, {3.534481041734375*^9, 3.534481147125*^9}, {
   3.534481319359375*^9, 3.534481324859375*^9}, {3.534481415546875*^9, 
   3.534481424734375*^9}, {3.53448154534375*^9, 3.534481563875*^9}, {
   3.53448165503125*^9, 3.534481664640625*^9}, {3.53448177309375*^9, 
   3.534481775609375*^9}, {3.53448181396875*^9, 3.53448181721875*^9}, {
   3.5381986429649677`*^9, 3.5381986897498107`*^9}, {3.538276360140625*^9, 
   3.538276385390625*^9}, {3.5388035282451506`*^9, 3.5388035417297845`*^9}, {
   3.5388051211667347`*^9, 3.5388051239167347`*^9}, {3.5388058568561125`*^9, 
   3.538805861871641*^9}, {3.538806392822195*^9, 3.53880641155657*^9}, {
   3.5388146117078753`*^9, 3.5388146180516253`*^9}, {3.5388316068239665`*^9, 
   3.538831621714687*^9}, {3.538929760515625*^9, 3.538929833890625*^9}, {
   3.578587332113081*^9, 3.5785873611487417`*^9}, {3.578587397553824*^9, 
   3.578587402173088*^9}, {3.5785874548411007`*^9, 3.578587457615259*^9}, {
   3.5817374867846437`*^9, 3.5817374938256435`*^9}, {3.5817385281089087`*^9, 
   3.581738557939891*^9}, {3.58178066572672*^9, 3.5817807516456347`*^9}, {
   3.5817808123151045`*^9, 3.581780835070406*^9}, {3.5817808714474864`*^9, 
   3.581780875052693*^9}, {3.581820866255924*^9, 3.581820875305924*^9}, {
   3.5840152953123407`*^9, 3.584015328255225*^9}, {3.5840245657565804`*^9, 
   3.584024573262009*^9}, {3.589527894355874*^9, 3.589527920863613*^9}, {
   3.6648905254982452`*^9, 3.6648905262374268`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CL1expr", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"CLl1", " ", "+", " ", "CLr1"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CL2expr", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"CLl2", " ", "+", " ", "CLr2"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cd1expr", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"Cdl1", " ", "+", " ", "Cdr1"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cd2expr", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"Cdl2", " ", "+", " ", "Cdr2"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CLtotexpr", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CLl1", " ", "+", " ", "CLr1"}], ")"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"CLl2", " ", "+", " ", "CLr2"}], ")"}], 
     RowBox[{"S2", "/", "S1"}]}], "+", 
    RowBox[{"CLbh", " ", 
     RowBox[{"Sbh", "/", "S1"}]}]}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CDtotexpr", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Cdl1", " ", "+", " ", "Cdr1"}], ")"}], "+", "CdW", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Cdl2", " ", "+", " ", "Cdr2"}], ")"}], 
      RowBox[{"S2", "/", "S1"}]}], "+", 
     RowBox[{"Cd0b", " ", 
      RowBox[{"Sbh", "/", "S1"}]}], "+", " ", 
     RowBox[{"Cd0fin", " ", 
      RowBox[{"Sfin", "/", "S1"}]}]}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CLbh", " ", "=", " ", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", "CLalphabh"}]}], ";"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"CLbv", " ", "=", " ", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"-", "\[Beta]"}], "]"}], " ", "CLalphabv"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Alpha1", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", "dah1"}], "-", " ", "ia1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Alpha2", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", "dah2"}], " ", "-", " ", "ia2"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.538806418478445*^9, 3.538806436415945*^9}, {
   3.538831622699068*^9, 3.5388316237928247`*^9}, 3.548386592684738*^9, {
   3.5769929901985025`*^9, 3.576993029541436*^9}, {3.576993077060188*^9, 
   3.576993081415623*^9}, {3.5769931136298447`*^9, 3.5769931792664075`*^9}, 
   3.5769933563741164`*^9, 3.576993482176633*^9, 3.576993722367633*^9, 
   3.581737485333644*^9, {3.581738549799077*^9, 3.5817385806421614`*^9}, {
   3.581745489745035*^9, 3.58174549188925*^9}, 3.5817549615575256`*^9, 
   3.582351257274501*^9, 3.582351291254899*^9, 3.632773866364239*^9}],

Cell[CellGroupData[{

Cell["Weight and balance", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"massexpr", "=", 
   RowBox[{"Me", "+", "Mfuel", "+", "Mcargo"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xbcgexpr", " ", "=", " ", 
   RowBox[{
    FractionBox["1", "mass"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Me", " ", "xbcge"}], " ", "+", " ", 
      RowBox[{"Mfuel", " ", "xfuel"}], "+", 
      RowBox[{"Mcargo", " ", "xcargo"}]}], ")"}]}]}], ";"}]], "Input"]
}, Open  ]],

Cell["LocalExpressions", "Subsection",
 Evaluatable->False],

Cell["\<\
The geometric data is made dimmensionless using wingspan or mean aerodynamic \
cord mac (here derived from the standard mean cord and a dimensionless factor \
mac0) as reference. In this way the whole aircraft is rescaled if aspect \
ratio or wing reference area is changed.\
\>", "Text",
 CellChangeTimes->{{3.6207099346720395`*^9, 3.62071003018859*^9}, {
  3.6207100976793385`*^9, 3.620710109872558*^9}, {3.633530589937418*^9, 
  3.6335305909624767`*^9}, {3.633530623574342*^9, 3.633530647693722*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"localExpressions", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b1", ",", 
       SqrtBox[
        RowBox[{"S1", " ", "AR1"}]], ",", "\"\<m\>\"", ",", 
       "\"\<Wing span 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"b2", ",", 
       SqrtBox[
        RowBox[{"S2", " ", "AR2"}]], ",", "\"\<m\>\"", ",", 
       "\"\<Wing span 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"smc", ",", 
       SqrtBox[
        RowBox[{"S1", " ", "/", "AR1"}]], ",", "\"\<m\>\"", ",", 
       "\"\<Standard aerodynamic chord\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"mac", ",", 
       RowBox[{"mac0", " ", "smc"}], ",", "\"\<m\>\"", ",", 
       "\"\<Mean aerodynamic chord\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"{", 
      RowBox[{"hthrust", ",", 
       RowBox[{"hthrust0", " ", "b1"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<engine vert. pos\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Ix", ",", 
       RowBox[{"Ix0", " ", "Me", " ", "S1", " ", "AR1"}], ",", "double", ",", 
       "\"\< \>\"", ",", "\"\<Inertia moment Ix/(Me S1 AR1)\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Ixz", ",", 
       RowBox[{"Ixz0", " ", "Me", " ", "S1"}], ",", "double", ",", 
       "\"\< \>\"", ",", "\"\<Inertia moment\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Iy", ",", 
       RowBox[{"Iy0", " ", "Me", " ", 
        RowBox[{"S1", "/", "AR1"}]}], ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<Inertia moment Iy/(Me S1/AR1)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Iz", ",", 
       RowBox[{"Iz0", " ", "Me", " ", 
        RowBox[{"S1", " ", "/", "AR1"}]}], ",", "double", ",", "\"\< \>\"", 
       ",", "\"\<Inertia moment Iy/(Me S1/AR1)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"lc1", ",", 
       RowBox[{"lc10", " ", "mac"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. ctrl surf. 1 ac fr hinge lc1/sqrt(AR1 S1)\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"lc2", ",", 
       RowBox[{"lc20", " ", "mac"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. ctrl surf. 2 ac fr hinge lc1/sqrt(AR1 S1)\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"lc12", ",", 
       RowBox[{"lc120", " ", "mac"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. flap 1 ac fr hinge\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"lcfin", ",", 
       RowBox[{"lcfin0", " ", "mac"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<ctrl s. fin ac fr hinge\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"rc1", ",", 
       RowBox[{"rc10", "  ", "b1"}], ",", "double", ",", "\"\<m\>\"", ",", 
       "\"\<norm. ctrl surface 1 mom. arm\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"rc12", ",", 
       RowBox[{"rc120", "  ", "b1"}], ",", "double", ",", "\"\<m\>\"", ",", 
       "\"\<norm. ctrl surface 12 mom. arm\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"rc2", ",", 
       RowBox[{"rc20", "  ", "b1"}], ",", "double", ",", "\"\<m\>\"", ",", 
       "\"\<norm. ctrl surface 1 mom. arm\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"rcfin", ",", 
       RowBox[{"rcfin0", " ", "mac"}], ",", "double", ",", "\"\<m\>\"", ",", 
       "\"\<norm. ctrl surf. fin mom. arm\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"S2", ",", 
       RowBox[{"S20", " ", "S1"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. wing area 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Sbh", ",", 
       RowBox[{"Sbh0", " ", "S1"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. hor. proj. area\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Sbv", ",", 
       RowBox[{"Sbv0", " ", "S1"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm.body vert. proj. area\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Sfin", ",", 
       RowBox[{"Sfin0", " ", "S1"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<norm. fin area\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xbach", ",", 
       RowBox[{"xbach0", " ", "mac"}], ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<body ac. hor.\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xbacv", ",", 
       RowBox[{"xbacv0", " ", "mac"}], ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<body ac vert.\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xbcge", ",", 
       RowBox[{"xbcge0", " ", "mac"}], ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<body cg\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xcargo", ",", 
       RowBox[{"xcargo0", " ", "mac"}], ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<cargo pos.\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xfuel", ",", 
       RowBox[{"xfuel0", " ", "mac"}], ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xw1", ",", 
       RowBox[{"xw10", " ", "mac"}], ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<wing1  position\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xw2", ",", 
       RowBox[{"xw20", " ", "mac"}], ",", "double", ",", "\"\< \>\"", ",", 
       "\"\<wing 2 position\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xwfin", ",", 
       RowBox[{"xwfin0", " ", "mac"}], ",", "double", ",", "\"\<\>\"", ",", 
       "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xeng", ",", 
       RowBox[{"xeng0", "  ", "mac"}], ",", "double", ",", "\"\<m\>\"", ",", 
       "\"\<engines x-pos\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"yeng", ",", 
       RowBox[{"yeng0", "  ", "b1"}], ",", "double", ",", "\"\<m\>\"", ",", 
       "\"\<engines off. from center\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"betaM", ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["v", "vM"], ")"}], "2"]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"epsM", " ", 
             FractionBox["v", "vM"]}], ")"}], "2"]}], ")"}], 
        RowBox[{"1", "/", "4"}]], ",", "double", ",", 
       "\"\<Mach effect on lift\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"CLalpha1e", ",", 
       RowBox[{"CLalpha1", "/", "betaM"}], ",", "double", ",", 
       "\"\<Effective lift sloop\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"CLalpha2e", ",", 
       RowBox[{"CLalpha2", "/", "betaM"}], ",", "double", ",", 
       "\"\<Effective lift sloop\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"e1e", ",", 
       RowBox[{"e1", " ", "-", 
        RowBox[{"e1", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", "AR1"]}], ")"}], " ", 
         RowBox[{"transM", "[", 
          RowBox[{"v", ",", "vM", ",", "dM"}], "]"}]}]}], ",", "double", ",", 
       "\"\<Effective oswald efficieny 1\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"e2e", ",", 
       RowBox[{"e2", " ", "-", 
        RowBox[{"e2", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", "AR2"]}], ")"}], " ", 
         RowBox[{"transM", "[", 
          RowBox[{"v", ",", "vM", ",", "dM"}], "]"}]}]}], ",", "double", ",", 
       "\"\<Effective oswald efficieny 2\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       SubscriptBox["v", "expr"], ",", "double", ",", 
       "\"\<Abs. value of speed\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       SubscriptBox["\[Alpha]", "expr"], ",", "double", ",", 
       "\"\<Angle of attack\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"q", ",", 
       SubscriptBox["q", "expr"], ",", "double", ",", 
       "\"\<Dynamic pressure\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", 
       SubscriptBox["\[Beta]", "expr"], ",", "double", ",", 
       "\"\<Slip angle\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "mass", " ", ",", "massexpr", ",", "double", ",", 
       "\"\<total AC-weight\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xbcg", ",", " ", "xbcgexpr", ",", "double", ",", "\"\<AC-cg\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Dragl1", ",", "Dragl1expr", ",", "double", ",", 
       "\"\<Drag from wing 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Dragr1", ",", "Dragr1expr", ",", "double", ",", 
       "\"\<Drag from wing 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Liftl1", ",", "Liftl1expr", ",", "double", ",", 
       "\"\<Lift from wing 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Liftr1", ",", "Liftr1expr", ",", "double", ",", 
       "\"\<Lift from wing 1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Dragl2", ",", "Dragl2expr", ",", "double", ",", 
       "\"\<Drag from wing 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Dragr2", ",", "Dragr2expr", ",", "double", ",", 
       "\"\<Drag from wing 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Liftl2", ",", "Liftl2expr", ",", "double", ",", 
       "\"\<Lift from wing 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Liftr2", ",", "Liftr2expr", ",", "double", ",", 
       "\"\<Lift from wing 2\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Liftb", ",", "Liftbexpr", ",", "double", ",", 
       "\"\<Lift from body\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Dragb", ",", "Dragbexpr", ",", "double", ",", 
       "\"\<Drag from body\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cfin", ",", "Cfinexpr", ",", "double", ",", 
       "\"\<Force from vertical tail\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cl2", ",", "Cl2expr", ",", "double", ",", 
       "\"\<Side force from left canard\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Cr2", ",", "Cr2expr", ",", "double", ",", 
       "\"\<Side force from right canard\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "Dragfin", ",", "Dragfinexpr", ",", "double", ",", 
       "\"\<Drag from body\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["M", 
        OverscriptBox["\[Theta]", "."]], " ", ",", 
       SubscriptBox[
        SubscriptBox["M", 
         OverscriptBox["\[Theta]", 
          RowBox[{".", " "}]]], "expr"], ",", "double", ",", 
       "\"\<Damping term in pitch\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["M", 
        OverscriptBox["\[Psi]", "."]], ",", 
       SubscriptBox[
        SubscriptBox["M", 
         OverscriptBox["\[Psi]", "."]], 
        RowBox[{" ", "expr"}]], ",", "double", ",", 
       "\"\<Damping term in yaw\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Fx", ",", 
       RowBox[{
        RowBox[{"aircraft`F", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "double", ",", 
       "\"\<Force in x\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Fy", ",", 
       RowBox[{
        RowBox[{"aircraft`F", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "double", ",", 
       "\"\<Force in y\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Fz", ",", 
       RowBox[{
        RowBox[{"aircraft`F", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "double", ",", 
       "\"\<Force in z\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Lb", ",", 
       RowBox[{
        RowBox[{"aircraft`T", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "double", ",", 
       "\"\<moment on x-axis\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Mb", ",", 
       RowBox[{
        RowBox[{"aircraft`T", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "double", ",", 
       "\"\<moment on y-axis\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Nb", ",", 
       RowBox[{
        RowBox[{"aircraft`T", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "double", ",", 
       "\"\<moment on z-axis\>\""}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.446886190291441*^9, 3.518678404671875*^9, {3.518859856015625*^9, 
   3.518859872328125*^9}, {3.519443135515625*^9, 3.51944313903125*^9}, {
   3.522041884674801*^9, 3.5220418970179977`*^9}, {3.53448132590625*^9, 
   3.53448132765625*^9}, {3.534481426109375*^9, 3.53448142834375*^9}, {
   3.53448156546875*^9, 3.534481573671875*^9}, {3.534481665765625*^9, 
   3.53448166796875*^9}, {3.5344857835625*^9, 3.53448579675*^9}, {
   3.5382217251171556`*^9, 3.538221797569353*^9}, 3.538285079529546*^9, {
   3.5382882328492737`*^9, 3.538288239583606*^9}, 3.5547974635625*^9, {
   3.556274268232908*^9, 3.556274269732975*^9}, {3.556274362877773*^9, 
   3.556274364299711*^9}, {3.556296130140625*^9, 3.55629613940625*^9}, {
   3.5563351520294237`*^9, 3.5563351536386957`*^9}, {3.56802995458747*^9, 
   3.5680299590599174`*^9}, 3.5795823425412207`*^9, {3.5795824880617714`*^9, 
   3.579582488833849*^9}, {3.5840153974071803`*^9, 3.5840155285066786`*^9}, {
   3.5840156380089417`*^9, 3.5840156668645926`*^9}, 3.5840196864745007`*^9, {
   3.5840246108241577`*^9, 3.584024684242357*^9}, {3.5840247534843173`*^9, 
   3.5840248011400433`*^9}, {3.5840253028747406`*^9, 
   3.5840253052538767`*^9}, {3.5840253686585035`*^9, 3.584025370492608*^9}, {
   3.584025403639504*^9, 3.584025414189108*^9}, 3.584025453866377*^9, {
   3.5853716679487457`*^9, 3.58537173001336*^9}, {3.585371813974209*^9, 
   3.5853718795737686`*^9}, {3.5853719451133213`*^9, 
   3.5853719452133317`*^9}, {3.5853722332881365`*^9, 
   3.5853722367544827`*^9}, {3.5895277449014916`*^9, 3.58952788157575*^9}, {
   3.589527951387344*^9, 3.589527999608221*^9}, {3.5895288326556234`*^9, 
   3.5895288353855305`*^9}, {3.589528941420594*^9, 3.589528960435693*^9}, 
   3.608801991890525*^9, {3.612457641212614*^9, 3.61245769393563*^9}, 
   3.612458159049233*^9, {3.6125370908129425`*^9, 3.6125371030876446`*^9}, {
   3.6127045433744755`*^9, 3.612704599835555*^9}, {3.6131935232942677`*^9, 
   3.6131935859635334`*^9}, {3.613193792620189*^9, 3.613193816213189*^9}, {
   3.6207096438789883`*^9, 3.620709645678988*^9}, 3.620709689960988*^9, 
   3.620709720487988*^9, {3.6335306804665956`*^9, 3.633530682646721*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"expressions", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"expression", ",", "expressionVE", ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"AlphaAttack", ",", "\[Alpha]"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"BetaSlip", ",", "\[Beta]"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"altitude", ",", 
           RowBox[{"-", "zcg"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\[Phi]", ",", 
           SubscriptBox["\[Phi]", "expr"]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", 
           SubscriptBox["\[Theta]", "expr"]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\[Psi]", ",", 
           SubscriptBox["\[Psi]", "expr"]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"gfx", ",", 
           RowBox[{"Fx", "/", "mass"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"gfy", ",", 
           RowBox[{"Fy", "/", "mass"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"gfz", ",", 
           RowBox[{"Fz", "/", "mass"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Faz", ",", 
           RowBox[{
            RowBox[{"aircraft`aero`Fw", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Fax", ",", 
           RowBox[{
            RowBox[{"aircraft`aero`Fw", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"CL1", ",", "CLtotexpr"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Cd1", ",", "CDtotexpr"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Zxfin", ",", 
           RowBox[{"kafin", " ", "mTimestep"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Zxal1", ",", 
           RowBox[{"kal1", " ", "mTimestep"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Zxar1", ",", 
           RowBox[{"kar1", " ", "mTimestep"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Zxal12", ",", 
           RowBox[{"kal12", " ", "mTimestep"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Zxar12", ",", 
           RowBox[{"kar12", " ", "mTimestep"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Zxal2", ",", 
           RowBox[{"kal2", " ", "mTimestep"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Zxar2", ",", 
           RowBox[{"kar2", " ", "mTimestep"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}]}], "}"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.52203311498798*^9, {3.5220431780326705`*^9, 3.5220431826420155`*^9}, {
   3.5341584015*^9, 3.5341584655625*^9}, {3.534166960796875*^9, 
   3.53416696490625*^9}, {3.5341677573125*^9, 3.534167795625*^9}, {
   3.5341678845*^9, 3.534167886125*^9}, {3.53421817753125*^9, 
   3.534218197328125*^9}, {3.53421835015625*^9, 3.53421835984375*^9}, {
   3.534481328171875*^9, 3.534481328828125*^9}, {3.534481429359375*^9, 
   3.534481429890625*^9}, {3.534481575296875*^9, 3.5344815770625*^9}, {
   3.5344816690625*^9, 3.534481670578125*^9}, {3.534481776171875*^9, 
   3.53448177696875*^9}, {3.53448181796875*^9, 3.534481818453125*^9}, {
   3.5382218022255435`*^9, 3.5382218243502607`*^9}, {3.5382221810488195`*^9, 
   3.5382221828144217`*^9}, {3.5382224891341796`*^9, 3.538222493962459*^9}, 
   3.5382228682937813`*^9, {3.5382232291815233`*^9, 3.5382232292596474`*^9}, {
   3.5382235913018885`*^9, 3.538223594614346*^9}, {3.538236852375*^9, 
   3.538236859453125*^9}, {3.5382833251467714`*^9, 3.5382833341784835`*^9}, {
   3.5382841205825577`*^9, 3.538284126176272*^9}, {3.538284181754041*^9, 
   3.5382841900196133`*^9}, 3.538284304300132*^9, 3.5382882673646784`*^9, 
   3.5382899397912097`*^9, {3.5383951283415527`*^9, 3.538395132779024*^9}, 
   3.538395392714861*^9, {3.5383955818855247`*^9, 3.5383955903073463`*^9}, 
   3.538480304612813*^9, 3.538502019375*^9, {3.53850339046875*^9, 
   3.53850341325*^9}, {3.5385037604375*^9, 3.538503776453125*^9}, {
   3.5388060613230553`*^9, 3.538806062979295*^9}, {3.538806155056831*^9, 
   3.5388061645098953`*^9}, {3.5388295596132345`*^9, 3.538829589769677*^9}, {
   3.568148714015669*^9, 3.568148714106674*^9}, {3.5769934671326327`*^9, 
   3.576993487386633*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Compgen", "[", "file", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(delayedPart \
\[LeftDoubleBracket] \\(\\(1, 1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
longer than depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618046485624`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(xcg \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\[NoBreak] is longer than depth of object. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partd\\\", \
ButtonNote -> \\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618046625633`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(0.` \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\[NoBreak] is longer than depth of object. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partd\\\", \
ButtonNote -> \\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.651561804664564*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.651561804665564*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(101\\)\[NoBreak] of \[NoBreak]\\!\\({afin, \
an1, an2, ap1, ap2, AR1, AR2, ARfin, Cd01, Cd02, Cd0b, Cd0fin, CdW0, \
CLalpha1, CLalpha2, CLalphabh, CLalphabv, CLalphafin, CLde1, CLde12, Cdide1, \
Cdide12, Cdide112, de10, \\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\), \
Cmfs1, Cmde1, Cmde12, CLdefin, Cydeelev, dah1, dah2, en, e1, e2, efin, epsM, \
awfin, awn1, awn2, awp1, awp2, gamma1, gamma2, hthrust0, ia1, ia2, Ix0, \
\\(\\(\[LeftSkeleton] 50 \[RightSkeleton]\\)\\)}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Set::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.651561805468644*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(102\\)\[NoBreak] of \[NoBreak]\\!\\({afin, \
an1, an2, ap1, ap2, AR1, AR2, ARfin, Cd01, Cd02, Cd0b, Cd0fin, CdW0, \
CLalpha1, CLalpha2, CLalphabh, CLalphabv, CLalphafin, CLde1, CLde12, Cdide1, \
Cdide12, Cdide112, de10, \\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\), \
Cmfs1, Cmde1, Cmde12, CLdefin, Cydeelev, dah1, dah2, en, e1, e2, efin, epsM, \
awfin, awn1, awn2, awp1, awp2, gamma1, gamma2, hthrust0, ia1, ia2, Ix0, \
\\(\\(\[LeftSkeleton] 50 \[RightSkeleton]\\)\\)}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Set::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054716444`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(103\\)\[NoBreak] of \[NoBreak]\\!\\({afin, \
an1, an2, ap1, ap2, AR1, AR2, ARfin, Cd01, Cd02, Cd0b, Cd0fin, CdW0, \
CLalpha1, CLalpha2, CLalphabh, CLalphabv, CLalphafin, CLde1, CLde12, Cdide1, \
Cdide12, Cdide112, de10, \\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\), \
Cmfs1, Cmde1, Cmde12, CLdefin, Cydeelev, dah1, dah2, en, e1, e2, efin, epsM, \
awfin, awn1, awn2, awp1, awp2, gamma1, gamma2, hthrust0, ia1, ia2, Ix0, \
\\(\\(\[LeftSkeleton] 50 \[RightSkeleton]\\)\\)}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Set::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054736447`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Set :: partw\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054746447`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(101\\)\[NoBreak] of \[NoBreak]\\!\\({afin, \
an1, an2, ap1, ap2, AR1, AR2, ARfin, Cd01, Cd02, Cd0b, Cd0fin, CdW0, \
CLalpha1, CLalpha2, CLalphabh, CLalphabv, CLalphafin, CLde1, CLde12, Cdide1, \
Cdide12, Cdide112, de10, \\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\), \
Cmfs1, Cmde1, Cmde12, CLdefin, Cydeelev, dah1, dah2, en, e1, e2, efin, epsM, \
awfin, awn1, awn2, awp1, awp2, gamma1, gamma2, hthrust0, ia1, ia2, Ix0, \
\\(\\(\[LeftSkeleton] 50 \[RightSkeleton]\\)\\)}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.651561805475645*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(102\\)\[NoBreak] of \[NoBreak]\\!\\({afin, \
an1, an2, ap1, ap2, AR1, AR2, ARfin, Cd01, Cd02, Cd0b, Cd0fin, CdW0, \
CLalpha1, CLalpha2, CLalphabh, CLalphabv, CLalphafin, CLde1, CLde12, Cdide1, \
Cdide12, Cdide112, de10, \\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\), \
Cmfs1, Cmde1, Cmde12, CLdefin, Cydeelev, dah1, dah2, en, e1, e2, efin, epsM, \
awfin, awn1, awn2, awp1, awp2, gamma1, gamma2, hthrust0, ia1, ia2, Ix0, \
\\(\\(\[LeftSkeleton] 50 \[RightSkeleton]\\)\\)}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054766455`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(103\\)\[NoBreak] of \[NoBreak]\\!\\({afin, \
an1, an2, ap1, ap2, AR1, AR2, ARfin, Cd01, Cd02, Cd0b, Cd0fin, CdW0, \
CLalpha1, CLalpha2, CLalphabh, CLalphabv, CLalphafin, CLde1, CLde12, Cdide1, \
Cdide12, Cdide112, de10, \\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\), \
Cmfs1, Cmde1, Cmde12, CLdefin, Cydeelev, dah1, dah2, en, e1, e2, efin, epsM, \
awfin, awn1, awn2, awp1, awp2, gamma1, gamma2, hthrust0, ia1, ia2, Ix0, \
\\(\\(\[LeftSkeleton] 50 \[RightSkeleton]\\)\\)}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.651561805477645*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054796457`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"XMLElement", "::", "cntsList"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(XMLElement[\\(\\(\\\"modelobject\\\", \
\\(\\({\\(\\(\\\"typename\\\" \[Rule] \\\"AeroAircraft6DOFSS\\\"\\)\\), \
\\(\\(\\(\\(\\\"\\\" \[Ellipsis] \\\"\\\"\\)\\) \[Rule] \\(\\(\[LeftSkeleton] \
20 \[RightSkeleton]\\)\\)\\)\\)}\\)\\), \
\\(\\({\\(\\(XMLElement[\\(\\(\\\"icon\\\", \\(\\({\\(\\(\\\"isopath\\\" \
\[Rule] \\\"AeroAircraft6DOFSS.svg\\\"\\)\\), \\(\\(\\\"iconrotation\\\" \
\[Rule] \\\"ON\\\"\\)\\), \\(\\(\\\"userpath\\\" \[Rule] \
\\\"AeroAircraft6DOFSS.svg\\\"\\)\\)}\\)\\), \\(\\({}\\)\\)\\)\\)]\\)\\), \\(\
\\(XMLElement[\\(\\(\\\"portpositions\\\", \\(\\({}\\)\\), \
\\(\\({\\(\\(XMLElement[\\(\\(\\\"portpose\\\", \\(\\({\\(\\(\\\"x\\\" \
\[Rule] \\\"0\\\"\\)\\), \\(\\(\\\"y\\\" \[Rule] 0.125`\\)\\), \
\\(\\(\\\"a\\\" \[Rule] \\\"0\\\"\\)\\), \\(\\(\\\"name\\\" \[Rule] \
\\\"Pal1\\\"\\)\\)}\\)\\), \\(\\({}\\)\\)\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] \
49 \[RightSkeleton]\\)\\), \\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)}\\)\
\\)\\)\\)]\\)\\)}\\)\\)\\)\\)]\\)\[NoBreak] in \[NoBreak]\\!\\(XMLElement[\\(\
\\(\\\"hopsanobjectappearance\\\", \\(\\({\\\"version\\\" \[Rule] \
\\\"0.1\\\"}\\)\\), \\(\\(XMLElement[\\(\\(\\\"modelobject\\\", \\(\\({\\(\\(\
\\\"typename\\\" \[Rule] \\\"AeroAircraft6DOFSS\\\"\\)\\), \
\\(\\(\\\"displayname\\\" \[Rule] \\\"AeroAircraft6DOFSS\\\"\\)\\)}\\)\\), \
\\(\\({\\(\\(XMLElement[\\(\\(\\\"icon\\\", \\(\\({\\(\\(\\\"isopath\\\" \
\[Rule] \\\"AeroAircraft6DOFSS.svg\\\"\\)\\), \\(\\(\\\"iconrotation\\\" \
\[Rule] \\\"ON\\\"\\)\\), \\(\\(\\\"userpath\\\" \[Rule] \
\\\"AeroAircraft6DOFSS.svg\\\"\\)\\)}\\)\\), \\(\\({}\\)\\)\\)\\)]\\)\\), \\(\
\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)}\\)\\)\\)\\)]\\)\\)\\)\\)]\\)\
\[NoBreak] is not a list of contents. The third item in an XMLElement must be \
a list of contents, even if it is an empty list. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/XMLElement\\\", ButtonNote -> \
\\\"XMLElement::cntsList\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054806457`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Export", "::", "autofix"}], "MessageName"], ":", 
  " ", "\<\"Malformed symbolic XML expression encountered. This may result in \
unexpected XML data. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Export\\\", ButtonNote -> \\\"Export::autofix\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.651561805483646*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"XMLElement", "::", "attrhs"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(0.125`\\)\[NoBreak] in \[NoBreak]\\!\\(\\\"y\\\" \
\[Rule] 0.125`\\)\[NoBreak] is not a valid value for an attribute in an \
XMLElement. The value of the attribute must be a string. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/XMLElement\\\", ButtonNote -> \
\\\"XMLElement::attrhs\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.651561805484646*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Export", "::", "autofix"}], "MessageName"], ":", 
  " ", "\<\"Malformed symbolic XML expression encountered. This may result in \
unexpected XML data. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Export\\\", ButtonNote -> \\\"Export::autofix\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054856462`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"XMLElement", "::", "attrhs"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(0.25`\\)\[NoBreak] in \[NoBreak]\\!\\(\\\"y\\\" \
\[Rule] 0.25`\\)\[NoBreak] is not a valid value for an attribute in an \
XMLElement. The value of the attribute must be a string. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/XMLElement\\\", ButtonNote -> \
\\\"XMLElement::attrhs\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054866457`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Export", "::", "autofix"}], "MessageName"], ":", 
  " ", "\<\"Malformed symbolic XML expression encountered. This may result in \
unexpected XML data. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Export\\\", ButtonNote -> \\\"Export::autofix\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054886465`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Export :: \
autofix\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054896464`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"XMLElement", "::", "attrhs"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(0.375`\\)\[NoBreak] in \[NoBreak]\\!\\(\\\"y\\\" \
\[Rule] 0.375`\\)\[NoBreak] is not a valid value for an attribute in an \
XMLElement. The value of the attribute must be a string. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/XMLElement\\\", ButtonNote -> \
\\\"XMLElement::attrhs\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6515618054906464`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(XMLElement :: \
attrhs\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.651561805491647*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{1365, 841},
WindowMargins->{{79, Automatic}, {Automatic, 18}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
ShowCellLabel->True,
ShowCellTags->False,
Magnification->1.100000023841858,
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "WindowsANSI"],
PrivateNotebookOptions -> {"ColorPalette" -> {RGBColor, 128}},
RenderingOptions -> {"ObjectDithering" -> True},
RenderingOptions -> {"RasterDithering" -> False}
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 95, 1, 43, "Input"],
Cell[CellGroupData[{
Cell[665, 25, 105, 1, 71, "Title"],
Cell[773, 28, 133, 1, 25, "Subtitle"],
Cell[909, 31, 248, 4, 43, "Input"],
Cell[1160, 37, 124, 3, 43, "Input"],
Cell[1287, 42, 476, 12, 43, "Input"],
Cell[1766, 56, 1074, 17, 88, "Abstract"],
Cell[2843, 75, 200781, 3323, 240, 175833, 2913, "CachedBoxData", "BoxData", \
"Output"],
Cell[CellGroupData[{
Cell[203649, 3402, 2382, 46, 204, "Input"],
Cell[206034, 3450, 218, 5, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206289, 3460, 42, 0, 65, "Section"],
Cell[206334, 3462, 2417, 52, 1335, "Input"]
}, Closed]],
Cell[208766, 3517, 1259, 32, 140, "Input"],
Cell[CellGroupData[{
Cell[210050, 3553, 34, 0, 65, "Section"],
Cell[210087, 3555, 130, 2, 63, "Input"],
Cell[210220, 3559, 132, 2, 63, "Input"],
Cell[210355, 3563, 130, 2, 63, "Input"],
Cell[210488, 3567, 132, 2, 63, "Input"],
Cell[210623, 3571, 126, 2, 63, "Input"],
Cell[210752, 3575, 160, 3, 117, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210949, 3583, 61, 1, 65, "Section",
 Evaluatable->False],
Cell[211013, 3586, 200, 3, 32, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[211238, 3593, 114, 2, 40, "Subsection",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[CellGroupData[{
Cell[211377, 3599, 37, 0, 29, "Subsubsection"],
Cell[211417, 3601, 40, 0, 32, "Text"],
Cell[211460, 3603, 498, 15, 164, "Input"],
Cell[211961, 3620, 371, 13, 104, "Input"],
Cell[212335, 3635, 344, 10, 124, "Input"],
Cell[212682, 3647, 26, 0, 43, "Input"],
Cell[CellGroupData[{
Cell[212733, 3651, 50, 0, 29, "Subsubsection"],
Cell[212786, 3653, 137, 4, 32, "Text",
 Evaluatable->False],
Cell[212926, 3659, 5554, 129, 664, "Input"],
Cell[218483, 3790, 396, 7, 53, "Text",
 Evaluatable->False],
Cell[218882, 3799, 3235, 73, 364, "Input"],
Cell[222120, 3874, 1873, 45, 184, "Input"],
Cell[223996, 3921, 198, 5, 32, "Text",
 Evaluatable->False],
Cell[224197, 3928, 50296, 832, 421, "Text",
 Evaluatable->False],
Cell[274496, 4762, 18410, 402, 1724, "Input"],
Cell[292909, 5166, 87, 1, 32, "Text",
 Evaluatable->False],
Cell[292999, 5169, 54, 1, 43, "Input"],
Cell[293056, 5172, 137, 4, 32, "Text",
 Evaluatable->False]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293254, 5183, 34, 0, 40, "Subsection"],
Cell[293291, 5185, 190, 6, 32, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293530, 5197, 101, 2, 64, "Section",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[293656, 5203, 77, 2, 40, "Subsection",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[293736, 5207, 727, 23, 80, "Input"],
Cell[294466, 5232, 115, 3, 32, "Text"],
Cell[294584, 5237, 428, 15, 79, "Input"],
Cell[295015, 5254, 443, 15, 79, "Input"],
Cell[295461, 5271, 428, 15, 79, "Input"],
Cell[295892, 5288, 130, 3, 32, "Text"],
Cell[296025, 5293, 282, 9, 43, "Input"],
Cell[CellGroupData[{
Cell[296332, 5306, 91, 2, 43, "Input"],
Cell[296426, 5310, 7276, 138, 80, "Output"]
}, Open  ]],
Cell[303717, 5451, 1798, 54, 40, "DisplayFormula"],
Cell[305518, 5507, 60, 0, 35, "Text"],
Cell[305581, 5509, 1726, 56, 91, "Input"],
Cell[307310, 5567, 150, 3, 58, "Text"],
Cell[CellGroupData[{
Cell[307485, 5574, 2785, 82, 232, "Input"],
Cell[310273, 5658, 3757, 92, 190, "Output"]
}, Open  ]],
Cell[314045, 5753, 132, 3, 35, "Text"],
Cell[314180, 5758, 138, 4, 47, "Input"],
Cell[CellGroupData[{
Cell[314343, 5766, 91, 2, 47, "Input"],
Cell[314437, 5770, 7054, 137, 91, "Output"]
}, Open  ]],
Cell[321506, 5910, 183, 6, 35, "Text",
 Evaluatable->False],
Cell[321692, 5918, 284, 7, 27, "DisplayFormula"],
Cell[321979, 5927, 61, 0, 35, "Text"],
Cell[322043, 5929, 177, 4, 47, "Input"],
Cell[CellGroupData[{
Cell[322245, 5937, 229, 5, 47, "Input"],
Cell[322477, 5944, 5078, 74, 48, "Output"]
}, Open  ]],
Cell[327570, 6021, 157, 5, 35, "Text"],
Cell[327730, 6028, 326, 12, 84, "Input"],
Cell[328059, 6042, 444, 16, 104, "Input"],
Cell[328506, 6060, 268, 10, 84, "Input"],
Cell[328777, 6072, 51, 0, 35, "Text"],
Cell[328831, 6074, 128, 3, 47, "Input"],
Cell[328962, 6079, 52, 0, 35, "Text"],
Cell[329017, 6081, 135, 4, 47, "Input"],
Cell[329155, 6087, 53, 0, 35, "Text"],
Cell[329211, 6089, 222, 7, 47, "Input"],
Cell[329436, 6098, 52, 0, 35, "Text"],
Cell[329491, 6100, 142, 4, 47, "Input"],
Cell[329636, 6106, 75, 0, 35, "Text"],
Cell[329714, 6108, 521, 15, 70, "Input"],
Cell[330238, 6125, 46, 0, 35, "Text"],
Cell[330287, 6127, 159, 4, 27, "DisplayFormula"],
Cell[330449, 6133, 41, 0, 35, "Text"],
Cell[330493, 6135, 125, 3, 47, "Input"],
Cell[330621, 6140, 53, 0, 35, "Text"],
Cell[330677, 6142, 160, 5, 47, "Input"],
Cell[330840, 6149, 57, 0, 35, "Text"],
Cell[330900, 6151, 132, 4, 47, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331069, 6160, 42, 0, 44, "Subsection"],
Cell[331114, 6162, 73, 1, 35, "Text"],
Cell[331190, 6165, 720, 21, 69, "Input"],
Cell[331913, 6188, 77, 1, 35, "Text"],
Cell[331993, 6191, 44, 0, 35, "Text"],
Cell[332040, 6193, 200, 5, 27, "DisplayFormula"],
Cell[332243, 6200, 43, 0, 35, "Text"],
Cell[332289, 6202, 292, 10, 69, "Input"],
Cell[332584, 6214, 74, 1, 35, "Text"],
Cell[332661, 6217, 462, 13, 47, "Input"],
Cell[333126, 6232, 79, 1, 35, "Text"],
Cell[333208, 6235, 191, 6, 47, "Input"],
Cell[333402, 6243, 226, 6, 58, "Text"],
Cell[333631, 6251, 1887, 57, 238, "Input"],
Cell[335521, 6310, 139, 3, 35, "Text"],
Cell[335663, 6315, 1189, 40, 92, "Input"],
Cell[336855, 6357, 89, 2, 35, "Text"]
}, Open  ]],
Cell[336959, 6362, 121, 3, 35, "Text"],
Cell[337083, 6367, 336, 10, 47, "Input"],
Cell[CellGroupData[{
Cell[337444, 6381, 56, 0, 44, "Subsection"],
Cell[CellGroupData[{
Cell[337525, 6385, 70, 1, 47, "Input"],
Cell[337598, 6388, 7309, 142, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344944, 6535, 71, 1, 47, "Input"],
Cell[345018, 6538, 7577, 147, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352632, 6690, 74, 1, 47, "Input"],
Cell[352709, 6693, 6743, 130, 139, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359489, 6828, 75, 1, 47, "Input"],
Cell[359567, 6831, 7649, 153, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367253, 6989, 55, 0, 31, "Subsubsection"],
Cell[367311, 6991, 238, 6, 47, "Input"],
Cell[367552, 6999, 102, 3, 47, "Input"],
Cell[CellGroupData[{
Cell[367679, 7006, 74, 1, 47, "Input"],
Cell[367756, 7009, 12726, 308, 403, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[380543, 7324, 67, 0, 44, "Subsection"],
Cell[380613, 7326, 91735, 1516, 401, "Text"],
Cell[472351, 8844, 257, 6, 67, "Input"],
Cell[472611, 8852, 32, 0, 35, "Text"],
Cell[472646, 8854, 136, 2, 35, "Text"],
Cell[472785, 8858, 145, 4, 35, "Text",
 Evaluatable->False],
Cell[472933, 8864, 156, 4, 47, "Input"],
Cell[473092, 8870, 49, 0, 35, "Text"],
Cell[473144, 8872, 126, 3, 47, "Input"],
Cell[473273, 8877, 89, 2, 35, "Text"],
Cell[473365, 8881, 269, 9, 47, "Input"],
Cell[473637, 8892, 198, 5, 47, "Input"],
Cell[473838, 8899, 43, 0, 35, "Text"],
Cell[473884, 8901, 194, 4, 47, "Input"],
Cell[474081, 8907, 123, 2, 47, "Input"],
Cell[CellGroupData[{
Cell[474229, 8913, 51, 1, 31, "Subsubsection"],
Cell[474283, 8916, 51, 0, 35, "Text"],
Cell[474337, 8918, 449, 13, 84, "Input"],
Cell[CellGroupData[{
Cell[474811, 8935, 1780, 46, 147, "Input"],
Cell[476594, 8983, 110, 1, 48, "Output"]
}, Open  ]],
Cell[476719, 8987, 85, 2, 35, "Text"],
Cell[476807, 8991, 949, 22, 114, "Input"],
Cell[477759, 9015, 137, 1, 35, "Text"],
Cell[477899, 9018, 1381, 35, 136, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479317, 9058, 62, 1, 31, "Subsubsection"],
Cell[479382, 9061, 62, 0, 35, "Text"],
Cell[479447, 9063, 22, 0, 35, "Text"],
Cell[479472, 9065, 587, 16, 84, "Input"],
Cell[480062, 9083, 23, 0, 35, "Text"],
Cell[480088, 9085, 1560, 41, 92, "Input"],
Cell[481651, 9128, 70, 3, 58, "Text"],
Cell[481724, 9133, 613, 13, 70, "Input"],
Cell[482340, 9148, 656, 19, 92, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483033, 9172, 50, 1, 31, "Subsubsection"],
Cell[483086, 9175, 42810, 708, 359, "Text"],
Cell[525899, 9885, 22, 0, 35, "Text"],
Cell[525924, 9887, 268, 10, 84, "Input"],
Cell[526195, 9899, 23, 0, 35, "Text"],
Cell[526221, 9901, 461, 16, 93, "Input"],
Cell[526685, 9919, 61, 0, 35, "Text"],
Cell[526749, 9921, 345, 8, 47, "Input"],
Cell[527097, 9931, 367, 10, 92, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527501, 9946, 51, 1, 31, "Subsubsection"],
Cell[527555, 9949, 51, 0, 35, "Text"],
Cell[527609, 9951, 22, 0, 35, "Text"],
Cell[527634, 9953, 308, 11, 84, "Input"],
Cell[527945, 9966, 23, 0, 35, "Text"],
Cell[527971, 9968, 212, 8, 84, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528220, 9981, 77, 1, 31, "Subsubsection"],
Cell[528300, 9984, 56, 0, 35, "Text"],
Cell[528359, 9986, 1993, 47, 136, "Input"],
Cell[530355, 10035, 1300, 31, 114, "Input"],
Cell[531658, 10068, 180, 4, 35, "Text"]
}, Open  ]]
}, Open  ]],
Cell[531865, 10076, 527, 13, 84, "Input"],
Cell[532395, 10091, 180, 2, 35, "Text"],
Cell[532578, 10095, 610, 15, 85, "Input"],
Cell[CellGroupData[{
Cell[533213, 10114, 48, 0, 44, "Subsection"],
Cell[533264, 10116, 49, 0, 35, "Text"],
Cell[CellGroupData[{
Cell[533338, 10120, 62, 1, 43, "Input"],
Cell[533403, 10123, 2307, 55, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535747, 10183, 70, 1, 43, "Input"],
Cell[535820, 10186, 1810, 38, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537667, 10229, 70, 1, 43, "Input"],
Cell[537740, 10232, 5904, 147, 149, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543681, 10384, 70, 1, 43, "Input"],
Cell[543754, 10387, 1027, 29, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544818, 10421, 70, 1, 43, "Input"],
Cell[544891, 10424, 3229, 79, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548157, 10508, 68, 1, 43, "Input"],
Cell[548228, 10511, 1740, 36, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550005, 10552, 68, 1, 43, "Input"],
Cell[550076, 10555, 2628, 62, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552741, 10622, 69, 1, 47, "Input"],
Cell[552813, 10625, 1885, 40, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554735, 10670, 69, 1, 47, "Input"],
Cell[554807, 10673, 1728, 36, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556572, 10714, 66, 1, 47, "Input"],
Cell[556641, 10717, 2694, 59, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559372, 10781, 66, 1, 47, "Input"],
Cell[559441, 10784, 2991, 67, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562469, 10856, 68, 1, 47, "Input"],
Cell[562540, 10859, 5339, 121, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567916, 10985, 68, 1, 47, "Input"],
Cell[567987, 10988, 9712, 251, 165, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577736, 11244, 87, 1, 31, "Subsubsection"],
Cell[577826, 11247, 231, 7, 47, "Input"],
Cell[CellGroupData[{
Cell[578082, 11258, 72, 1, 43, "Input"],
Cell[578157, 11261, 2681, 58, 156, "Output"]
}, Open  ]],
Cell[580853, 11322, 52, 0, 32, "Text"],
Cell[580908, 11324, 152, 5, 35, "Text"],
Cell[581063, 11331, 19, 0, 32, "Text"],
Cell[581085, 11333, 152, 5, 35, "Text"],
Cell[581240, 11340, 33, 0, 32, "Text"],
Cell[581276, 11342, 615, 19, 66, "Input"],
Cell[581894, 11363, 590, 18, 65, "Input"],
Cell[582487, 11383, 510, 16, 65, "Input"],
Cell[583000, 11401, 515, 16, 65, "Input"],
Cell[583518, 11419, 34, 0, 32, "Text"],
Cell[583555, 11421, 463, 14, 61, "Input"],
Cell[584021, 11437, 463, 14, 61, "Input"],
Cell[584487, 11453, 434, 13, 61, "Input"],
Cell[584924, 11468, 32, 0, 32, "Text"],
Cell[584959, 11470, 370, 12, 65, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[585378, 11488, 55, 0, 40, "Subsection"],
Cell[585436, 11490, 4620, 120, 404, "Input"],
Cell[590059, 11612, 155, 3, 32, "Text"],
Cell[590217, 11617, 761, 21, 104, "Input"],
Cell[590981, 11640, 74, 1, 32, "Text",
 Evaluatable->False],
Cell[591058, 11643, 180, 6, 61, "Input"],
Cell[591241, 11651, 75, 2, 43, "Input"],
Cell[CellGroupData[{
Cell[591341, 11657, 298, 8, 43, "Input"],
Cell[591642, 11667, 1987, 62, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593666, 11734, 372, 9, 43, "Input"],
Cell[594041, 11745, 1984, 62, 67, "Output"]
}, Open  ]],
Cell[596040, 11810, 774, 22, 144, "Input"],
Cell[596817, 11834, 241, 8, 55, "Input"],
Cell[597061, 11844, 265, 7, 34, "Text"],
Cell[597329, 11853, 203, 6, 43, "Input"],
Cell[597535, 11861, 296, 10, 60, "Input"],
Cell[597834, 11873, 462, 14, 34, "Text"],
Cell[598299, 11889, 306, 9, 59, "Input"],
Cell[598608, 11900, 652, 16, 61, "Input"],
Cell[CellGroupData[{
Cell[599285, 11920, 263, 6, 43, "Input"],
Cell[599551, 11928, 1088, 20, 62, "Output"]
}, Open  ]],
Cell[600654, 11951, 395, 8, 43, "Input"],
Cell[CellGroupData[{
Cell[601074, 11963, 71, 1, 43, "Input"],
Cell[601148, 11966, 377, 10, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601562, 11981, 391, 10, 43, "Input"],
Cell[601956, 11993, 13893, 238, 202, "Output"]
}, Open  ]],
Cell[615864, 12234, 221, 6, 43, "Input"],
Cell[616088, 12242, 85683, 1411, 252, "Text"],
Cell[701774, 13655, 76, 1, 32, "Text",
 Evaluatable->False],
Cell[701853, 13658, 135, 4, 64, "Input"],
Cell[701991, 13664, 215, 5, 32, "Text"],
Cell[702209, 13671, 6679, 163, 312, "Input"]
}, Open  ]],
Cell[708903, 13837, 2524, 70, 264, "Input"],
Cell[CellGroupData[{
Cell[711452, 13911, 40, 0, 40, "Subsection"],
Cell[711495, 13913, 118, 3, 43, "Input"],
Cell[711616, 13918, 304, 9, 59, "Input"]
}, Open  ]],
Cell[711935, 13930, 59, 1, 40, "Subsection",
 Evaluatable->False],
Cell[711997, 13933, 513, 8, 49, "Text"],
Cell[712513, 13943, 16155, 369, 1480, "Input"],
Cell[728671, 14314, 5031, 112, 464, "Input"],
Cell[CellGroupData[{
Cell[733727, 14430, 63, 1, 43, "Input"],
Cell[733793, 14433, 521, 10, 23, "Message"],
Cell[734317, 14445, 496, 9, 23, "Message"],
Cell[734816, 14456, 494, 9, 23, "Message"],
Cell[735313, 14467, 515, 10, 23, "Message"],
Cell[735831, 14479, 883, 14, 62, "Message"],
Cell[736717, 14495, 885, 14, 62, "Message"],
Cell[737605, 14511, 885, 14, 62, "Message"],
Cell[738493, 14527, 514, 9, 23, "Message"],
Cell[739010, 14538, 885, 14, 62, "Message"],
Cell[739898, 14554, 887, 14, 62, "Message"],
Cell[740788, 14570, 885, 14, 62, "Message"],
Cell[741676, 14586, 517, 10, 23, "Message"],
Cell[742196, 14598, 2196, 33, 100, "Message"],
Cell[744395, 14633, 445, 9, 23, "Message"],
Cell[744843, 14644, 564, 10, 23, "Message"],
Cell[745410, 14656, 447, 9, 23, "Message"],
Cell[745860, 14667, 564, 10, 23, "Message"],
Cell[746427, 14679, 447, 9, 23, "Message"],
Cell[746877, 14690, 521, 10, 23, "Message"],
Cell[747401, 14702, 566, 10, 23, "Message"],
Cell[747970, 14714, 522, 10, 23, "Message"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
